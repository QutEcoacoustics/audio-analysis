//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.190
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.190.
// 
namespace CFRecorder.QutSensors.Services {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Service() {
            this.Url = "http://localhost:4761/QutSensors.WebService/Service.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mquter.qut.edu.au/sensors/AddPhotoReading", RequestNamespace="http://mquter.qut.edu.au/sensors/", ResponseNamespace="http://mquter.qut.edu.au/sensors/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddPhotoReading(string sensorGuid, System.DateTime time, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer) {
            this.Invoke("AddPhotoReading", new object[] {
                        sensorGuid,
                        time,
                        buffer});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddPhotoReading(string sensorGuid, System.DateTime time, byte[] buffer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddPhotoReading", new object[] {
                        sensorGuid,
                        time,
                        buffer}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddPhotoReading(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mquter.qut.edu.au/sensors/AddAudioReading", RequestNamespace="http://mquter.qut.edu.au/sensors/", ResponseNamespace="http://mquter.qut.edu.au/sensors/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddAudioReading(string sensorGuid, System.DateTime time, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer) {
            this.Invoke("AddAudioReading", new object[] {
                        sensorGuid,
                        time,
                        buffer});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddAudioReading(string sensorGuid, System.DateTime time, byte[] buffer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddAudioReading", new object[] {
                        sensorGuid,
                        time,
                        buffer}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddAudioReading(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mquter.qut.edu.au/sensors/AddSensor", RequestNamespace="http://mquter.qut.edu.au/sensors/", ResponseNamespace="http://mquter.qut.edu.au/sensors/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddSensor(System.Guid sensorID, string name) {
            this.Invoke("AddSensor", new object[] {
                        sensorID,
                        name});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddSensor(System.Guid sensorID, string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddSensor", new object[] {
                        sensorID,
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddSensor(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://mquter.qut.edu.au/sensors/FindSensor", RequestNamespace="http://mquter.qut.edu.au/sensors/", ResponseNamespace="http://mquter.qut.edu.au/sensors/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Sensor FindSensor(string name) {
            object[] results = this.Invoke("FindSensor", new object[] {
                        name});
            return ((Sensor)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFindSensor(string name, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FindSensor", new object[] {
                        name}, callback, asyncState);
        }
        
        /// <remarks/>
        public Sensor EndFindSensor(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Sensor)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class Sensor {
    }
}
