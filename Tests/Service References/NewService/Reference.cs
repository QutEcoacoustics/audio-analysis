//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebsiteTests.NewService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceStatus", Namespace="http://mquter.qut.edu.au/sensors/")]
    [System.SerializableAttribute()]
    public partial class DeviceStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid StatusIDField;
        
        private System.DateTime TimeField;
        
        private byte PowerLevelField;
        
        private int FreeMemoryField;
        
        private int MemoryUsageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public byte PowerLevel {
            get {
                return this.PowerLevelField;
            }
            set {
                if ((this.PowerLevelField.Equals(value) != true)) {
                    this.PowerLevelField = value;
                    this.RaisePropertyChanged("PowerLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int FreeMemory {
            get {
                return this.FreeMemoryField;
            }
            set {
                if ((this.FreeMemoryField.Equals(value) != true)) {
                    this.FreeMemoryField = value;
                    this.RaisePropertyChanged("FreeMemory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int MemoryUsage {
            get {
                return this.MemoryUsageField;
            }
            set {
                if ((this.MemoryUsageField.Equals(value) != true)) {
                    this.MemoryUsageField = value;
                    this.RaisePropertyChanged("MemoryUsage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceLog", Namespace="http://mquter.qut.edu.au/sensors/")]
    [System.SerializableAttribute()]
    public partial class DeviceLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid LogIDField;
        
        private int TypeField;
        
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid LogID {
            get {
                return this.LogIDField;
            }
            set {
                if ((this.LogIDField.Equals(value) != true)) {
                    this.LogIDField = value;
                    this.RaisePropertyChanged("LogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string ErrorDetails {
            get {
                return this.ErrorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailsField, value) != true)) {
                    this.ErrorDetailsField = value;
                    this.RaisePropertyChanged("ErrorDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceSchedule", Namespace="http://mquter.qut.edu.au/sensors/")]
    [System.SerializableAttribute()]
    public partial class DeviceSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int TaskIDField;
        
        private System.Nullable<System.DateTime> TimeOfDayField;
        
        private System.Nullable<int> IntervalField;
        
        private int PriorityField;
        
        private int MinPowerLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<System.DateTime> TimeOfDay {
            get {
                return this.TimeOfDayField;
            }
            set {
                if ((this.TimeOfDayField.Equals(value) != true)) {
                    this.TimeOfDayField = value;
                    this.RaisePropertyChanged("TimeOfDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Nullable<int> Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int MinPowerLevel {
            get {
                return this.MinPowerLevelField;
            }
            set {
                if ((this.MinPowerLevelField.Equals(value) != true)) {
                    this.MinPowerLevelField = value;
                    this.RaisePropertyChanged("MinPowerLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/", ConfigurationName="NewService.SensorV2Soap")]
    public interface SensorV2Soap {
        
        // CODEGEN: Generating message contract since element name deviceId from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/ReportDeviceStatus", ReplyAction="*")]
        WebsiteTests.NewService.ReportDeviceStatusResponse ReportDeviceStatus(WebsiteTests.NewService.ReportDeviceStatusRequest request);
        
        // CODEGEN: Generating message contract since element name deviceId from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/GetTaskSchedule", ReplyAction="*")]
        WebsiteTests.NewService.GetTaskScheduleResponse GetTaskSchedule(WebsiteTests.NewService.GetTaskScheduleRequest request);
        
        // CODEGEN: Generating message contract since element name deviceId from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/AddAudioReadingWithType", ReplyAction="*")]
        WebsiteTests.NewService.AddAudioReadingWithTypeResponse AddAudioReadingWithType(WebsiteTests.NewService.AddAudioReadingWithTypeRequest request);
        
        // CODEGEN: Generating message contract since element name deviceId from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/AddPhotoReading", ReplyAction="*")]
        WebsiteTests.NewService.AddPhotoReadingResponse AddPhotoReading(WebsiteTests.NewService.AddPhotoReadingRequest request);
        
        // CODEGEN: Generating message contract since element name deviceId from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/AddAudioReadingFirst", ReplyAction="*")]
        WebsiteTests.NewService.AddAudioReadingFirstResponse AddAudioReadingFirst(WebsiteTests.NewService.AddAudioReadingFirstRequest request);
        
        // CODEGEN: Generating message contract since element name buffer from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/AddAudioReadingNext", ReplyAction="*")]
        WebsiteTests.NewService.AddAudioReadingNextResponse AddAudioReadingNext(WebsiteTests.NewService.AddAudioReadingNextRequest request);
        
        // CODEGEN: Generating message contract since element name deviceId from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/DownloadLatestUpdate", ReplyAction="*")]
        WebsiteTests.NewService.DownloadLatestUpdateResponse DownloadLatestUpdate(WebsiteTests.NewService.DownloadLatestUpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/GetTime", ReplyAction="*")]
        System.DateTime GetTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/Sleep", ReplyAction="*")]
        void Sleep(int ms);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportDeviceStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportDeviceStatus", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.ReportDeviceStatusRequestBody Body;
        
        public ReportDeviceStatusRequest() {
        }
        
        public ReportDeviceStatusRequest(WebsiteTests.NewService.ReportDeviceStatusRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class ReportDeviceStatusRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deviceId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WebsiteTests.NewService.DeviceStatus[] statuses;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public WebsiteTests.NewService.DeviceLog[] logs;
        
        public ReportDeviceStatusRequestBody() {
        }
        
        public ReportDeviceStatusRequestBody(string deviceId, WebsiteTests.NewService.DeviceStatus[] statuses, WebsiteTests.NewService.DeviceLog[] logs) {
            this.deviceId = deviceId;
            this.statuses = statuses;
            this.logs = logs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportDeviceStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportDeviceStatusResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.ReportDeviceStatusResponseBody Body;
        
        public ReportDeviceStatusResponse() {
        }
        
        public ReportDeviceStatusResponse(WebsiteTests.NewService.ReportDeviceStatusResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class ReportDeviceStatusResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool ReportDeviceStatusResult;
        
        public ReportDeviceStatusResponseBody() {
        }
        
        public ReportDeviceStatusResponseBody(bool ReportDeviceStatusResult) {
            this.ReportDeviceStatusResult = ReportDeviceStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTaskScheduleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTaskSchedule", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.GetTaskScheduleRequestBody Body;
        
        public GetTaskScheduleRequest() {
        }
        
        public GetTaskScheduleRequest(WebsiteTests.NewService.GetTaskScheduleRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class GetTaskScheduleRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deviceId;
        
        public GetTaskScheduleRequestBody() {
        }
        
        public GetTaskScheduleRequestBody(string deviceId) {
            this.deviceId = deviceId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTaskScheduleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTaskScheduleResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.GetTaskScheduleResponseBody Body;
        
        public GetTaskScheduleResponse() {
        }
        
        public GetTaskScheduleResponse(WebsiteTests.NewService.GetTaskScheduleResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class GetTaskScheduleResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public WebsiteTests.NewService.DeviceSchedule[] GetTaskScheduleResult;
        
        public GetTaskScheduleResponseBody() {
        }
        
        public GetTaskScheduleResponseBody(WebsiteTests.NewService.DeviceSchedule[] GetTaskScheduleResult) {
            this.GetTaskScheduleResult = GetTaskScheduleResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAudioReadingWithTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddAudioReadingWithType", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.AddAudioReadingWithTypeRequestBody Body;
        
        public AddAudioReadingWithTypeRequest() {
        }
        
        public AddAudioReadingWithTypeRequest(WebsiteTests.NewService.AddAudioReadingWithTypeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class AddAudioReadingWithTypeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deviceId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<System.Guid> readingGuid;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime time;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public byte[] buffer;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string mimeType;
        
        public AddAudioReadingWithTypeRequestBody() {
        }
        
        public AddAudioReadingWithTypeRequestBody(string deviceId, System.Nullable<System.Guid> readingGuid, System.DateTime time, byte[] buffer, string mimeType) {
            this.deviceId = deviceId;
            this.readingGuid = readingGuid;
            this.time = time;
            this.buffer = buffer;
            this.mimeType = mimeType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAudioReadingWithTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddAudioReadingWithTypeResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.AddAudioReadingWithTypeResponseBody Body;
        
        public AddAudioReadingWithTypeResponse() {
        }
        
        public AddAudioReadingWithTypeResponse(WebsiteTests.NewService.AddAudioReadingWithTypeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class AddAudioReadingWithTypeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public bool AddAudioReadingWithTypeResult;
        
        public AddAudioReadingWithTypeResponseBody() {
        }
        
        public AddAudioReadingWithTypeResponseBody(bool AddAudioReadingWithTypeResult) {
            this.AddAudioReadingWithTypeResult = AddAudioReadingWithTypeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPhotoReadingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPhotoReading", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.AddPhotoReadingRequestBody Body;
        
        public AddPhotoReadingRequest() {
        }
        
        public AddPhotoReadingRequest(WebsiteTests.NewService.AddPhotoReadingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class AddPhotoReadingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deviceId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime time;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string mimeType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public byte[] buffer;
        
        public AddPhotoReadingRequestBody() {
        }
        
        public AddPhotoReadingRequestBody(string deviceId, System.DateTime time, string mimeType, byte[] buffer) {
            this.deviceId = deviceId;
            this.time = time;
            this.mimeType = mimeType;
            this.buffer = buffer;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddPhotoReadingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddPhotoReadingResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.AddPhotoReadingResponseBody Body;
        
        public AddPhotoReadingResponse() {
        }
        
        public AddPhotoReadingResponse(WebsiteTests.NewService.AddPhotoReadingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class AddPhotoReadingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid AddPhotoReadingResult;
        
        public AddPhotoReadingResponseBody() {
        }
        
        public AddPhotoReadingResponseBody(System.Guid AddPhotoReadingResult) {
            this.AddPhotoReadingResult = AddPhotoReadingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAudioReadingFirstRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddAudioReadingFirst", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.AddAudioReadingFirstRequestBody Body;
        
        public AddAudioReadingFirstRequest() {
        }
        
        public AddAudioReadingFirstRequest(WebsiteTests.NewService.AddAudioReadingFirstRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class AddAudioReadingFirstRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deviceId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.DateTime time;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string mimeType;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public byte[] buffer;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool more;
        
        public AddAudioReadingFirstRequestBody() {
        }
        
        public AddAudioReadingFirstRequestBody(string deviceId, System.DateTime time, string mimeType, byte[] buffer, bool more) {
            this.deviceId = deviceId;
            this.time = time;
            this.mimeType = mimeType;
            this.buffer = buffer;
            this.more = more;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAudioReadingFirstResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddAudioReadingFirstResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.AddAudioReadingFirstResponseBody Body;
        
        public AddAudioReadingFirstResponse() {
        }
        
        public AddAudioReadingFirstResponse(WebsiteTests.NewService.AddAudioReadingFirstResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class AddAudioReadingFirstResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid AddAudioReadingFirstResult;
        
        public AddAudioReadingFirstResponseBody() {
        }
        
        public AddAudioReadingFirstResponseBody(System.Guid AddAudioReadingFirstResult) {
            this.AddAudioReadingFirstResult = AddAudioReadingFirstResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAudioReadingNextRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddAudioReadingNext", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.AddAudioReadingNextRequestBody Body;
        
        public AddAudioReadingNextRequest() {
        }
        
        public AddAudioReadingNextRequest(WebsiteTests.NewService.AddAudioReadingNextRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class AddAudioReadingNextRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid readingId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public byte[] buffer;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public long offset;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool more;
        
        public AddAudioReadingNextRequestBody() {
        }
        
        public AddAudioReadingNextRequestBody(System.Guid readingId, byte[] buffer, long offset, bool more) {
            this.readingId = readingId;
            this.buffer = buffer;
            this.offset = offset;
            this.more = more;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddAudioReadingNextResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddAudioReadingNextResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.AddAudioReadingNextResponseBody Body;
        
        public AddAudioReadingNextResponse() {
        }
        
        public AddAudioReadingNextResponse(WebsiteTests.NewService.AddAudioReadingNextResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class AddAudioReadingNextResponseBody {
        
        public AddAudioReadingNextResponseBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DownloadLatestUpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DownloadLatestUpdate", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.DownloadLatestUpdateRequestBody Body;
        
        public DownloadLatestUpdateRequest() {
        }
        
        public DownloadLatestUpdateRequest(WebsiteTests.NewService.DownloadLatestUpdateRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class DownloadLatestUpdateRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string deviceId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string deviceVersion;
        
        public DownloadLatestUpdateRequestBody() {
        }
        
        public DownloadLatestUpdateRequestBody(string deviceId, string deviceVersion) {
            this.deviceId = deviceId;
            this.deviceVersion = deviceVersion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DownloadLatestUpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DownloadLatestUpdateResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public WebsiteTests.NewService.DownloadLatestUpdateResponseBody Body;
        
        public DownloadLatestUpdateResponse() {
        }
        
        public DownloadLatestUpdateResponse(WebsiteTests.NewService.DownloadLatestUpdateResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class DownloadLatestUpdateResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string updateVersion;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public byte[] zip;
        
        public DownloadLatestUpdateResponseBody() {
        }
        
        public DownloadLatestUpdateResponseBody(string updateVersion, byte[] zip) {
            this.updateVersion = updateVersion;
            this.zip = zip;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface SensorV2SoapChannel : WebsiteTests.NewService.SensorV2Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SensorV2SoapClient : System.ServiceModel.ClientBase<WebsiteTests.NewService.SensorV2Soap>, WebsiteTests.NewService.SensorV2Soap {
        
        public SensorV2SoapClient() {
        }
        
        public SensorV2SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SensorV2SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SensorV2SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SensorV2SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebsiteTests.NewService.ReportDeviceStatusResponse WebsiteTests.NewService.SensorV2Soap.ReportDeviceStatus(WebsiteTests.NewService.ReportDeviceStatusRequest request) {
            return base.Channel.ReportDeviceStatus(request);
        }
        
        public bool ReportDeviceStatus(string deviceId, WebsiteTests.NewService.DeviceStatus[] statuses, WebsiteTests.NewService.DeviceLog[] logs) {
            WebsiteTests.NewService.ReportDeviceStatusRequest inValue = new WebsiteTests.NewService.ReportDeviceStatusRequest();
            inValue.Body = new WebsiteTests.NewService.ReportDeviceStatusRequestBody();
            inValue.Body.deviceId = deviceId;
            inValue.Body.statuses = statuses;
            inValue.Body.logs = logs;
            WebsiteTests.NewService.ReportDeviceStatusResponse retVal = ((WebsiteTests.NewService.SensorV2Soap)(this)).ReportDeviceStatus(inValue);
            return retVal.Body.ReportDeviceStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebsiteTests.NewService.GetTaskScheduleResponse WebsiteTests.NewService.SensorV2Soap.GetTaskSchedule(WebsiteTests.NewService.GetTaskScheduleRequest request) {
            return base.Channel.GetTaskSchedule(request);
        }
        
        public WebsiteTests.NewService.DeviceSchedule[] GetTaskSchedule(string deviceId) {
            WebsiteTests.NewService.GetTaskScheduleRequest inValue = new WebsiteTests.NewService.GetTaskScheduleRequest();
            inValue.Body = new WebsiteTests.NewService.GetTaskScheduleRequestBody();
            inValue.Body.deviceId = deviceId;
            WebsiteTests.NewService.GetTaskScheduleResponse retVal = ((WebsiteTests.NewService.SensorV2Soap)(this)).GetTaskSchedule(inValue);
            return retVal.Body.GetTaskScheduleResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebsiteTests.NewService.AddAudioReadingWithTypeResponse WebsiteTests.NewService.SensorV2Soap.AddAudioReadingWithType(WebsiteTests.NewService.AddAudioReadingWithTypeRequest request) {
            return base.Channel.AddAudioReadingWithType(request);
        }
        
        public bool AddAudioReadingWithType(string deviceId, System.Nullable<System.Guid> readingGuid, System.DateTime time, byte[] buffer, string mimeType) {
            WebsiteTests.NewService.AddAudioReadingWithTypeRequest inValue = new WebsiteTests.NewService.AddAudioReadingWithTypeRequest();
            inValue.Body = new WebsiteTests.NewService.AddAudioReadingWithTypeRequestBody();
            inValue.Body.deviceId = deviceId;
            inValue.Body.readingGuid = readingGuid;
            inValue.Body.time = time;
            inValue.Body.buffer = buffer;
            inValue.Body.mimeType = mimeType;
            WebsiteTests.NewService.AddAudioReadingWithTypeResponse retVal = ((WebsiteTests.NewService.SensorV2Soap)(this)).AddAudioReadingWithType(inValue);
            return retVal.Body.AddAudioReadingWithTypeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebsiteTests.NewService.AddPhotoReadingResponse WebsiteTests.NewService.SensorV2Soap.AddPhotoReading(WebsiteTests.NewService.AddPhotoReadingRequest request) {
            return base.Channel.AddPhotoReading(request);
        }
        
        public System.Guid AddPhotoReading(string deviceId, System.DateTime time, string mimeType, byte[] buffer) {
            WebsiteTests.NewService.AddPhotoReadingRequest inValue = new WebsiteTests.NewService.AddPhotoReadingRequest();
            inValue.Body = new WebsiteTests.NewService.AddPhotoReadingRequestBody();
            inValue.Body.deviceId = deviceId;
            inValue.Body.time = time;
            inValue.Body.mimeType = mimeType;
            inValue.Body.buffer = buffer;
            WebsiteTests.NewService.AddPhotoReadingResponse retVal = ((WebsiteTests.NewService.SensorV2Soap)(this)).AddPhotoReading(inValue);
            return retVal.Body.AddPhotoReadingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebsiteTests.NewService.AddAudioReadingFirstResponse WebsiteTests.NewService.SensorV2Soap.AddAudioReadingFirst(WebsiteTests.NewService.AddAudioReadingFirstRequest request) {
            return base.Channel.AddAudioReadingFirst(request);
        }
        
        public System.Guid AddAudioReadingFirst(string deviceId, System.DateTime time, string mimeType, byte[] buffer, bool more) {
            WebsiteTests.NewService.AddAudioReadingFirstRequest inValue = new WebsiteTests.NewService.AddAudioReadingFirstRequest();
            inValue.Body = new WebsiteTests.NewService.AddAudioReadingFirstRequestBody();
            inValue.Body.deviceId = deviceId;
            inValue.Body.time = time;
            inValue.Body.mimeType = mimeType;
            inValue.Body.buffer = buffer;
            inValue.Body.more = more;
            WebsiteTests.NewService.AddAudioReadingFirstResponse retVal = ((WebsiteTests.NewService.SensorV2Soap)(this)).AddAudioReadingFirst(inValue);
            return retVal.Body.AddAudioReadingFirstResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebsiteTests.NewService.AddAudioReadingNextResponse WebsiteTests.NewService.SensorV2Soap.AddAudioReadingNext(WebsiteTests.NewService.AddAudioReadingNextRequest request) {
            return base.Channel.AddAudioReadingNext(request);
        }
        
        public void AddAudioReadingNext(System.Guid readingId, byte[] buffer, long offset, bool more) {
            WebsiteTests.NewService.AddAudioReadingNextRequest inValue = new WebsiteTests.NewService.AddAudioReadingNextRequest();
            inValue.Body = new WebsiteTests.NewService.AddAudioReadingNextRequestBody();
            inValue.Body.readingId = readingId;
            inValue.Body.buffer = buffer;
            inValue.Body.offset = offset;
            inValue.Body.more = more;
            WebsiteTests.NewService.AddAudioReadingNextResponse retVal = ((WebsiteTests.NewService.SensorV2Soap)(this)).AddAudioReadingNext(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebsiteTests.NewService.DownloadLatestUpdateResponse WebsiteTests.NewService.SensorV2Soap.DownloadLatestUpdate(WebsiteTests.NewService.DownloadLatestUpdateRequest request) {
            return base.Channel.DownloadLatestUpdate(request);
        }
        
        public string DownloadLatestUpdate(string deviceId, string deviceVersion, out byte[] zip) {
            WebsiteTests.NewService.DownloadLatestUpdateRequest inValue = new WebsiteTests.NewService.DownloadLatestUpdateRequest();
            inValue.Body = new WebsiteTests.NewService.DownloadLatestUpdateRequestBody();
            inValue.Body.deviceId = deviceId;
            inValue.Body.deviceVersion = deviceVersion;
            WebsiteTests.NewService.DownloadLatestUpdateResponse retVal = ((WebsiteTests.NewService.SensorV2Soap)(this)).DownloadLatestUpdate(inValue);
            zip = retVal.Body.zip;
            return retVal.Body.updateVersion;
        }
        
        public System.DateTime GetTime() {
            return base.Channel.GetTime();
        }
        
        public void Sleep(int ms) {
            base.Channel.Sleep(ms);
        }
    }
}
