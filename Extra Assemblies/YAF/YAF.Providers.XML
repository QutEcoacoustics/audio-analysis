<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YAF.Providers</name>
    </assembly>
    <members>
        <member name="T:YAF.Providers.Profile.MsSqlProfileDbConnectionManager">
            <summary>
            The yaf profile db conn manager.
            </summary>
        </member>
        <member name="P:YAF.Providers.Profile.MsSqlProfileDbConnectionManager.ConnectionString">
            <summary>
              Gets ConnectionString.
            </summary>
        </member>
        <member name="T:YAF.Providers.Profile.DB">
            <summary>
            The db.
            </summary>
        </member>
        <member name="F:YAF.Providers.Profile.DB._msSqlDbAccess">
            <summary>
              The _db access.
            </summary>
        </member>
        <member name="M:YAF.Providers.Profile.DB.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Providers.Profile.DB"/> class.
            </summary>
        </member>
        <member name="M:YAF.Providers.Profile.DB.AddProfileColumn(System.String,System.Data.SqlDbType,System.Int32)">
            <summary>
            The add profile column.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="columnType">
            The column type.
            </param>
            <param name="size">
            The size.
            </param>
        </member>
        <member name="M:YAF.Providers.Profile.DB.DeleteInactiveProfiles(System.Object,System.Object)">
            <summary>
            The delete inactive profiles.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="inactiveSinceDate">
            The inactive since date.
            </param>
            <returns>
            The delete inactive profiles.
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.DB.DeleteProfiles(System.Object,System.Object)">
            <summary>
            The delete profiles.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="userNames">
            The user names.
            </param>
            <returns>
            The delete profiles.
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.DB.GetNumberInactiveProfiles(System.Object,System.Object)">
            <summary>
            The get number inactive profiles.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="inactiveSinceDate">
            The inactive since date.
            </param>
            <returns>
            The get number inactive profiles.
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.DB.GetProfileStructure">
            <summary>
            The get profile structure.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.DB.GetProfiles(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The get profiles.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <param name="userNameToMatch">
            The user name to match.
            </param>
            <param name="inactiveSinceDate">
            The inactive since date.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.DB.GetProviderUserKey(System.Object,System.Object)">
            <summary>
            The get provider user key.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="username">
            The username.
            </param>
            <returns>
            The get provider user key.
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.DB.SetProfileProperties(System.Object,System.Object,System.Configuration.SettingsPropertyValueCollection,System.Collections.Generic.List{YAF.Providers.Profile.SettingsPropertyColumn})">
            <summary>
            The set profile properties.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="values">
            The values.
            </param>
            <param name="settingsColumnsList">
            The settings columns list.
            </param>
        </member>
        <member name="P:YAF.Providers.Profile.DB.Current">
            <summary>
              Gets Current.
            </summary>
        </member>
        <member name="T:YAF.Providers.Utils.ExceptionReporter">
            <summary>
            The exception reporter.
            </summary>
        </member>
        <member name="M:YAF.Providers.Utils.ExceptionReporter.GetReport(System.String,System.String)">
            <summary>
            Get Exception String
            </summary>
            <param name="providerSection">
            The provider Section.
            </param>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The get report.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.ExceptionReporter.Throw(System.String,System.String)">
            <summary>
            Throw Exception
            </summary>
            <param name="providerSection">
            The provider Section.
            </param>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The throw.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.ExceptionReporter.ThrowArgument(System.String,System.String)">
            <summary>
            Throw ArgumentException
            </summary>
            <param name="providerSection">
            The provider Section.
            </param>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The throw argument.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.ExceptionReporter.ThrowArgumentNull(System.String,System.String)">
            <summary>
            Throw ArgumentNullException
            </summary>
            <param name="providerSection">
            The provider Section.
            </param>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The throw argument null.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.ExceptionReporter.ThrowNotSupported(System.String,System.String)">
            <summary>
            Throw NotSupportedException
            </summary>
            <param name="providerSection">
            The provider Section.
            </param>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The throw not supported.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.ExceptionReporter.ThrowProvider(System.String,System.String)">
            <summary>
            Throw ProviderException
            </summary>
            <param name="providerSection">
            The provider Section.
            </param>
            <param name="tag">
            The tag.
            </param>
            <returns>
            The throw provider.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.ExceptionReporter.ExceptionXML">
            <summary>
            Return XMLDocument containing text for the Exceptions
            </summary>
        </member>
        <member name="P:YAF.Providers.Utils.ExceptionReporter.ProviderExceptionFile">
            <summary>
              Get Exception XML File Name from AppSettings
            </summary>
        </member>
        <member name="T:YAF.Providers.Profile.SettingsPropertyColumn">
            <summary>
            The settings property column.
            </summary>
        </member>
        <member name="F:YAF.Providers.Profile.SettingsPropertyColumn.DataType">
            <summary>
            The data type.
            </summary>
        </member>
        <member name="F:YAF.Providers.Profile.SettingsPropertyColumn.Settings">
            <summary>
            The settings.
            </summary>
        </member>
        <member name="F:YAF.Providers.Profile.SettingsPropertyColumn.Size">
            <summary>
            The size.
            </summary>
        </member>
        <member name="M:YAF.Providers.Profile.SettingsPropertyColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Providers.Profile.SettingsPropertyColumn"/> class.
            </summary>
        </member>
        <member name="M:YAF.Providers.Profile.SettingsPropertyColumn.#ctor(System.Configuration.SettingsProperty,System.Data.SqlDbType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Providers.Profile.SettingsPropertyColumn"/> class.
            </summary>
            <param name="settings">
            The settings.
            </param>
            <param name="dataType">
            The data type.
            </param>
            <param name="size">
            The size.
            </param>
        </member>
        <member name="T:YAF.Providers.Profile.YafProfileProvider">
            <summary>
            YAF Custom Profile Provider
            </summary>
        </member>
        <member name="F:YAF.Providers.Profile.YafProfileProvider._connStrAppKeyName">
            <summary>
            The conn str app key name.
            </summary>
        </member>
        <member name="F:YAF.Providers.Profile.YafProfileProvider._appName">
            <summary>
            The _app name.
            </summary>
        </member>
        <member name="F:YAF.Providers.Profile.YafProfileProvider._connStrName">
            <summary>
            The _conn str name.
            </summary>
        </member>
        <member name="F:YAF.Providers.Profile.YafProfileProvider._propertiesSetup">
            <summary>
            The _properties setup.
            </summary>
        </member>
        <member name="F:YAF.Providers.Profile.YafProfileProvider._propertyLock">
            <summary>
            The _property lock.
            </summary>
        </member>
        <member name="F:YAF.Providers.Profile.YafProfileProvider._settingsColumnsList">
            <summary>
            The _settings columns list.
            </summary>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
            <summary>
            The delete inactive profiles.
            </summary>
            <param name="authenticationOption">
            The authentication option.
            </param>
            <param name="userInactiveSinceDate">
            The user inactive since date.
            </param>
            <returns>
            The delete inactive profiles.
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.DeleteProfiles(System.String[])">
            <summary>
            The delete profiles.
            </summary>
            <param name="usernames">
            The usernames.
            </param>
            <returns>
            The delete profiles.
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)">
            <summary>
            The delete profiles.
            </summary>
            <param name="profiles">
            The profiles.
            </param>
            <returns>
            The delete profiles.
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The find inactive profiles by user name.
            </summary>
            <param name="authenticationOption">
            The authentication option.
            </param>
            <param name="usernameToMatch">
            The username to match.
            </param>
            <param name="userInactiveSinceDate">
            The user inactive since date.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <param name="totalRecords">
            The total records.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The find profiles by user name.
            </summary>
            <param name="authenticationOption">
            The authentication option.
            </param>
            <param name="usernameToMatch">
            The username to match.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <param name="totalRecords">
            The total records.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The get all inactive profiles.
            </summary>
            <param name="authenticationOption">
            The authentication option.
            </param>
            <param name="userInactiveSinceDate">
            The user inactive since date.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <param name="totalRecords">
            The total records.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The get all profiles.
            </summary>
            <param name="authenticationOption">
            The authentication option.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <param name="totalRecords">
            The total records.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
            <summary>
            The get number of inactive profiles.
            </summary>
            <param name="authenticationOption">
            The authentication option.
            </param>
            <param name="userInactiveSinceDate">
            The user inactive since date.
            </param>
            <returns>
            The get number of inactive profiles.
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>
            The get property values.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="collection">
            The collection.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Sets up the profile providers
            </summary>
            <param name="name">
            </param>
            <param name="config">
            </param>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>
            The set property values.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="collection">
            The collection.
            </param>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.LoadFromPropertyCollection(System.Configuration.SettingsPropertyCollection)">
            <summary>
            The load from property collection.
            </summary>
            <param name="collection">
            The collection.
            </param>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.LoadFromPropertyValueCollection(System.Configuration.SettingsPropertyValueCollection)">
            <summary>
            The load from property value collection.
            </summary>
            <param name="collection">
            The collection.
            </param>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.ClearUserProfileCache">
            <summary>
            The clear user profile cache.
            </summary>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.DeleteFromProfileCacheIfExists(System.String)">
            <summary>
            The delete from profile cache if exists.
            </summary>
            <param name="key">
            The key to remove.
            </param>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.GenerateCacheKey(System.String)">
            <summary>
            The generate cache key.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The generate cache key.
            </returns>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.GetDbTypeAndSizeFromString(System.String,System.Data.SqlDbType@,System.Int32@)">
            <summary>
            The get db type and size from string.
            </summary>
            <param name="providerData">
            The provider data.
            </param>
            <param name="dbType">
            The db type.
            </param>
            <param name="size">
            The size.
            </param>
            <returns>
            The get db type and size from string.
            </returns>
            <exception cref="T:System.ArgumentException">
            </exception>
        </member>
        <member name="M:YAF.Providers.Profile.YafProfileProvider.GetProfileAsCollection(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Object,System.Object,System.Int32@)">
            <summary>
            The get profile as collection.
            </summary>
            <param name="authenticationOption">
            The authentication option.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <param name="userNameToMatch">
            The user name to match.
            </param>
            <param name="inactiveSinceDate">
            The inactive since date.
            </param>
            <param name="totalRecords">
            The total records.
            </param>
            <returns>
            </returns>
        </member>
        <member name="P:YAF.Providers.Profile.YafProfileProvider.ConnStrAppKeyName">
            <summary>
            Gets the Connection String App Key Name.
            </summary>
        </member>
        <member name="P:YAF.Providers.Profile.YafProfileProvider.ApplicationName">
            <summary>
            Gets or sets ApplicationName.
            </summary>
        </member>
        <member name="P:YAF.Providers.Profile.YafProfileProvider.UserProfileCache">
            <summary>
            Gets UserProfileCache.
            </summary>
        </member>
        <member name="T:YAFProviders.Passthru.YAFMembershipPassThru">
            <summary>
            The yaf membership pass thru.
            </summary>
        </member>
        <member name="F:YAFProviders.Passthru.YAFMembershipPassThru._realProvider">
            <summary>
            The _real provider.
            </summary>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            The initialize.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="config">
            The config.
            </param>
            <exception cref="T:System.Configuration.Provider.ProviderException">
            </exception>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.ChangePassword(System.String,System.String,System.String)">
            <summary>
            The change password.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="oldPassword">
            The old password.
            </param>
            <param name="newPassword">
            The new password.
            </param>
            <returns>
            The change password.
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
            <summary>
            The change password question and answer.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="password">
            The password.
            </param>
            <param name="newPasswordQuestion">
            The new password question.
            </param>
            <param name="newPasswordAnswer">
            The new password answer.
            </param>
            <returns>
            The change password question and answer.
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            The create user.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="password">
            The password.
            </param>
            <param name="email">
            The email.
            </param>
            <param name="passwordQuestion">
            The password question.
            </param>
            <param name="passwordAnswer">
            The password answer.
            </param>
            <param name="isApproved">
            The is approved.
            </param>
            <param name="providerUserKey">
            The provider user key.
            </param>
            <param name="status">
            The status.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.DeleteUser(System.String,System.Boolean)">
            <summary>
            The delete user.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="deleteAllRelatedData">
            The delete all related data.
            </param>
            <returns>
            The delete user.
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The find users by email.
            </summary>
            <param name="emailToMatch">
            The email to match.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <param name="totalRecords">
            The total records.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            The find users by name.
            </summary>
            <param name="usernameToMatch">
            The username to match.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <param name="totalRecords">
            The total records.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
            <summary>
            The get all users.
            </summary>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <param name="totalRecords">
            The total records.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.GetNumberOfUsersOnline">
            <summary>
            The get number of users online.
            </summary>
            <returns>
            The get number of users online.
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.GetPassword(System.String,System.String)">
            <summary>
            The get password.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="answer">
            The answer.
            </param>
            <returns>
            The get password.
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.GetUser(System.String,System.Boolean)">
            <summary>
            The get user.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="userIsOnline">
            The user is online.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.GetUser(System.Object,System.Boolean)">
            <summary>
            The get user.
            </summary>
            <param name="providerUserKey">
            The provider user key.
            </param>
            <param name="userIsOnline">
            The user is online.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.GetUserNameByEmail(System.String)">
            <summary>
            The get user name by email.
            </summary>
            <param name="email">
            The email.
            </param>
            <returns>
            The get user name by email.
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.ResetPassword(System.String,System.String)">
            <summary>
            The reset password.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="answer">
            The answer.
            </param>
            <returns>
            The reset password.
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.UnlockUser(System.String)">
            <summary>
            The unlock user.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <returns>
            The unlock user.
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.UpdateUser(System.Web.Security.MembershipUser)">
            <summary>
            The update user.
            </summary>
            <param name="user">
            The user.
            </param>
        </member>
        <member name="M:YAFProviders.Passthru.YAFMembershipPassThru.ValidateUser(System.String,System.String)">
            <summary>
            The validate user.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="password">
            The password.
            </param>
            <returns>
            The validate user.
            </returns>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.ApplicationName">
            <summary>
            Gets or sets ApplicationName.
            </summary>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.EnablePasswordReset">
            <summary>
            Gets a value indicating whether EnablePasswordReset.
            </summary>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.EnablePasswordRetrieval">
            <summary>
            Gets a value indicating whether EnablePasswordRetrieval.
            </summary>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.MaxInvalidPasswordAttempts">
            <summary>
            Gets MaxInvalidPasswordAttempts.
            </summary>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.MinRequiredNonAlphanumericCharacters">
            <summary>
            Gets MinRequiredNonAlphanumericCharacters.
            </summary>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.MinRequiredPasswordLength">
            <summary>
            Gets MinRequiredPasswordLength.
            </summary>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.PasswordAttemptWindow">
            <summary>
            Gets PasswordAttemptWindow.
            </summary>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.PasswordFormat">
            <summary>
            Gets PasswordFormat.
            </summary>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.PasswordStrengthRegularExpression">
            <summary>
            Gets PasswordStrengthRegularExpression.
            </summary>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.RequiresQuestionAndAnswer">
            <summary>
            Gets a value indicating whether RequiresQuestionAndAnswer.
            </summary>
        </member>
        <member name="P:YAFProviders.Passthru.YAFMembershipPassThru.RequiresUniqueEmail">
            <summary>
            Gets a value indicating whether RequiresUniqueEmail.
            </summary>
        </member>
        <member name="T:YAF.Providers.Membership.MsSqlMembershipDbConnectionManager">
            <summary>
            The yaf membership db conn manager.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.MsSqlMembershipDbConnectionManager.ConnectionString">
            <summary>
              Gets ConnectionString.
            </summary>
        </member>
        <member name="T:YAF.Providers.Membership.DB">
            <summary>
            The db.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.DB._msSqlDbAccess">
            <summary>
              The _db access.
            </summary>
        </member>
        <member name="M:YAF.Providers.Membership.DB.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Providers.Membership.DB"/> class.
            </summary>
        </member>
        <member name="M:YAF.Providers.Membership.DB.ChangePassword(System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            The change password.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="username">
            The username.
            </param>
            <param name="newPassword">
            The new password.
            </param>
            <param name="newSalt">
            The new salt.
            </param>
            <param name="passwordFormat">
            The password format.
            </param>
            <param name="newPasswordAnswer">
            The new password answer.
            </param>
        </member>
        <member name="M:YAF.Providers.Membership.DB.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
            <summary>
            The change password question and answer.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="username">
            The username.
            </param>
            <param name="passwordQuestion">
            The password question.
            </param>
            <param name="passwordAnswer">
            The password answer.
            </param>
        </member>
        <member name="M:YAF.Providers.Membership.DB.CreateUser(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Object)">
            <summary>
            The create user.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="username">
            The username.
            </param>
            <param name="password">
            The password.
            </param>
            <param name="passwordSalt">
            The password salt.
            </param>
            <param name="passwordFormat">
            The password format.
            </param>
            <param name="email">
            The email.
            </param>
            <param name="passwordQuestion">
            The password question.
            </param>
            <param name="passwordAnswer">
            The password answer.
            </param>
            <param name="isApproved">
            The is approved.
            </param>
            <param name="providerUserKey">
            The provider user key.
            </param>
        </member>
        <member name="M:YAF.Providers.Membership.DB.DeleteUser(System.String,System.String,System.Boolean)">
            <summary>
            The delete user.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="username">
            The username.
            </param>
            <param name="deleteAllRelatedData">
            The delete all related data.
            </param>
        </member>
        <member name="M:YAF.Providers.Membership.DB.FindUsersByEmail(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            The find users by email.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="emailToMatch">
            The email to match.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.DB.FindUsersByName(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            The find users by name.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="usernameToMatch">
            The username to match.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.DB.GetAllUsers(System.String,System.Int32,System.Int32)">
            <summary>
            The get all users.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.DB.GetNumberOfUsersOnline(System.String,System.Int32)">
            <summary>
            The get number of users online.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="timeWindow">
            The time window.
            </param>
            <returns>
            The get number of users online.
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.DB.GetUser(System.String,System.Object,System.String,System.Boolean)">
            <summary>
            The get user.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="providerUserKey">
            The provider user key.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="userIsOnline">
            The user is online.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.DB.GetUserNameByEmail(System.String,System.String)">
            <summary>
            The get user name by email.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="email">
            The email.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.DB.GetUserPasswordInfo(System.String,System.String,System.Boolean)">
            <summary>
            The get user password info.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="username">
            The username.
            </param>
            <param name="updateUser">
            The update user.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.DB.ResetPassword(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            The reset password.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="password">
            The password.
            </param>
            <param name="passwordSalt">
            The password salt.
            </param>
            <param name="passwordFormat">
            The password format.
            </param>
            <param name="maxInvalidPasswordAttempts">
            The max invalid password attempts.
            </param>
            <param name="passwordAttemptWindow">
            The password attempt window.
            </param>
        </member>
        <member name="M:YAF.Providers.Membership.DB.UnlockUser(System.String,System.String)">
            <summary>
            The unlock user.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="userName">
            The user name.
            </param>
        </member>
        <member name="M:YAF.Providers.Membership.DB.UpdateUser(System.Object,System.Web.Security.MembershipUser,System.Boolean)">
            <summary>
            The update user.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="user">
            The user.
            </param>
            <param name="requiresUniqueEmail">
            The requires unique email.
            </param>
            <returns>
            The update user.
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.DB.UpgradeMembership(System.Int32,System.Int32)">
            <summary>
            The upgrade membership.
            </summary>
            <param name="previousVersion">
            The previous version.
            </param>
            <param name="newVersion">
            The new version.
            </param>
        </member>
        <member name="P:YAF.Providers.Membership.DB.Current">
            <summary>
              Gets Current.
            </summary>
        </member>
        <member name="T:YAFProviders.Passthru.YAFRolesPassThru">
            <summary>
            The yaf roles pass thru.
            </summary>
        </member>
        <member name="F:YAFProviders.Passthru.YAFRolesPassThru._realProvider">
            <summary>
            The _real provider.
            </summary>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            The initialize.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="config">
            The config.
            </param>
            <exception cref="T:System.Configuration.Provider.ProviderException">
            </exception>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.AddUsersToRoles(System.String[],System.String[])">
            <summary>
            The add users to roles.
            </summary>
            <param name="usernames">
            The usernames.
            </param>
            <param name="roleNames">
            The role names.
            </param>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.CreateRole(System.String)">
            <summary>
            The create role.
            </summary>
            <param name="roleName">
            The role name.
            </param>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.DeleteRole(System.String,System.Boolean)">
            <summary>
            The delete role.
            </summary>
            <param name="roleName">
            The role name.
            </param>
            <param name="throwOnPopulatedRole">
            The throw on populated role.
            </param>
            <returns>
            The delete role.
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.FindUsersInRole(System.String,System.String)">
            <summary>
            The find users in role.
            </summary>
            <param name="roleName">
            The role name.
            </param>
            <param name="usernameToMatch">
            The username to match.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.GetAllRoles">
            <summary>
            The get all roles.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.GetRolesForUser(System.String)">
            <summary>
            The get roles for user.
            </summary>
            <param name="username">
            The username.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.GetUsersInRole(System.String)">
            <summary>
            The get users in role.
            </summary>
            <param name="roleName">
            The role name.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.IsUserInRole(System.String,System.String)">
            <summary>
            The is user in role.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="roleName">
            The role name.
            </param>
            <returns>
            The is user in role.
            </returns>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.RemoveUsersFromRoles(System.String[],System.String[])">
            <summary>
            The remove users from roles.
            </summary>
            <param name="usernames">
            The usernames.
            </param>
            <param name="roleNames">
            The role names.
            </param>
        </member>
        <member name="M:YAFProviders.Passthru.YAFRolesPassThru.RoleExists(System.String)">
            <summary>
            The role exists.
            </summary>
            <param name="roleName">
            The role name.
            </param>
            <returns>
            The role exists.
            </returns>
        </member>
        <member name="P:YAFProviders.Passthru.YAFRolesPassThru.ApplicationName">
            <summary>
            Gets or sets ApplicationName.
            </summary>
        </member>
        <member name="T:YAF.Providers.Membership.YafMembershipProvider">
            <summary>
            The yaf membership provider.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._passwordsize">
            <summary>
            The _passwordsize.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider.ConnStrAppKeyName">
            <summary>
            The conn str app key name.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._appName">
            <summary>
            The _app name.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._connStrName">
            <summary>
            The _conn str name.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._enablePasswordReset">
            <summary>
            The _enable password reset.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._enablePasswordRetrieval">
            <summary>
            The _enable password retrieval.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._hashCase">
            <summary>
            The _hash case.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._hashHex">
            <summary>
            The _hash hex.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._hashRemoveChars">
            <summary>
            The _hash remove chars.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._maxInvalidPasswordAttempts">
            <summary>
            The _max invalid password attempts.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._minimumRequiredPasswordLength">
            <summary>
            The _minimum required password length.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._minRequiredNonAlphanumericCharacters">
            <summary>
            The _min required non alphanumeric characters.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._msCompliant">
            <summary>
            The _ms compliant.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._passwordAttemptWindow">
            <summary>
            The _password attempt window.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._passwordFormat">
            <summary>
            The _password format.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._passwordStrengthRegularExpression">
            <summary>
            The _password strength regular expression.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._requiresQuestionAndAnswer">
            <summary>
            The _requires question and answer.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._requiresUniqueEmail">
            <summary>
            The _requires unique email.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.YafMembershipProvider._useSalt">
            <summary>
            The _use salt.
            </summary>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.GeneratePasswordBuffer(System.String,System.String,System.Boolean)">
            <summary>
            Creates a password buffer from salt and password ready for hashing/encrypting
            </summary>
            <param name="salt">
            Salt to be applied to hashing algorithm
            </param>
            <param name="clearString">
            Clear string to hash
            </param>
            <param name="standardComp">
            Use Standard asp.net membership method of creating the buffer
            </param>
            <returns>
            Salted Password as Byte Array 
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.Hash(System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Hashes a clear string to the given hashtype
            </summary>
            <param name="clearString">
            Clear string to hash
            </param>
            <param name="hashType">
            hash Algorithm to be used
            </param>
            <param name="salt">
            Salt to be applied to hashing algorithm
            </param>
            <param name="useSalt">
            Should salt be applied to hashing algorithm
            </param>
            <param name="hashHex">
            The hash Hex.
            </param>
            <param name="hashCase">
            The hash Case.
            </param>
            <param name="hashRemoveChars">
            The hash Remove Chars.
            </param>
            <param name="standardComp">
            The standard Comp.
            </param>
            <returns>
            Hashed String as Hex or Base64 
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Change Users password
            </summary>
            <param name="username">
            Username to change password for
            </param>
            <param name="oldPassword">
            The old Password.
            </param>
            <param name="newPassword">
            New question
            </param>
            <returns>
            Boolean depending on whether the change was successful
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
            <summary>
            The change password question and answer.
            </summary>
            <param name="username">
            The username.
            </param>
            <param name="password">
            The password.
            </param>
            <param name="newPasswordQuestion">
            The new password question.
            </param>
            <param name="newPasswordAnswer">
            The new password answer.
            </param>
            <returns>
            The change password question and answer.
            </returns>
            <exception cref="T:System.ArgumentException">
            </exception>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Create user and add to provider
            </summary>
            <param name="username">
            Username
            </param>
            <param name="password">
            Password
            </param>
            <param name="email">
            Email Address
            </param>
            <param name="passwordQuestion">
            Password Question
            </param>
            <param name="passwordAnswer">
            Password Answer - used for password retrievals.
            </param>
            <param name="isApproved">
            Is the User approved?
            </param>
            <param name="providerUserKey">
            Provider User Key to identify the User
            </param>
            <param name="status">
            Out - MembershipCreateStatus object containing status of the Create User process
            </param>
            <returns>
            Boolean depending on whether the deletion was successful
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.DeleteUser(System.String,System.Boolean)">
            <summary>
            Delete User and User's information from provider
            </summary>
            <param name="username">
            Username to delete
            </param>
            <param name="deleteAllRelatedData">
            Delete all related daata
            </param>
            <returns>
            Boolean depending on whether the deletion was successful
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Retrieves all users into a MembershupUserCollection where Email Matches
            </summary>
            <param name="emailToMatch">
            Email use as filter criteria
            </param>
            <param name="pageIndex">
            Page Index
            </param>
            <param name="pageSize">
            The page Size.
            </param>
            <param name="totalRecords">
            Out - Number of records held
            </param>
            <returns>
            <see cref="T:System.Web.Security.MembershipUser"/> Collection
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.UserFromDataRow(System.Data.DataRow)">
            <summary>
            Creates a new <see cref="T:System.Web.Security.MembershipUser"/> from a <see cref="T:System.Data.DataRow"/> with proper fields.
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Retrieves all users into a <see cref="T:System.Web.Security.MembershipUserCollection"/> where Username matches
            </summary>
            <param name="usernameToMatch">
            Username use as filter criteria
            </param>
            <param name="pageIndex">
            Page Index
            </param>
            <param name="pageSize">
            The page Size.
            </param>
            <param name="totalRecords">
            Out - Number of records held
            </param>
            <returns>
            <see cref="T:System.Web.Security.MembershipUser"/> Collection
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Retrieves all users into a <see cref="T:System.Web.Security.MembershipUserCollection"/>
            </summary>
            <param name="pageIndex">
            Page Index
            </param>
            <param name="pageSize">
            The page Size.
            </param>
            <param name="totalRecords">
            Out - Number of records held
            </param>
            <returns>
            <see cref="T:System.Web.Security.MembershipUser"/> Collection
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.GetNumberOfUsersOnline">
            <summary>
            Retrieves the number of users currently online for this application
            </summary>
            <returns>
            Number of users online
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.GetPassword(System.String,System.String)">
            <summary>
            Retrieves the Users password (if <see cref="P:YAF.Providers.Membership.YafMembershipProvider.EnablePasswordRetrieval"/> is <see langword="true"/>)
            </summary>
            <param name="username">
            Username to retrieve password for
            </param>
            <param name="answer">
            Answer to the Users Membership Question
            </param>
            <returns>
            Password unencrypted
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.GetUser(System.String,System.Boolean)">
            <summary>
            Retrieves a <see cref="T:System.Web.Security.MembershipUser"/> object from the criteria given
            </summary>
            <param name="username">
            Username to be foundr
            </param>
            <param name="userIsOnline">
            Is the User currently online
            </param>
            <returns>
            MembershipUser object
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.GetUser(System.Object,System.Boolean)">
            <summary>
            Retrieves a <see cref="T:System.Web.Security.MembershipUser"/> object from the criteria given
            </summary>
            <param name="providerUserKey">
            User to be found based on UserKey
            </param>
            <param name="userIsOnline">
            Is the User currently online
            </param>
            <returns>
            MembershipUser object
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.GetUserNameByEmail(System.String)">
            <summary>
            Retrieves a <see cref="T:System.Web.Security.MembershipUser"/> object from the criteria given
            </summary>
            <param name="email">
            The email.
            </param>
            <returns>
            Username as string
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initialize Membership Provider
            </summary>
            <param name="name">
            Membership Provider Name
            </param>
            <param name="config">
            <see cref="T:System.Collections.Specialized.NameValueCollection"/> of configuration items
            </param>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.ResetPassword(System.String,System.String)">
            <summary>
            Reset a users password - *
            </summary>
            <param name="username">
            User to be found based by Name
            </param>
            <param name="answer">
            Verification that it is them
            </param>
            <returns>
            Username as string
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.UnlockUser(System.String)">
            <summary>
            Unlocks a users account
            </summary>
            <param name="userName">
            The user Name.
            </param>
            <returns>
            True/False is users account has been unlocked
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
            <summary>
            Updates a providers user information
            </summary>
            <param name="user">
            <see cref="T:System.Web.Security.MembershipUser"/> object
            </param>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.ValidateUser(System.String,System.String)">
            <summary>
            Validates a user by user name / password
            </summary>
            <param name="username">
            Username
            </param>
            <param name="password">
            Password
            </param>
            /// 
            <returns>
            True/False whether username/password match what is on database.
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.EncodeString(System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Encrypt string to hash method.
            </summary>
            <param name="clearString">
            UnEncrypted Clear String
            </param>
            <param name="encFormat">
            The enc Format.
            </param>
            <param name="salt">
            Salt to be used in Hash method
            </param>
            <param name="useSalt">
            Salt to be used in Hash method
            </param>
            <param name="hashHex">
            The hash Hex.
            </param>
            <param name="hashCase">
            The hash Case.
            </param>
            <param name="hashRemoveChars">
            The hash Remove Chars.
            </param>
            <param name="msCompliant">
            The ms Compliant.
            </param>
            <returns>
            Encrypted string
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.DecodeString(System.String,System.Int32)">
            <summary>
            Decrypt string using passwordFormat.
            </summary>
            <param name="pass">
            Password to be decrypted
            </param>
            <param name="passwordFormat">
            Method of encryption
            </param>
            <returns>
            Unencrypted string
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.Encrypt(System.String,System.String,System.Boolean)">
            <summary>
            The encrypt.
            </summary>
            <param name="clearString">
            The clear string.
            </param>
            <param name="saltString">
            The salt string.
            </param>
            <param name="standardComp">
            The standard comp.
            </param>
            <returns>
            The encrypt.
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.GeneratePassword(System.Int32,System.Int32)">
            <summary>
            Creates a random password based on a miniumum length and a minimum number of non-alphanumeric characters
            </summary>
            <param name="minPassLength">
            Minimum characters in the password
            </param>
            <param name="minNonAlphas">
            Minimum non-alphanumeric characters
            </param>
            <returns>
            Random string
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.GenerateSalt">
            <summary>
            Creates a random string used as Salt for hashing
            </summary>
            <returns>
            Random string
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.Hash(System.Byte[],System.String)">
            <summary>
            Hashes clear bytes to given hashtype
            </summary>
            <param name="clearBytes">
            Clear bytes to hash
            </param>
            <param name="hashType">
            hash Algorithm to be used
            </param>
            <returns>
            Hashed bytes 
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.HashType">
            <summary>
            The hash type.
            </summary>
            <returns>
            The hash type.
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.IsPasswordCompliant(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Check to see if password(string) matches required criteria.
            </summary>
            <param name="password">
            Password to be checked
            </param>
            <param name="minLength">
            Minimum length required
            </param>
            <param name="minNonAlphaNumerics">
            Minimum number of Non-alpha numerics in password
            </param>
            <param name="strengthRegEx">
            Regular Expression Strength
            </param>
            <returns>
            True/False 
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.YafMembershipProvider.IsPasswordCompliant(System.String)">
            <summary>
            Check to see if password(string) matches required criteria.
            </summary>
            <param name="passsword">
            The passsword.
            </param>
            <returns>
            True/False 
            </returns>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.ApplicationName">
            <summary>
            Gets or sets ApplicationName.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.EnablePasswordReset">
            <summary>
            Gets a value indicating whether EnablePasswordReset.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.EnablePasswordRetrieval">
            <summary>
            Gets a value indicating whether EnablePasswordRetrieval.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.MaxInvalidPasswordAttempts">
            <summary>
            Gets MaxInvalidPasswordAttempts.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.MinRequiredNonAlphanumericCharacters">
            <summary>
            Gets MinRequiredNonAlphanumericCharacters.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.MinRequiredPasswordLength">
            <summary>
            Gets MinRequiredPasswordLength.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.PasswordAttemptWindow">
            <summary>
            Gets PasswordAttemptWindow.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.PasswordFormat">
            <summary>
            Gets PasswordFormat.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.PasswordStrengthRegularExpression">
            <summary>
            Gets PasswordStrengthRegularExpression.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.RequiresQuestionAndAnswer">
            <summary>
            Gets a value indicating whether RequiresQuestionAndAnswer.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.RequiresUniqueEmail">
            <summary>
            Gets a value indicating whether RequiresUniqueEmail.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.HashCase">
            <summary>
            Gets HashCase.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.HashHex">
            <summary>
            Gets a value indicating whether HashHex.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.HashRemoveChars">
            <summary>
            Gets HashRemoveChars.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.MSCompliant">
            <summary>
            Gets a value indicating whether MSCompliant.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.YafMembershipProvider.UseSalt">
            <summary>
            Gets a value indicating whether UseSalt.
            </summary>
        </member>
        <member name="T:YAF.Providers.Membership.UserPasswordInfo">
            <summary>
            The user password info.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._failedAnswerAttempts">
            <summary>
            The _failed answer attempts.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._failedPasswordAttempts">
            <summary>
            The _failed password attempts.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._hashCase">
            <summary>
            The _hash case.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._hashHex">
            <summary>
            The _hash hex.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._hashRemoveChars">
            <summary>
            The _hash remove chars.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._isApproved">
            <summary>
            The _is approved.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._lastActivity">
            <summary>
            The _last activity.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._lastLogin">
            <summary>
            The _last login.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._msCompliant">
            <summary>
            The _ms compliant.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._password">
            <summary>
            The _password.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._passwordAnswer">
            <summary>
            The _password answer.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._passwordFormat">
            <summary>
            The _password format.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._passwordQuestion">
            <summary>
            The _password question.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._passwordSalt">
            <summary>
            The _password salt.
            </summary>
        </member>
        <member name="F:YAF.Providers.Membership.UserPasswordInfo._useSalt">
            <summary>
            The _use salt.
            </summary>
        </member>
        <member name="M:YAF.Providers.Membership.UserPasswordInfo.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.DateTime,System.DateTime,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Providers.Membership.UserPasswordInfo"/> class. 
            Called to create a new UserPasswordInfo class instance.
            </summary>
            <param name="password">
            </param>
            <param name="passwordSalt">
            </param>
            <param name="passwordQuestion">
            </param>
            <param name="passwordAnswer">
            </param>
            <param name="passwordFormat">
            </param>
            <param name="failedPasswordAttempts">
            </param>
            <param name="failedAnswerAttempts">
            </param>
            <param name="isApproved">
            </param>
            <param name="useSalt">
            </param>
            <param name="lastLogin">
            </param>
            <param name="lastActivity">
            </param>
            <param name="hashHex">
            The hash Hex.
            </param>
            <param name="hashCase">
            The hash Case.
            </param>
            <param name="hashRemoveChars">
            The hash Remove Chars.
            </param>
            <param name="msCompliant">
            The ms Compliant.
            </param>
        </member>
        <member name="M:YAF.Providers.Membership.UserPasswordInfo.CreateInstanceFromDB(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Boolean)">
            <summary>
            The create instance from db.
            </summary>
            <param name="appName">
            The app name.
            </param>
            <param name="username">
            The username.
            </param>
            <param name="updateUser">
            The update user.
            </param>
            <param name="useSalt">
            The use salt.
            </param>
            <param name="hashHex">
            The hash hex.
            </param>
            <param name="hashCase">
            The hash case.
            </param>
            <param name="hashRemoveChars">
            The hash remove chars.
            </param>
            <param name="msCompliant">
            The ms compliant.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.UserPasswordInfo.IsCorrectAnswer(System.String)">
            <summary>
            Checks the user answer against the one provided for validity
            </summary>
            <param name="answerToCheck">
            </param>
            <returns>
            The is correct answer.
            </returns>
        </member>
        <member name="M:YAF.Providers.Membership.UserPasswordInfo.IsCorrectPassword(System.String)">
            <summary>
            Checks the password against the one provided for validity
            </summary>
            <param name="passwordToCheck">
            </param>
            <returns>
            The is correct password.
            </returns>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.FailedAnswerAttempts">
            <summary>
            Gets FailedAnswerAttempts.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.FailedPasswordAttempts">
            <summary>
            Gets FailedPasswordAttempts.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.hashCase">
            <summary>
            Gets hashCase.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.HashHex">
            <summary>
            Gets a value indicating whether HashHex.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.hashRemoveChars">
            <summary>
            Gets hashRemoveChars.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.IsApproved">
            <summary>
            Gets a value indicating whether IsApproved.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.LastActivity">
            <summary>
            Gets LastActivity.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.LastLogin">
            <summary>
            Gets LastLogin.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.msCompliant">
            <summary>
            Gets a value indicating whether msCompliant.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.Password">
            <summary>
            Gets Password.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.PasswordAnswer">
            <summary>
            Gets PasswordAnswer.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.PasswordFormat">
            <summary>
            Gets PasswordFormat.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.PasswordQuestion">
            <summary>
            Gets PasswordQuestion.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.PasswordSalt">
            <summary>
            Gets PasswordSalt.
            </summary>
        </member>
        <member name="P:YAF.Providers.Membership.UserPasswordInfo.UseSalt">
            <summary>
            Gets a value indicating whether UseSalt.
            </summary>
        </member>
        <member name="T:YAFProviders.Utils.ExcReturn">
            <summary>
            The exc return.
            </summary>
        </member>
        <member name="T:YAF.Providers.Roles.YafRoleProvider">
            <summary>
            The yaf role provider.
            </summary>
        </member>
        <member name="F:YAF.Providers.Roles.YafRoleProvider._connStrAppKeyName">
            <summary>
            The conn str app key name.
            </summary>
        </member>
        <member name="F:YAF.Providers.Roles.YafRoleProvider._appName">
            <summary>
            The _app name.
            </summary>
        </member>
        <member name="F:YAF.Providers.Roles.YafRoleProvider._connStrName">
            <summary>
            The _conn str name.
            </summary>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.AddUsersToRoles(System.String[],System.String[])">
            <summary>
            Adds a list of users to a list of groups
            </summary>
            <param name="usernames">
            List of Usernames
            </param>
            <param name="roleNames">
            List of Rolenames
            </param>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.CreateRole(System.String)">
            <summary>
            Creates a role
            </summary>
            <param name="roleName">
            </param>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.DeleteRole(System.String,System.Boolean)">
            <summary>
            Deletes a role
            </summary>
            <param name="roleName">
            </param>
            <param name="throwOnPopulatedRole">
            </param>
            <returns>
            True or False
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.FindUsersInRole(System.String,System.String)">
            <summary>
            Adds a list of users to a list of groups
            </summary>
            <param name="roleName">
            Rolename
            </param>
            <param name="usernameToMatch">
            like Username used in search
            </param>
            <returns>
            List of Usernames
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.GetAllRoles">
            <summary>
            Grabs all the roles from the DB
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.GetRolesForUser(System.String)">
            <summary>
            Grabs all the roles from the DB
            </summary>
            <param name="username">
            The username.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.GetUsersInRole(System.String)">
            <summary>
            Gets a list of usernames in a a particular role
            </summary>
            <param name="roleName">
            Rolename
            </param>
            <returns>
            List of Usernames
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Sets up the profile providers
            </summary>
            <param name="name">
            </param>
            <param name="config">
            </param>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.IsUserInRole(System.String,System.String)">
            <summary>
            Check to see if user belongs to a role
            </summary>
            <param name="username">
            Username
            </param>
            <param name="roleName">
            Rolename
            </param>
            <returns>
            True/False
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
            <summary>
            Remove Users From Roles
            </summary>
            <param name="usernames">
            Usernames
            </param>
            <param name="roleNames">
            Rolenames
            </param>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.RoleExists(System.String)">
            <summary>
            Check to see if a role exists
            </summary>
            <param name="roleName">
            Rolename
            </param>
            <returns>
            True/False
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.ClearUserRoleCache">
            <summary>
            The clear user role cache.
            </summary>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.DeleteFromRoleCacheIfExists(System.String)">
            <summary>
            The delete from role cache if exists.
            </summary>
            <param name="key">
            The key.
            </param>
        </member>
        <member name="M:YAF.Providers.Roles.YafRoleProvider.GenerateCacheKey(System.String)">
            <summary>
            The generate cache key.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The generate cache key.
            </returns>
        </member>
        <member name="P:YAF.Providers.Roles.YafRoleProvider.ConnStrAppKeyName">
            <summary>
            Gets the Connection String App Key Name.
            </summary>
        </member>
        <member name="P:YAF.Providers.Roles.YafRoleProvider.ApplicationName">
            <summary>
            Gets or sets ApplicationName.
            </summary>
        </member>
        <member name="P:YAF.Providers.Roles.YafRoleProvider.UserRoleCache">
            <summary>
            Gets UserRoleCache.
            </summary>
        </member>
        <member name="T:YAF.Providers.Utils.Transform">
            <summary>
            The transform.
            </summary>
        </member>
        <member name="M:YAF.Providers.Utils.Transform.ToDateTime(System.Object,System.DateTime)">
            <summary>
            Convert Object to <see cref="T:System.DateTime"/>.
            </summary>
            <param name="obj">
            The <see cref="T:System.DateTime"/> object.
            </param>
            <param name="defaultDateTime">Default <see cref="T:System.DateTime"/> returned if obj is <see langword="null"/>.</param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.Transform.ToStringDBNull(System.Object)">
            <summary>
            The to string.
            </summary>
            <param name="obj">
            The obj.
            </param>
            <returns>
            The string.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.Transform.ToStringDBNull(System.Object,System.String)">
            <summary>
            The to string.
            </summary>
            <param name="obj">
            The obj.
            </param>
            <param name="defValue">
            The def value.
            </param>
            <returns>
            The to string.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.Transform.ToStringArray(System.Collections.Specialized.StringCollection)">
            <summary>
            The to string array.
            </summary>
            <param name="coll">
            The coll.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.Transform.ToBool(System.Object)">
            <summary>
            Convert object to a boolean.
            </summary>
            <param name="obj">
            The obj.
            </param>
            <returns>
            The boolean.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.Transform.ToBool(System.Object,System.Boolean)">
            <summary>
            Convert object to a boolean.
            </summary>
            <param name="obj">
            The object that will be converted
            </param>
            <param name="defaultValue">The defaultValue</param>
            <returns>
            The boolean.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.Transform.ToInt(System.Object)">
            <summary>
            The to int.
            </summary>
            <param name="obj">
            The obj.
            </param>
            <returns>
            The to int.
            </returns>
        </member>
        <member name="M:YAF.Providers.Utils.Transform.ToHexString(System.Byte[])">
            <summary>
            The to hex string.
            </summary>
            <param name="hashedBytes">
            The hashed bytes.
            </param>
            <returns>
            The to hex string.
            </returns>
        </member>
        <member name="T:YAF.Providers.Roles.MsSqlRolesDbConnectionManager">
            <summary>
            The yaf roles db conn manager.
            </summary>
        </member>
        <member name="P:YAF.Providers.Roles.MsSqlRolesDbConnectionManager.ConnectionString">
            <summary>
              Gets ConnectionString.
            </summary>
        </member>
        <member name="T:YAF.Providers.Roles.DB">
            <summary>
            The db.
            </summary>
        </member>
        <member name="F:YAF.Providers.Roles.DB._msSqlDbAccess">
            <summary>
              The _db access.
            </summary>
        </member>
        <member name="M:YAF.Providers.Roles.DB.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Providers.Roles.DB"/> class.
            </summary>
        </member>
        <member name="M:YAF.Providers.Roles.DB.AddUserToRole(System.Object,System.Object,System.Object)">
            <summary>
            Database Action - Add User to Role
            </summary>
            <param name="appName">
            Application Name
            </param>
            <param name="userName">
            User Name
            </param>
            <param name="roleName">
            Role Name
            </param>
        </member>
        <member name="M:YAF.Providers.Roles.DB.CreateRole(System.Object,System.Object)">
            <summary>
            Database Action - Create Role
            </summary>
            <param name="appName">
            Application Name
            </param>
            <param name="roleName">
            Role Name
            </param>
        </member>
        <member name="M:YAF.Providers.Roles.DB.DeleteRole(System.Object,System.Object,System.Object)">
            <summary>
            Database Action - Delete Role
            </summary>
            <param name="appName">
            Application Name
            </param>
            <param name="roleName">
            Role Name
            </param>
            <param name="deleteOnlyIfRoleIsEmpty">
            The delete Only If Role Is Empty.
            </param>
            <returns>
            Status as integer
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.DB.FindUsersInRole(System.Object,System.Object)">
            <summary>
            Database Action - Find Users in Role
            </summary>
            <param name="appName">
            Application Name
            </param>
            <param name="roleName">
            Role Name
            </param>
            <returns>
            Datatable containing User Information
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.DB.GetRoleExists(System.Object,System.Object)">
            <summary>
            Database Action - Get Role Exists
            </summary>
            <param name="appName">
            Application Name
            </param>
            <param name="roleName">
            Role Name
            </param>
            <returns>
            Database containing Role Information
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.DB.GetRoles(System.Object,System.Object)">
            <summary>
            Database Action - Get Roles
            </summary>
            <param name="appName">
            Application Name
            </param>
            <param name="username">
            The username.
            </param>
            <returns>
            Database containing Role Information
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.DB.IsUserInRole(System.Object,System.Object,System.Object)">
            <summary>
            Database Action - Add User to Role
            </summary>
            <param name="appName">
            Application Name
            </param>
            <param name="userName">
            User Name
            </param>
            <param name="roleName">
            Role Name
            </param>
            <returns>
            DataTable with user information
            </returns>
        </member>
        <member name="M:YAF.Providers.Roles.DB.RemoveUserFromRole(System.Object,System.String,System.String)">
            <summary>
            Database Action - Remove User From Role
            </summary>
            <param name="appName">
            Application Name
            </param>
            <param name="userName">
            User Name
            </param>
            <param name="roleName">
            Role Name
            </param>
        </member>
        <member name="P:YAF.Providers.Roles.DB.Current">
            <summary>
              Gets Current.
            </summary>
        </member>
    </members>
</doc>
