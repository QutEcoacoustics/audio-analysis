<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YAF.Classes.Data</name>
    </assembly>
    <members>
        <member name="T:YAF.Classes.Data.BaseDataTableResultFilter">
            <summary>
            The abstract base data table result filter.
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.BaseDataTableResultFilter._sqlCommandStartsWith">
            <summary>
            The filter that sql commands starts with -- if none added all commands are processed.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.BaseDataTableResultFilter.Process(System.Data.DataTable@,System.String)">
            <summary>
            The process.
            </summary>
            <param name="dataTable">
            The data table.
            </param>
            <param name="sqlCommand">
            The sql command.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.BaseDataTableResultFilter.FilteredProcess(System.Data.DataTable@,System.String)">
            <summary>
            The filtered process.
            </summary>
            <param name="dataTable">
            The data table.
            </param>
            <param name="sqlCommand">
            The sql command.
            </param>
        </member>
        <member name="P:YAF.Classes.Data.BaseDataTableResultFilter.Rank">
            <summary>
            Gets Rank.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.BaseDataTableResultFilter.SqlCommandStartsWith">
            <summary>
            Gets or sets SqlCommandStartsWith.
            </summary>
        </member>
        <member name="T:YAF.Classes.Data.DataRowConvert">
            <summary>
            Helper class to do basic data conversion for a DataRow.
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.DataRowConvert._dbRow">
            <summary>
              The _db row.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.DataRowConvert.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Classes.Data.DataRowConvert"/> class.
            </summary>
            <param name="dbRow">
            The db row.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.DataRowConvert.AsBool(System.String)">
            <summary>
            The as bool.
            </summary>
            <param name="columnName">
            The column name.
            </param>
            <returns>
            The as bool.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.DataRowConvert.AsDateTime(System.String)">
            <summary>
            The as date time.
            </summary>
            <param name="columnName">
            The column name.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.DataRowConvert.AsInt32(System.String)">
            <summary>
            The as int 32.
            </summary>
            <param name="columnName">
            The column name.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.DataRowConvert.AsInt64(System.String)">
            <summary>
            The as int 64.
            </summary>
            <param name="columnName">
            The column name.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.DataRowConvert.AsString(System.String)">
            <summary>
            The as string.
            </summary>
            <param name="columnName">
            The column name.
            </param>
            <returns>
            The as string.
            </returns>
        </member>
        <member name="T:YAF.Classes.Data.SearchConditionType">
            <summary>
            The search condition type.
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.SearchConditionType.AND">
            <summary>
              The and.
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.SearchConditionType.OR">
            <summary>
              The or.
            </summary>
        </member>
        <member name="T:YAF.Classes.Data.QueryCounter">
            <summary>
            The query counter.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.QueryCounter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Classes.Data.QueryCounter"/> class.
            </summary>
            <param name="sql">
            The sql.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.QueryCounter.Dispose">
            <summary>
            The dispose.
            </summary>
        </member>
        <member name="T:YAF.Classes.Data.LegacyDb">
            <summary>
            All the Database functions for YAF
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.LegacyDb._scriptList">
            <summary>
            The _script list.
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.LegacyDb._fullTextScript">
            <summary>
            The _full text script.
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.LegacyDb._fullTextSupported">
            <summary>
            The _full text supported.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.GetBooleanRegistryValue(System.String)">
            <summary>
            The get boolean registry value.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The get boolean registry value.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pageload(System.Object,System.Object,System.Guid,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The pageload.
            </summary>
            <param name="sessionID">
            The session id.
            </param>
            <param name="boardID">
            The board id.
            </param>
            <param name="userKey">
            The user key.
            </param>
            <param name="ip">
            The ip.
            </param>
            <param name="location">
            The location.
            </param>
            <param name="forumPage">
            The forum page name.   
            </param>
            <param name="browser">
            The browser.
            </param>
            <param name="platform">
            The platform.
            </param>
            <param name="categoryID">
            The category id.
            </param>
            <param name="forumID">
            The forum id.
            </param>
            <param name="topicID">
            The topic id.
            </param>
            <param name="messageID">
            The message id.
            </param>
            <param name="isMobileDevice">
            The browser is a mobile device.
            </param>
            <param name="donttrack">
            The donttrack.
            </param>
            <returns>
            Common User Info DataRow
            </returns>
            <exception cref="T:System.ApplicationException">
            </exception>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.GetSearchResult(System.String,System.String,YAF.Types.Constants.SearchWhatFlags,YAF.Types.Constants.SearchWhatFlags,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Returns Search results
            </summary>
            <param name="toSearchWhat">
            The to Search What.
            </param>
            <param name="toSearchFromWho">
            The to Search From Who.
            </param>
            <param name="searchFromWhoMethod">
            The search From Who Method.
            </param>
            <param name="searchWhatMethod">
            The search What Method.
            </param>
            <param name="forumIDToStartAt">
            The forum ID To Start At.
            </param>
            <param name="userID">
            The user ID.
            </param>
            <param name="boardId">
            The board Id.
            </param>
            <param name="maxResults">
            The max Results.
            </param>
            <param name="useFullText">
            The use Full Text.
            </param>
            <returns>
            Results
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.ds_forumadmin(System.Object)">
            <summary>
            Gets a list of categories????
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <returns>
            DataSet with categories
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.accessmask_list(System.Object,System.Object)">
            <summary>
            Gets a list of access mask properities
            </summary>
            <param name="boardID">
            ID of Board
            </param>
            <param name="accessMaskID">
            ID of access mask
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.accessmask_list(System.Object,System.Object,System.Object)">
            <summary>
            Gets a list of access mask properities
            </summary>
            <param name="boardID">
            ID of Board
            </param>
            <param name="accessMaskID">
            ID of access mask
            </param>
            <param name="excludeFlags">
            Ommit access masks with this flags set.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.accessmask_delete(System.Object)">
            <summary>
            Deletes an access mask
            </summary>
            <param name="accessMaskID">
            ID of access mask
            </param>
            <returns>
            The accessmask_delete.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.accessmask_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Saves changes to a access mask 
            </summary>
            <param name="accessMaskID">
            ID of access mask
            </param>
            <param name="boardID">
            ID of board
            </param>
            <param name="name">
            Name of access mask
            </param>
            <param name="readAccess">
            Read Access?
            </param>
            <param name="postAccess">
            Post Access?
            </param>
            <param name="replyAccess">
            Reply Access?
            </param>
            <param name="priorityAccess">
            Priority Access?
            </param>
            <param name="pollAccess">
            Poll Access?
            </param>
            <param name="voteAccess">
            Vote Access?
            </param>
            <param name="moderatorAccess">
            Moderator Access?
            </param>
            <param name="editAccess">
            Edit Access?
            </param>
            <param name="deleteAccess">
            Delete Access?
            </param>
            <param name="uploadAccess">
            Upload Access?
            </param>
            <param name="downloadAccess">
            Download Access?
            </param> 
            <param name="sortOrder">
            Sort Order?
            </param> 
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.active_list(System.Object,System.Object,System.Object,System.Int32,System.Object)">
            <summary>
            Gets list of active users
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <param name="Guests">
            </param>
            <param name="activeTime">
            The active Time.
            </param>
            <param name="styledNicks">
            The styled Nicks.
            </param>
            <returns>
            Returns a DataTable of active users
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.active_list_user(System.Object,System.Object,System.Object,System.Object,System.Int32,System.Object)">
            <summary>
            Gets list of active users for a specific user with access fixes to not display him forbidden locations. 
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <param name="userID">
            the UserID
            </param>
            <param name="Guests">
            </param>
            <param name="activeTime">
            The active Time.
            </param>
            <param name="styledNicks">
            The styled Nicks.
            </param>
            <returns>
            Returns a DataTable of active users
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.active_listforum(System.Object,System.Object)">
            <summary>
            Gets the list of active users within a certain forum
            </summary>
            <param name="forumID">
            forumID
            </param>
            <param name="styledNicks">
            The styled Nicks.
            </param>
            <returns>
            DataTable of all ative users in a forum
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.active_listtopic(System.Object,System.Object)">
            <summary>
            Gets the list of active users in a topic
            </summary>
            <param name="topicID">
            ID of topic 
            </param>
            <param name="styledNicks">
            The styled Nicks.
            </param>
            <returns>
            DataTable of all users that are in a topic
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.active_stats(System.Object)">
            <summary>
            Gets the activity statistics for a board
            </summary>
            <param name="boardID">
            boardID
            </param>
            <returns>
            DataRow of activity stata
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.attachment_list(System.Object,System.Object,System.Object)">
            <summary>
            Gets a list of attachments
            </summary>
            <param name="messageID">
            messageID
            </param>
            <param name="attachmentID">
            attachementID
            </param>
            <param name="boardID">
            boardID
            </param>
            <returns>
            DataTable with attachement list
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.attachment_save(System.Object,System.Object,System.Object,System.Object,System.IO.Stream)">
            <summary>
            saves attachment
            </summary>
            <param name="messageID">
            messageID
            </param>
            <param name="fileName">
            File Name
            </param>
            <param name="bytes">
            number of bytes
            </param>
            <param name="contentType">
            type of attchment
            </param>
            <param name="stream">
            stream of bytes
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.attachment_delete(System.Object)">
            <summary>
            Delete attachment
            </summary>
            <param name="attachmentID">
            ID of attachment to delete
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.attachment_download(System.Object)">
            <summary>
            Attachement dowload
            </summary>
            <param name="attachmentID">
            ID of attachemnt to download
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.bannedip_list(System.Object,System.Object)">
            <summary>
            List of Baned IP's
            </summary>
            <param name="boardID">
            ID of board
            </param>
            <param name="ID">
            ID
            </param>
            <returns>
            DataTable of banned IPs
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.bannedip_save(System.Object,System.Object,System.Object,System.String,System.Int32)">
            <summary>
            Saves baned ip in database
            </summary>
            <param name="ID">
            ID
            </param>
            <param name="boardID">
            BoardID
            </param>
            <param name="Mask">
            Mask
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.bannedip_delete(System.Object)">
            <summary>
            Deletes Banned IP
            </summary>
            <param name="ID">
            ID of banned ip to delete
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_list(System.Object)">
            <summary>
            Gets a list of information about a board
            </summary>
            <param name="boardID">
            board id
            </param>
            <returns>
            DataTable
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_poststats(System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Gets posting statistics
            </summary>
            <param name="boardId">
            BoardID
            </param>
            <param name="useStyledNick">
            UseStyledNick
            </param>
            <param name="showNoCountPosts">
            ShowNoCountPosts
            </param> 
            <returns>
            DataRow of Poststats
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_userstats(System.Nullable{System.Int32})">
            <summary>
            Gets users statistics
            </summary>
            <param name="boardId">
            BoardID
            </param>
            <returns>
            DataRow of Poststats
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_resync">
            <summary>
            Recalculates topic and post numbers and updates last post for all forums in all boards
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_resync(System.Object)">
            <summary>
            Recalculates topic and post numbers and updates last post for specified board
            </summary>
            <param name="boardID">
            BoardID of board to do re-sync for, if null, all boards are re-synced
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_stats">
            <summary>
            Gets statistica about number of posts etc.
            </summary>
            <returns>
            DataRow
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_stats(System.Object)">
            <summary>
            The board_stats.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_save(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Saves board information
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <param name="name">
            Name of Board
            </param>
            <param name="allowThreaded">
            Boolen value, allowThreaded
            </param>
            <returns>
            The board_save.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_setguid(System.Object,System.Object)">
            <summary>
            Saves board unique id.
            </summary>
            <param name="boardId">
            The Board Id.
            </param>
            <param name="boardUid">
            The Board Uid.
            </param>
            <returns>
            The board_setguid.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_create(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Creates a new board
            </summary>
            <param name="adminUsername">
            Membership Provider User Name
            </param>
            <param name="adminUserKey">
            Membership Provider User Key
            </param>
            <param name="boardName">
            Name of new board
            </param>
            <param name="boardMembershipName">
            Membership Provider Application Name for new board
            </param>
            <param name="boardRolesName">
            Roles Provider Application Name for new board
            </param>
            <returns>
            The board_create.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.board_delete(System.Object)">
            <summary>
            Deletes a board
            </summary>
            <param name="boardID">
            ID of board to delete
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.category_delete(System.Object)">
            <summary>
            Deletes a category
            </summary>
            <param name="CategoryID">
            ID of category to delete
            </param>
            <returns>
            Bool value indicationg if category was deleted
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.category_list(System.Object,System.Object)">
            <summary>
            Gets a list of forums in a category
            </summary>
            <param name="boardID">
            boardID
            </param>
            <param name="categoryID">
            categotyID
            </param>
            <returns>
            DataTable with a list of forums in a category
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.category_listread(System.Object,System.Object,System.Object)">
            <summary>
            Gets a list of forum categories
            </summary>
            <param name="boardID">
            </param>
            <param name="userID">
            </param>
            <param name="categoryID">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.category_simplelist(System.Int32,System.Int32)">
            <summary>
            Lists categories very simply (for URL rewriting)
            </summary>
            <param name="startID">
            The start ID.
            </param>
            <param name="limit">
            The limit.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.category_save(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Saves changes to a category
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <param name="categoryId">
            The category Id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="categoryImage">
            The category Image.
            </param>
            <param name="sortOrder">
            The sort Order.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.checkemail_save(System.Object,System.Object,System.Object)">
            <summary>
            Saves a new email into the table for verification
            </summary>
            <param name="userID">
            The user ID.
            </param>
            <param name="hash">
            The hash.
            </param>
            <param name="email">
            The email.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.checkemail_update(System.Object)">
            <summary>
            Updates a hash
            </summary>
            <param name="hash">
            New hash
            </param>
            <returns>
            DataTable with user information
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.checkemail_list(System.Object)">
            <summary>
            Gets a check email entry based on email or all if no email supplied
            </summary>
            <param name="email">
            Associated email
            </param>
            <returns>
            DataTable with check email information
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.choice_vote(System.Object,System.Object,System.Object)">
            <summary>
            Saves a vote in the database
            </summary>
            <param name="choiceID">
            Choice of the vote
            </param>
            <param name="userID">
            The user ID.
            </param>
            <param name="remoteIP">
            The remote IP.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.eventlog_create(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The eventlog_create.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="source">
            The source.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="type">
            The type.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.eventlog_create(System.Object,System.Object,System.Object)">
            <summary>
            The eventlog_create.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="source">
            The source.
            </param>
            <param name="description">
            The description.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.eventlog_delete(System.Int32)">
            <summary>
            Deletes all event log entries for given board.
            </summary>
            <param name="boardID">
            ID of board.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.eventlog_delete(System.Object)">
            <summary>
            Deletes event log entry of given ID.
            </summary>
            <param name="eventLogID">
            ID of event log entry.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.eventlog_delete(System.Object,System.Object)">
            <summary>
            Calls underlying stroed procedure for deletion of event log entry(ies).
            </summary>
            <param name="eventLogID">
            When not null, only given event log entry is deleted.
            </param>
            <param name="boardID">
            Specifies board. It is ignored if eventLogID parameter is not null.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.eventlog_list(System.Object)">
            <summary>
            The eventlog_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.extension_delete(System.Object)">
            <summary>
            The extension_delete.
            </summary>
            <param name="extensionId">
            The extension id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.extension_edit(System.Object)">
            <summary>
            The extension_edit.
            </summary>
            <param name="extensionId">
            The extension id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.extension_list(System.Object,System.Object)">
            <summary>
            The extension_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="extension">
            The extension.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.extension_list(System.Object)">
            <summary>
            The extension_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.extension_save(System.Object,System.Object,System.Object)">
            <summary>
            The extension_save.
            </summary>
            <param name="extensionId">
            The extension id.
            </param>
            <param name="boardID">
            The board id.
            </param>
            <param name="Extension">
            The extension.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pollvote_check(System.Object,System.Object,System.Object)">
            <summary>
            Checks for a vote in the database
            </summary>
            <param name="pollid">
            The pollid.
            </param>
            <param name="userid">
            The userid.
            </param>
            <param name="remoteip">
            The remoteip.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pollgroup_votecheck(System.Object,System.Object,System.Object)">
            <summary>
            Checks for a vote in the database 
            </summary>
            <param name="pollGroupId">
            The pollGroupid.
            </param>
            <param name="userId">
            The userid.
            </param>
            <param name="remoteIp">
            The remoteip.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_deleteAttachments(System.Object)">
            <summary>
            Deletes attachments out of a entire forum
            </summary>
            <param name="forumID">
            The forum ID.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_delete(System.Object)">
            <summary>
            Deletes a forum
            </summary>
            <param name="forumID">
            The forum ID.
            </param>
            <returns>
            bool to indicate that forum has been deleted
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_listallMyModerated(System.Object,System.Object)">
            <summary>
            Lists all moderated forums for a user
            </summary>
            <param name="boardID">
            board if of moderators
            </param>
            <param name="userID">
            user id
            </param>
            <returns>
            DataTable of moderated forums
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_list(System.Object,System.Object)">
            <summary>
            Gets a list of topics in a forum
            </summary>
            <param name="boardID">
            boardID
            </param>
            <param name="forumID">
            The forum ID.
            </param>
            <returns>
            DataTable with list of topics from a forum
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_listall(System.Object,System.Object)">
            <summary>
            Listes all forums accessible to a user
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <param name="userID">
            ID of user
            </param>
            <returns>
            DataTable of all accessible forums
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_listall(System.Object,System.Object,System.Object)">
            <summary>
            Lists all forums accessible to a user
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <param name="userID">
            ID of user
            </param>
            <param name="startAt">
            startAt ID
            </param>
            <returns>
            DataTable of all accessible forums
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_listall_fromCat(System.Object,System.Object)">
            <summary>
            Lists all forums within a given subcategory
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <param name="categoryID">
            The category ID.
            </param>
            <returns>
            DataTable with list
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_simplelist(System.Int32,System.Int32)">
            <summary>
            Lists forums very simply (for URL rewriting)
            </summary>
            <param name="StartID">
            </param>
            <param name="Limit">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_listall_fromCat(System.Object,System.Object,System.Boolean)">
            <summary>
            Lists all forums within a given subcategory
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <param name="categoryID">
            The category ID.
            </param>
            <param name="emptyFirstRow">
            The empty First Row.
            </param>
            <returns>
            DataTable with list
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_listpath(System.Object)">
            <summary>
            Sorry no idea what this does
            </summary>
            <param name="forumID">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_listread(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Lists read topics
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <param name="userID">
            The user ID.
            </param>
            <param name="categoryID">
            The category ID.
            </param>
            <param name="parentID">
            ParentID
            </param>
            <returns>
            DataTable with list
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_moderatelist(System.Object,System.Object)">
            <summary>
            Return admin view of Categories with Forums/Subforums ordered accordingly.
            </summary>
            <param name="userID">
            UserID
            </param>
            <param name="boardID">
            BoardID
            </param>
            <returns>
            DataSet with categories
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_moderators(System.Boolean)">
            <summary>
            The forum_moderators.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_resync(System.Object)">
            <summary>
            Updates topic and post count and last topic for all forums in specified board
            </summary>
            <param name="boardID">
            BoardID
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_resync(System.Object,System.Object)">
            <summary>
            Updates topic and post count and last topic for specified forum
            </summary>
            <param name="boardID">
            BoardID
            </param>
            <param name="forumID">
            If null, all forums in board are updated
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Boolean)">
            <summary>
            The forum_save.
            </summary>
            <param name="forumID">
            The forum id.
            </param>
            <param name="categoryID">
            The category id.
            </param>
            <param name="parentID">
            The parent id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="sortOrder">
            The sort order.
            </param>
            <param name="locked">
            The locked.
            </param>
            <param name="hidden">
            The hidden.
            </param>
            <param name="isTest">
            The is test.
            </param>
            <param name="moderated">
            The moderated.
            </param>
            <param name="accessMaskID">
            The access mask id.
            </param>
            <param name="remoteURL">
            The remote url.
            </param>
            <param name="themeURL">
            The theme url.
            </param>
            <param name="imageURL">
            The imageURL.
            </param>
            <param name="styles">
            The styles.
            </param>
            <param name="dummy">
            The dummy.
            </param>
            <returns>
            The forum_save.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_save_parentschecker(System.Object,System.Object)">
            <summary>
            The method returns an integer value for a  found parent forum 
            if a forum is a parent of an existing child to avoid circular dependency
            while creating a new forum
            </summary>
            <param name="forumID"></param>
            <param name="parentID"></param>
            <returns>Integer value for a found dependency</returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_sort_list(System.Data.DataTable,System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>
            The forum_sort_list.
            </summary>
            <param name="listSource">
            The list source.
            </param>
            <param name="parentID">
            The parent id.
            </param>
            <param name="categoryID">
            The category id.
            </param>
            <param name="startingIndent">
            The starting indent.
            </param>
            <param name="forumidExclusions">
            The forumid exclusions.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_sort_list(System.Data.DataTable,System.Int32,System.Int32,System.Int32,System.Int32[],System.Boolean)">
            <summary>
            The forum_sort_list.
            </summary>
            <param name="listSource">
            The list source.
            </param>
            <param name="parentID">
            The parent id.
            </param>
            <param name="categoryID">
            The category id.
            </param>
            <param name="startingIndent">
            The starting indent.
            </param>
            <param name="forumidExclusions">
            The forumid exclusions.
            </param>
            <param name="emptyFirstRow">
            The empty first row.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_listall_sorted(System.Object,System.Object)">
            <summary>
            The forum_listall_sorted.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_listall_sorted(System.Object,System.Object,System.Int32[])">
            <summary>
            The forum_listall_sorted.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="forumidExclusions">
            The forumid exclusions.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_listall_sorted(System.Object,System.Object,System.Int32[],System.Boolean,System.Int32)">
            <summary>
            The forum_listall_sorted.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="forumidExclusions">
            The forumid exclusions.
            </param>
            <param name="emptyFirstRow">
            The empty first row.
            </param>
            <param name="startAt">
            The start at.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_list_sort_basic(System.Data.DataTable,System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            The forum_list_sort_basic.
            </summary>
            <param name="listsource">
            The listsource.
            </param>
            <param name="list">
            The list.
            </param>
            <param name="parentid">
            The parentid.
            </param>
            <param name="currentLvl">
            The current lvl.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forum_sort_list_recursive(System.Data.DataTable,System.Data.DataTable,System.Int32,System.Int32,System.Int32)">
            <summary>
            The forum_sort_list_recursive.
            </summary>
            <param name="listSource">
            The list source.
            </param>
            <param name="listDestination">
            The list destination.
            </param>
            <param name="parentID">
            The parent id.
            </param>
            <param name="categoryID">
            The category id.
            </param>
            <param name="currentIndent">
            The current indent.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forumaccess_list(System.Object)">
            <summary>
            The forumaccess_list.
            </summary>
            <param name="forumID">
            The forum id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forumaccess_save(System.Object,System.Object,System.Object)">
            <summary>
            The forumaccess_save.
            </summary>
            <param name="forumID">
            The forum id.
            </param>
            <param name="groupID">
            The group id.
            </param>
            <param name="accessMaskID">
            The access mask id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forumaccess_group(System.Object)">
            <summary>
            The forumaccess_group.
            </summary>
            <param name="groupID">
            The group id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.group_list(System.Object,System.Object)">
            <summary>
            The group_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="groupID">
            The group id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.group_delete(System.Object)">
            <summary>
            The group_delete.
            </summary>
            <param name="groupID">
            The group id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.group_member(System.Object,System.Object)">
            <summary>
            The group_member.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.group_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The group_save.
            </summary>
            <param name="groupID">
            The group id.
            </param>
            <param name="boardID">
            The board id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="isAdmin">
            The is admin.
            </param>
            <param name="isGuest">
            The is guest.
            </param>
            <param name="isStart">
            The is start.
            </param>
            <param name="isModerator">
            The is moderator.
            </param>
            <param name="accessMaskID">
            The access mask id.
            </param>
            <param name="pmLimit">
            The pm limit.
            </param>
            <param name="style">
            The style.
            </param>
            <param name="sortOrder">
            The sort order.
            </param>
            <param name="usrSigChars">
            The usrSigChars defines number of allowed characters in user signature.
            </param>    
            <param name="usrSigBBCodes">
            The UsrSigBBCodes.defines comma separated bbcodes allowed for a rank, i.e in a user signature 
            </param>
            <param name="usrSigHTMLTags">
            The UsrSigHTMLTags defines comma separated tags allowed for a rank, i.e in a user signature 
            </param>
            <param name="usrAlbums">
            The UsrAlbums defines allowed number of albums.
            </param>
            <param name="usrAlbumImages">
            The UsrAlbumImages defines number of images allowed for an album.
            </param>
            <returns>
            The group_save.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.mail_delete(System.Object)">
            <summary>
            The mail_delete.
            </summary>
            <param name="mailID">
            The mail id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.MailList(System.Int64)">
            <summary>
            The mail_list.
            </summary>
            <param name="processId">
            The process id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.mail_createwatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The mail_createwatch.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <param name="from">
            The from.
            </param>
            <param name="fromName">
            The from name.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="body">
            The body.
            </param>
            <param name="bodyHtml">
            The body html.
            </param>
            <param name="userID">
            The user id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.mail_create(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The mail_create.
            </summary>
            <param name="from">
            The from.
            </param>
            <param name="fromName">
            The from name.
            </param>
            <param name="to">
            The to.
            </param>
            <param name="toName">
            The to name.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="body">
            The body.
            </param>
            <param name="bodyHtml">
            The body html.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.post_list(System.Object,System.Object,System.Object,System.Boolean,System.Boolean,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            The post_list.
            </summary>
            <param name="topicId">
            The topic id.
            </param>
            <param name="updateViewCount">
            The update view count.
            </param>
            <param name="showDeleted">
            The show deleted.
            </param>
            <param name="styledNicks">
            The styled nicks.
            </param>
            <param name="sincePostedDate">
            The posted date.
            </param>
            <param name="sinceEditedDate">
            The edited date.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The Page size.
            </param>
            <param name="sortPosted">
            The sort by posted date.
             0 - no sort, 1 - ASC, 2 - DESC
            </param>
            <param name="sortEdited">
             The sort by edited date.
             0 - no sort, 1 - ASC, 2 - DESC.
            </param>
            <param name="showThanks">
            The show thanks. Returnes thanked posts. Not implemented.
            </param>
            <returns>
            
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.post_list_reverse10(System.Object)">
            <summary>
            The post_list_reverse 10.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.post_last10user(System.Object,System.Object,System.Object)">
            <summary>
            The post_last 10 user.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="pageUserID">
            The page user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.post_alluser(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Gets all the post by a user.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="pageUserID">
            The page user id.
            </param>
            <param name="topCount">
            Top count to return. Null is all.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_getRepliesList(System.Object)">
            <summary>
            gets list of replies to message
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_getRepliesList_populate(System.Data.DataTable,System.Data.DataTable,System.Int32)">
            <summary>
            The message_get replies list_populate.
            </summary>
            <param name="listsource">
            The listsource.
            </param>
            <param name="list">
            The list.
            </param>
            <param name="messageID">
            The message id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_create_by_message(System.Object,System.Object,System.Object)">
            <summary>
            The topic_create_by_message.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="forumId">
            The forum id.
            </param>
            <param name="newTopicSubj">
            The new topic subj.
            </param>
            <returns>
            The topic_create_by_message.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_list(System.Object)">
            <summary>
            The message_list.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.MessageList(System.Int32)">
            <summary>
            The message_list.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_delete(System.Object,System.Boolean,System.String,System.Int32,System.Boolean)">
            <summary>
            The message_delete.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="isModeratorChanged">
            The is moderator changed.
            </param>
            <param name="deleteReason">
            The delete reason.
            </param>
            <param name="isDeleteAction">
            The is delete action.
            </param>
            <param name="DeleteLinked">
            The delete linked.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_delete(System.Object,System.Boolean,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            The message_delete.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="isModeratorChanged">
            The is moderator changed.
            </param>
            <param name="deleteReason">
            The delete reason.
            </param>
            <param name="isDeleteAction">
            The is delete action.
            </param>
            <param name="DeleteLinked">
            The delete linked.
            </param>
            <param name="eraseMessage">
            The erase message.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_listreported(System.Object)">
            <summary>
            Retrieve all reported messages with the correct forumID argument.
            </summary>
            <param name="forumID">
            The forum id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_listreporters(System.Int32)">
            <summary>
            Here we get reporters list for a reported message
            </summary>
            <param name="messageID">
            The message ID.
            </param>
            <returns>
            Returns reporters DataTable for a reported message.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_listreporters(System.Int32,System.Object)">
            <summary>
            The message_listreporters.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_report(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The message_report.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="reportedDateTime">
            The reported date time.
            </param>
            <param name="reportText">
            The report text.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_reportcopyover(System.Object)">
            <summary>
            The message_reportcopyover.
            </summary>
            <param name="messageID">
            The message id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_reportresolve(System.Object,System.Object,System.Object)">
            <summary>
            The message_reportresolve.
            </summary>
            <param name="messageFlag">
            The message flag.
            </param>
            <param name="messageID">
            The message id.
            </param>
            <param name="userID">
            The user id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_deleteRecursively(System.Object,System.Boolean,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Delete message and all subsequent releated messages to that ID
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="isModeratorChanged">
            The is moderator changed.
            </param>
            <param name="deleteReason">
            The delete reason.
            </param>
            <param name="isDeleteAction">
            The is delete action.
            </param>
            <param name="DeleteLinked">
            The delete linked.
            </param>
            <param name="isLinked">
            The is linked.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_deleteRecursively(System.Object,System.Boolean,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            The message_delete recursively.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="isModeratorChanged">
            The is moderator changed.
            </param>
            <param name="deleteReason">
            The delete reason.
            </param>
            <param name="isDeleteAction">
            The is delete action.
            </param>
            <param name="deleteLinked">
            The delete linked.
            </param>
            <param name="isLinked">
            The is linked.
            </param>
            <param name="eraseMessages">
            The erase messages.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_approve(System.Object)">
            <summary>
            Set flag on message to approved and store in DB
            </summary>
            <param name="messageID">
            The message id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_simplelist(System.Int32,System.Int32)">
            <summary>
            Get message topic IDs (for URL rewriting)
            </summary>
            <param name="StartID">
            </param>
            <param name="Limit">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_update(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The message_update.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="priority">
            The priority.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="flags">
            The flags.
            </param>
            <param name="reasonOfEdit">
            The reason of edit.
            </param>
            <param name="isModeratorChanged">
            The is moderator changed.
            </param>
            <param name="editedBy">
            UserId of who edited the message.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_update(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The message_update.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="priority">
            The priority.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="flags">
            The flags.
            </param>
            <param name="reasonOfEdit">
            The reason of edit.
            </param>
            <param name="isModeratorChanged">
            The is moderator changed.
            </param>
            <param name="overrideApproval">
            The override approval.
            </param>
            <param name="originalMessage">
            The original Message.
            </param> 
            <param name="editedBy">
            UserId of who edited the message.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Int64@)">
            <summary>
            The message_save.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="ip">
            The ip.
            </param>
            <param name="posted">
            The posted.
            </param>
            <param name="replyTo">
            The reply to.
            </param>
            <param name="flags">
            The flags.
            </param>
            <param name="messageID">
            The message id.
            </param>
            <returns>
            The message_save.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_unapproved(System.Object)">
            <summary>
            The message_unapproved.
            </summary>
            <param name="forumID">
            The forum id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_findunread(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The message_findunread.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <param name="lastRead">
            The last read.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_move(System.Object,System.Object,System.Boolean)">
            <summary>
            message movind function
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="moveToTopic">
            The move to topic.
            </param>
            <param name="moveAll">
            The move all.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_moveRecursively(System.Object,System.Object)">
            <summary>
            moves answers of moved post
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <param name="moveToTopic">
            The move to topic.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_ThanksNumber(System.Object)">
            <summary>
            The message_ thanks number.
            </summary>
            <param name="messageID">
            The message id.
            </param>
            <returns>
            The message_ thanks number.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_GetThanks(System.Object)">
            <summary>
            Returns the UserIDs and UserNames who have thanked the message
            with the provided messageID.
            </summary>
            <param name="MessageID">
            The message id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_GetTextByIds(System.String)">
            <summary>
            Retuns All the message text for the Message IDs which are in the 
            delimited string variable MessageIDs
            </summary>
            <param name="messageIDs">
            The message i ds.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.MessageGetAllThanks(System.String)">
            <summary>
            Retuns All the Thanks for the Message IDs which are in the 
            delimited string variable MessageIDs
            </summary>
            <param name="messageIdsSeparatedWithColon">
            The message i ds.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_AddThanks(System.Object,System.Object)">
            <summary>
            The message_ add thanks.
            </summary>
            <param name="FromUserID">
            The from user id.
            </param>
            <param name="MessageID">
            The message id.
            </param>
            <returns>
            The message_ add thanks.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_RemoveThanks(System.Object,System.Object)">
            <summary>
            The message_ remove thanks.
            </summary>
            <param name="FromUserID">
            The from user id.
            </param>
            <param name="MessageID">
            The message id.
            </param>
            <returns>
            The message_ remove thanks.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.messagehistory_list(System.Int32,System.Int32)">
            <summary>
            The messagehistory_list.
            </summary>
            <param name="messageId">
            The Message ID.
            </param>
            <param name="daysToClean">
            Days to clean.
            </param>
            <returns>
            List of all message changes. 
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.message_secdata(System.Int32,System.Object)">
            <summary>
            Returns message data based on user access rights
            </summary>
            <param name="MessageID">The Message Id.</param>
            <param name="pageUserId">The page User Id.</param>
            <returns></returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.medal_list(System.Object)">
            <summary>
            Lists given medal.
            </summary>
            <param name="medalID">
            ID of medal to list.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.medal_list(System.Object,System.Object)">
            <summary>
            Lists given medals.
            </summary>
            <param name="boardID">
            ID of board of which medals to list. Required.
            </param>
            <param name="category">
            Cateogry of medals to list. Can be null. In such case this parameter is ignored.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.medal_list(System.Object,System.Object,System.Object)">
            <summary>
            Lists medals.
            </summary>
            <param name="boardID">
            ID of board of which medals to list. Can be null if medalID parameter is specified.
            </param>
            <param name="medalID">
            ID of medal to list. When specified, boardID and category parameters are ignored.
            </param>
            <param name="category">
            Cateogry of medals to list. Must be complemented with not-null boardID parameter.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.medal_listusers(System.Object)">
            <summary>
            List users who own this medal.
            </summary>
            <param name="medalID">
            Medal of which owners to get.
            </param>
            <returns>
            List of users with their user id and usernames, who own this medal.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.medal_delete(System.Object)">
            <summary>
            Deletes given medal.
            </summary>
            <param name="medalID">
            ID of medal to delete.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.medal_delete(System.Object,System.Object)">
            <summary>
            Deletes given medals.
            </summary>
            <param name="boardID">
            ID of board of which medals to delete. Required.
            </param>
            <param name="category">
            Cateogry of medals to delete. Can be null. In such case this parameter is ignored.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.medal_delete(System.Object,System.Object,System.Object)">
            <summary>
            Deletes medals.
            </summary>
            <param name="boardID">
            ID of board of which medals to delete. Can be null if medalID parameter is specified.
            </param>
            <param name="medalID">
            ID of medal to delete. When specified, boardID and category parameters are ignored.
            </param>
            <param name="category">
            Cateogry of medals to delete. Must be complemented with not-null boardID parameter.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.medal_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The medal_save.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="medalID">
            The medal id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="category">
            The category.
            </param>
            <param name="medalURL">
            The medal url.
            </param>
            <param name="ribbonURL">
            The ribbon url.
            </param>
            <param name="smallMedalURL">
            The small medal url.
            </param>
            <param name="smallRibbonURL">
            The small ribbon url.
            </param>
            <param name="smallMedalWidth">
            The small medal width.
            </param>
            <param name="smallMedalHeight">
            The small medal height.
            </param>
            <param name="smallRibbonWidth">
            The small ribbon width.
            </param>
            <param name="smallRibbonHeight">
            The small ribbon height.
            </param>
            <param name="sortOrder">
            The sort order.
            </param>
            <param name="flags">
            The flags.
            </param>
            <returns>
            The medal_save.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.medal_resort(System.Object,System.Object,System.Int32)">
            <summary>
            Changes medal's sort order.
            </summary>
            <param name="boardID">
            ID of board.
            </param>
            <param name="medalID">
            ID of medal to re-sort.
            </param>
            <param name="move">
            Change of sort.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.group_medal_delete(System.Object,System.Object)">
            <summary>
            Deletes medal allocation to a group.
            </summary>
            <param name="groupID">
            ID of group owning medal.
            </param>
            <param name="medalID">
            ID of medal.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.group_medal_list(System.Object,System.Object)">
            <summary>
            Lists medal(s) assigned to the group
            </summary>
            <param name="groupID">
            ID of group of which to list medals.
            </param>
            <param name="medalID">
            ID of medal to list.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.group_medal_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Saves new or update existing group-medal allocation.
            </summary>
            <param name="groupID">
            ID of user group.
            </param>
            <param name="medalID">
            ID of medal.
            </param>
            <param name="message">
            Medal message, to override medal's default one. Can be null.
            </param>
            <param name="hide">
            Hide medal in user box.
            </param>
            <param name="onlyRibbon">
            Show only ribbon bar in user box.
            </param>
            <param name="sortOrder">
            Sort order in user box. Overrides medal's default sort order.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_medal_delete(System.Object,System.Object)">
            <summary>
            Deletes medal allocation to a user.
            </summary>
            <param name="userID">
            ID of user owning medal.
            </param>
            <param name="medalID">
            ID of medal.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_medal_list(System.Object,System.Object)">
            <summary>
            Lists medal(s) assigned to the group
            </summary>
            <param name="userID">
            ID of user who was given medal.
            </param>
            <param name="medalID">
            ID of medal to list.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_medal_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Saves new or update existing user-medal allocation.
            </summary>
            <param name="userID">
            ID of user.
            </param>
            <param name="medalID">
            ID of medal.
            </param>
            <param name="message">
            Medal message, to override medal's default one. Can be null.
            </param>
            <param name="hide">
            Hide medal in user box.
            </param>
            <param name="onlyRibbon">
            Show only ribbon bar in user box.
            </param>
            <param name="sortOrder">
            Sort order in user box. Overrides medal's default sort order.
            </param>
            <param name="dateAwarded">
            Date when medal was awarded to a user. Is ignored when existing user-medal allocation is edited.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_listmedals(System.Object)">
            <summary>
            Lists all medals held by user as they are to be shown in user box.
            </summary>
            <param name="userID">
            ID of user.
            </param>
            <returns>
            List of medals, ribbon bar only first.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.nntpforum_list(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The nntpforum_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="minutes">
            The minutes.
            </param>
            <param name="nntpForumID">
            The nntp forum id.
            </param>
            <param name="active">
            The active.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.nntpforum_update(System.Object,System.Object,System.Object)">
            <summary>
            The nntpforum_update.
            </summary>
            <param name="nntpForumID">
            The nntp forum id.
            </param>
            <param name="lastMessageNo">
            The last message no.
            </param>
            <param name="userID">
            The user id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.nntpforum_save(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The nntpforum_save.
            </summary>
            <param name="nntpForumID">
            The nntp forum id.
            </param>
            <param name="nntpServerID">
            The nntp server id.
            </param>
            <param name="groupName">
            The group name.
            </param>
            <param name="forumID">
            The forum id.
            </param>
            <param name="active">
            The active.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.nntpforum_delete(System.Object)">
            <summary>
            The nntpforum_delete.
            </summary>
            <param name="nntpForumID">
            The nntp forum id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.nntpserver_list(System.Object,System.Object)">
            <summary>
            The nntpserver_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="nntpServerID">
            The nntp server id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.nntpserver_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The nntpserver_save.
            </summary>
            <param name="nntpServerID">
            The nntp server id.
            </param>
            <param name="boardID">
            The board id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="address">
            The address.
            </param>
            <param name="port">
            The port.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="userPass">
            The user pass.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.nntpserver_delete(System.Object)">
            <summary>
            The nntpserver_delete.
            </summary>
            <param name="nntpServerID">
            The nntp server id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.nntptopic_list(System.Object)">
            <summary>
            The nntptopic_list.
            </summary>
            <param name="thread">
            The thread.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.nntptopic_savemessage(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The nntptopic_savemessage.
            </summary>
            <param name="nntpForumID">
            The nntp forum id.
            </param>
            <param name="topic">
            The topic.
            </param>
            <param name="body">
            The body.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="ip">
            The ip.
            </param>
            <param name="posted">
            The posted.
            </param>
            <param name="thread">
            The thread.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pmessage_list(System.Object,System.Object,System.Object)">
            <summary>
            Returns a list of private messages based on the arguments specified.
            If pMessageID != null, returns the PM of id pMessageId.
            If toUserID != null, returns the list of PMs sent to the user with the given ID.
            If fromUserID != null, returns the list of PMs sent by the user of the given ID.
            </summary>
            <param name="toUserID">
            </param>
            <param name="fromUserID">
            </param>
            <param name="userPMessageID">
            The user P Message ID.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pmessage_list(System.Object)">
            <summary>
            Returns a list of private messages based on the arguments specified.
            If pMessageID != null, returns the PM of id pMessageId.
            If toUserID != null, returns the list of PMs sent to the user with the given ID.
            If fromUserID != null, returns the list of PMs sent by the user of the given ID.
            </summary>
            <param name="userPMessageID">
            The user P Message ID.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pmessage_delete(System.Object,System.Boolean)">
            <summary>
            Deletes the private message from the database as per the given parameter.  If <paramref name="fromOutbox"/> is true,
            the message is only removed from the user's outbox.  Otherwise, it is completely delete from the database.
            </summary>
            <param name="userPMessageID">
            The user P Message ID.
            </param>
            <param name="fromOutbox">
            If true, removes the message from the outbox.  Otherwise deletes the message completely.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pmessage_delete(System.Object)">
            <summary>
            Deletes the private message from the database as per the given parameter.  If fromOutbox is true,
            the message is only deleted from the user's outbox.  Otherwise, it is completely delete from the database.
            </summary>
            <param name="userPMessageID">
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pmessage_archive(System.Object)">
            <summary>
            Archives the private message of the given id.  Archiving moves the message from the user's inbox to his message archive.
            </summary>
            <param name="userPMessageID">
            The user P Message ID.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pmessage_save(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The pmessage_save.
            </summary>
            <param name="fromUserID">
            The from user id.
            </param>
            <param name="toUserID">
            The to user id.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="body">
            The body.
            </param>
            <param name="Flags">
            The flags.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pmessage_markread(System.Object)">
            <summary>
            The pmessage_markread.
            </summary>
            <param name="userPMessageID">
            The user p message id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pmessage_info">
            <summary>
            The pmessage_info.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pmessage_prune(System.Object,System.Object)">
            <summary>
            The pmessage_prune.
            </summary>
            <param name="daysRead">
            The days read.
            </param>
            <param name="daysUnread">
            The days unread.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pollgroup_stats(System.Nullable{System.Int32})">
            <summary>
            The pollgroup_stats.
            </summary>
            <param name="pollGroupId">
            The poll group id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pollgroup_attach(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            The pollgroup_attach.
            </summary>
            <param name="pollGroupId">
            The poll group id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.poll_stats(System.Nullable{System.Int32})">
            <summary>
            The poll_stats.
            </summary>
            <param name="pollId">
            The poll id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.poll_save(System.Collections.Generic.List{YAF.Types.Objects.PollSaveList})">
            <summary>
            The method saves many questions and answers to them in a single transaction 
            </summary>
            <param name="pollList">List to hold all polls data</param>
            <returns>Last saved poll id.</returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.poll_update(System.Object,System.Object,System.Object,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Object,System.Object)">
            <summary>
            The poll_update.
            </summary>
            <param name="pollID">
            The poll id.
            </param>
            <param name="question">
            The question.
            </param>
            <param name="closes">
            The closes.
            </param>
            <param name="isBounded">
            The is bounded.
            </param>
            <param name="isClosedBounded">
            The is closed bounded.
            </param>
            <param name="allowMultipleChoices">
            The allow Multiple Choices option.
            </param>
            <param name="questionPath">
            The question file path.
            </param>
            <param name="questionMime">
            The question file mime type.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.poll_remove(System.Object,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            The poll_remove.
            </summary>
            <param name="pollGroupID">
            The poll group id. The parameter should always be present. 
            </param>
            <param name="pollID">
            The poll id. If null all polls in a group a deleted. 
            </param>
            <param name="boardId">
            The BoardID id. 
            </param>
            <param name="removeCompletely">
            The RemoveCompletely. If true and pollID is null , all polls in a group are deleted completely, 
            else only one poll is deleted completely. 
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.PollGroupList(System.Int32,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Gets a typed poll group list.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="forumId">
            The forum id.
            </param>
            <param name="boardId">
            The board id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.pollgroup_remove(System.Object,System.Object,System.Object,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            The poll_remove.
            </summary>
            <param name="pollGroupID">
            The poll group id. The parameter should always be present. 
            </param>
            <param name="topicId">
            The poll id. If null all polls in a group a deleted. 
            </param>
            <param name="boardId">
            The BoardID id. 
            </param>
            <param name="removeCompletely">
            The RemoveCompletely. If true and pollID is null , all polls in a group are deleted completely, 
            else only one poll is deleted completely. 
            </param>
            <param name="forumId"></param>
            <param name="removeEverywhere"></param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.choice_delete(System.Object)">
            <summary>
            The choice_delete.
            </summary>
            <param name="choiceID">
            The choice id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.choice_update(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The choice_update.
            </summary>
            <param name="choiceID">
            The choice id.
            </param>
            <param name="choice">
            The choice.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.choice_add(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The choice_add.
            </summary>
            <param name="pollID">
            The poll id.
            </param>
            <param name="choice">
            The choice.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.rank_list(System.Object,System.Object)">
            <summary>
            The rank_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="rankID">
            The rank id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.rank_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The rank_save.
            </summary>
            <param name="rankID">
            The rank id.
            </param>
            <param name="boardID">
            The board id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="isStart">
            The is start.
            </param>
            <param name="isLadder">
            The is ladder.
            </param>
            <param name="minPosts">
            The min posts.
            </param>
            <param name="rankImage">
            The rank image.
            </param>
            <param name="pmLimit">
            The pm limit.
            </param>
            <param name="style">
            The style.
            </param>
            <param name="sortOrder">
            The sort order.
            </param>
            <param name="usrSigChars">
            The usrSigChars defines number of allowed characters in user signature.
            </param>    
            <param name="usrSigBBCodes">
            The UsrSigBBCodes.defines comma separated bbcodes allowed for a rank, i.e in a user signature 
            </param>
            <param name="usrSigHTMLTags">
            The UsrSigHTMLTags defines comma separated tags allowed for a rank, i.e in a user signature 
            </param>
            <param name="usrAlbums">
            The UsrAlbums defines allowed number of albums.
            </param>
            <param name="usrAlbumImages">
            The UsrAlbumImages defines number of images allowed for an album.
            </param>
            <returns>
            The group_save.
            </returns>   
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.rank_delete(System.Object)">
            <summary>
            The rank_delete.
            </summary>
            <param name="rankID">
            The rank id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.smiley_list(System.Object,System.Object)">
            <summary>
            The smiley_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="smileyID">
            The smiley id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.SmileyList(System.Int32,System.Nullable{System.Int32})">
            <summary>
            The smiley_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="smileyID">
            The smiley id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.smiley_listunique(System.Object)">
            <summary>
            The smiley_listunique.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.smiley_delete(System.Object)">
            <summary>
            The smiley_delete.
            </summary>
            <param name="smileyID">
            The smiley id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.smiley_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The smiley_save.
            </summary>
            <param name="smileyID">
            The smiley id.
            </param>
            <param name="boardID">
            The board id.
            </param>
            <param name="code">
            The code.
            </param>
            <param name="icon">
            The icon.
            </param>
            <param name="emoticon">
            The emoticon.
            </param>
            <param name="sortOrder">
            The sort order.
            </param>
            <param name="replace">
            The replace.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.smiley_resort(System.Object,System.Object,System.Int32)">
            <summary>
            The smiley_resort.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="smileyID">
            The smiley id.
            </param>
            <param name="move">
            The move.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.bbcode_list(System.Object,System.Object)">
            <summary>
            The bbcode_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="bbcodeID">
            The bbcode id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.BBCodeList(System.Int32,System.Nullable{System.Int32})">
            <summary>
            The bbcode_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="bbcodeID">
            The bbcode id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.bbcode_delete(System.Object)">
            <summary>
            The bbcode_delete.
            </summary>
            <param name="bbcodeID">
            The bbcode id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.bbcode_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The bbcode_save.
            </summary>
            <param name="bbcodeID">
            The bbcode id.
            </param>
            <param name="boardID">
            The board id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="description">
            The description.
            </param>
            <param name="onclickjs">
            The onclickjs.
            </param>
            <param name="displayjs">
            The displayjs.
            </param>
            <param name="editjs">
            The editjs.
            </param>
            <param name="displaycss">
            The displaycss.
            </param>
            <param name="searchregex">
            The searchregex.
            </param>
            <param name="replaceregex">
            The replaceregex.
            </param>
            <param name="variables">
            The variables.
            </param>
            <param name="usemodule">
            The usemodule.
            </param>
            <param name="moduleclass">
            The moduleclass.
            </param>
            <param name="execorder">
            The execorder.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.registry_list(System.Object,System.Object)">
            <summary>
            Retrieves entries in the board settings registry
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="boardID">
            The board ID.
            </param>
            <returns>
            DataTable filled will registry entries
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.registry_list(System.Object)">
            <summary>
            Retrieves entries in the board settings registry
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            DataTable filled will registry entries
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.registry_list">
            <summary>
            Retrieves all the entries in the board settings registry
            </summary>
            <returns>
            DataTable filled will all registry entries
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.registry_save(System.Object,System.Object)">
            <summary>
            Saves a single registry entry pair to the database.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.registry_save(System.Object,System.Object,System.Object)">
            <summary>
            Saves a single registry entry pair to the database.
            </summary>
            <param name="name">
            The name.
            </param>
            <param name="value">
            The value.
            </param>
            <param name="boardID">
            The board ID.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.system_list">
            <summary>
            Not in use anymore. Only required for old database versions.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_prune(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The topic_prune.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="forumID">
            The forum id.
            </param>
            <param name="days">
            The days.
            </param>
            <param name="permDelete">
            The perm delete.
            </param>
            <returns>
            The topic_prune.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_list(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The topic_list.
            </summary>
            <param name="forumID">
            The forum id.
            </param>
            <param name="userId">
            The user id.
            </param>
            <param name="announcement">
            The announcement.
            </param>
            <param name="date">
            The date.
            </param>
            <param name="offset">
            The offset.
            </param>
            <param name="count">
            The count.
            </param>
            <param name="useStyledNicks">
            To return style for user nicks in topic_list.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_simplelist(System.Int32,System.Int32)">
            <summary>
            Lists topics very simply (for URL rewriting)
            </summary>
            <param name="StartID">
            </param>
            <param name="Limit">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_move(System.Object,System.Object,System.Object)">
            <summary>
            The topic_move.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <param name="forumID">
            The forum id.
            </param>
            <param name="showMoved">
            The show moved.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_announcements(System.Object,System.Object,System.Object)">
            <summary>
            The topic_announcements.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="numOfPostsToRetrieve">
            The num of posts to retrieve.
            </param>
            <param name="pageUserId">
            The page User Id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_latest(System.Object,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            The topic_latest.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="numOfPostsToRetrieve">
            The num of posts to retrieve.
            </param>
            <param name="pageUserId">
            The page UserId id. 
            </param>
            <param name="useStyledNicks">
            If true returns string for userID style.
            </param>
            <returns> 
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.rss_topic_latest(System.Object,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            The rss_topic_latest.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="numOfPostsToRetrieve">
            The num of posts to retrieve.
            </param>
            <param name="pageUserId">
            The page UserId id.
            </param>
            <param name="useStyledNicks">
            If true returns string for userID style.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_active(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The topic_active.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="pageUserId">
            The page user id.
            </param>
            <param name="since">
            The since.
            </param>
            <param name="categoryID">
            The category id.
            </param>
            <param name="useStyledNicks">
            Set to true to get color nicks for last user and topic starter.
            </param>    
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_deleteAttachments(System.Object)">
            <summary>
            The topic_delete attachments.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_delete(System.Object)">
            <summary>
            The topic_delete.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_delete(System.Object,System.Object)">
            <summary>
            The topic_delete.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <param name="eraseTopic">
            The erase topic.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_findprev(System.Object)">
            <summary>
            The topic_findprev.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_findnext(System.Object)">
            <summary>
            The topic_findnext.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_lock(System.Object,System.Object)">
            <summary>
            The topic_lock.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <param name="locked">
            The locked.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Int64@)">
            <summary>
            The topic_save.
            </summary>
            <param name="forumID">
            The forum id.
            </param>
            <param name="subject">
            The subject.
            </param>
            <param name="message">
            The message.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="priority">
            The priority.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="ip">
            The ip.
            </param>
            <param name="posted">
            The posted.
            </param>
            <param name="blogPostID">
            The blog post id.
            </param>
            <param name="flags">
            The flags.
            </param>
            <param name="messageID">
            The message id.
            </param>
            <returns>
            The topic_save.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_info(System.Object)">
            <summary>
            The topic_info.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_favorite_details(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The topic_ favorite_ details.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="pageUserId">
            The user id.
            </param>
            <param name="since">
            The since.
            </param>
            <param name="categoryID">
            The category id.
            </param>
            <param name="useStyledNicks">
            Set to true to get color nicks for last user and topic starter.
            </param>    
            <returns>
            a Data Table containing the current page user's favorite topics with details.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_favorite_list(System.Object)">
            <summary>
            The topic_favorite_list.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_favorite_remove(System.Object,System.Object)">
            <summary>
            The topic_favorite_remove.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="topicID">
            The topic id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.topic_favorite_add(System.Object,System.Object)">
            <summary>
            The topic_favorite_add.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="topicID">
            The topic id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.TopicFavoriteCount(System.Int32)">
            <summary>
            Get the favorite count for a topic...
            </summary>
            <param name="topicId">
            The topic Id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.replace_words_list(System.Object,System.Object)">
            <summary>
            Gets a list of replace words
            </summary>
            <param name="boardId">
            The board Id.
            </param>
            <param name="id">
            The id.
            </param>
            <returns>
            DataTable with replace words
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.replace_words_save(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Saves changs to a words
            </summary>
            <param name="boardId">
            The board Id.
            </param>
            <param name="id">
            ID of bad/good word
            </param>
            <param name="badword">
            bad word
            </param>
            <param name="goodword">
            good word
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.replace_words_delete(System.Object)">
            <summary>
            Deletes a bad/good word
            </summary>
            <param name="ID">
            ID of bad/good word to delete
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_addignoreduser(System.Object,System.Object)">
            <summary>
            The user_addignoreduser.
            </summary>
            <param name="userId">
            The user id.
            </param>
            <param name="ignoredUserId">
            The ignored user id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_removeignoreduser(System.Object,System.Object)">
            <summary>
            The user_removeignoreduser.
            </summary>
            <param name="userId">
            The user id.
            </param>
            <param name="ignoredUserId">
            The ignored user id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_isuserignored(System.Object,System.Object)">
            <summary>
            The user_isuserignored.
            </summary>
            <param name="userId">
            The user id.
            </param>
            <param name="ignoredUserId">
            The ignored user id.
            </param>
            <returns>
            The user_isuserignored.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_ignoredlist(System.Object)">
            <summary>
            The user_ignoredlist.
            </summary>
            <param name="userId">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_lazydata(System.Object,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            To return a rather rarely updated active user data
            </summary>
            <param name="userID">The UserID. It is always should have a positive > 0 value.</param>
            <param name="styledNicks">If styles should be returned.</param>
            <returns>A DataRow, it should never return a null value.</returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_list(System.Object,System.Object,System.Object)">
            <summary>
            The user_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="approved">
            The approved.
            </param>    
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_list(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The user_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="approved">
            The approved.
            </param>
            <param name="useStyledNicks">
            Return style info.
            </param> 
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_list(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The user_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="approved">
            The approved.
            </param>
            <param name="groupID">
            The group id.
            </param>
            <param name="rankID">
            The rank id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_list(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The user_list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="approved">
            The approved.
            </param>
            <param name="groupID">
            The group id.
            </param>
            <param name="rankID">
            The rank id.
            </param>
            <param name="useStyledNicks">
            Return style info.
            </param> 
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_listmembers(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The user_list20members.
            </summary>
            <param name="boardId">
            The board id.
            </param>
            <param name="userId">
            The user id.
            </param>
            <param name="approved">
            The approved.
            </param>
            <param name="groupId">
            The group id.
            </param>
            <param name="rankId">
            The rank id.
            </param>
            <param name="useStyledNicks">
            Return style info.
            </param>
            <param name="lastUserId">
            The last user Id.
            </param>
            <param name="literals">
            The literals.
            </param>
            <param name="exclude">
            The exclude.
            </param>
            <param name="beginsWith">
            The begins with.
            </param>
            <param name="pageIndex">
            The page index.
            </param>
            <param name="pageSize">
            The page size.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.UserList(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Get the user list as a typed list.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="approved">
            The approved.
            </param>
            <param name="groupID">
            The group id.
            </param>
            <param name="rankID">
            The rank id.
            </param>
            <param name="useStyledNicks">
            The use styled nicks.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_simplelist(System.Int32,System.Int32)">
            <summary>
            For URL Rewriting
            </summary>
            <param name="StartID">
            </param>
            <param name="Limit">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_delete(System.Object)">
            <summary>
            The user_delete.
            </summary>
            <param name="userID">
            The user id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_setrole(System.Int32,System.Object,System.Object)">
            <summary>
            The user_setrole.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="providerUserKey">
            The provider user key.
            </param>
            <param name="role">
            The role.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_setinfo(System.Int32,System.Web.Security.MembershipUser)">
            <summary>
            The user_setinfo.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="user">
            The user.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_migrate(System.Object,System.Object,System.Object)">
            <summary>
            The user_migrate.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="providerUserKey">
            The provider user key.
            </param>
            <param name="updateProvider">
            The update provider.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_deleteold(System.Object,System.Object)">
            <summary>
            The user_deleteold.
            </summary>
            <param name="boardID">
            The board id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_approve(System.Object)">
            <summary>
            The user_approve.
            </summary>
            <param name="userID">
            The user id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_approveall(System.Object)">
            <summary>
            The user_approveall.
            </summary>
            <param name="boardID">
            The board id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_suspend(System.Object,System.Object)">
            <summary>
            The user_suspend.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="suspend">
            The suspend.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_getsignaturedata(System.Object,System.Object)">
            <summary>
            Returns data about allowed signature tags and character limits
            </summary>
            <param name="userID">The userID</param>
            <param name="boardID">The boardID</param>
            <returns>Data Table</returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_getalbumsdata(System.Object,System.Object)">
            <summary>
            Returns data about albums: allowed number of images and albums
            </summary>
            <param name="userID">The userID</param>
            <param name="boardID">The boardID</param>  
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_changepassword(System.Object,System.Object,System.Object)">
            <summary>
            The user_changepassword.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="oldPassword">
            The old password.
            </param>
            <param name="newPassword">
            The new password.
            </param>
            <returns>
            The user_changepassword.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_pmcount(System.Object)">
            <summary>
            The user_pmcount.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The user_save.
            </summary>
            <param name="displayName"></param>
            <param name="userID">
            The user id.
            </param>
            <param name="boardID">
            The board id.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="email">
            The email.
            </param>
            <param name="timeZone">
            The time zone.
            </param>
            <param name="languageFile">
            The language file.
            </param>
            <param name="culture">
            the user culture
            </param>
            <param name="themeFile">
            The theme file.
            </param>
            <param name="useMobileTheme">
            The override Mobile Theme.
            </param>
            <param name="approved">
            The approved.
            </param>
            <param name="pmNotification">
            The pm notification.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_savenotification(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Saves the notification type for a user
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="notificationType">
            The notification type.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_adminsave(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The user_adminsave.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="email">
            The email.
            </param>
            <param name="flags">
            The flags.
            </param>
            <param name="rankID">
            The rank id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_emails(System.Object,System.Object)">
            <summary>
            The user_emails.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="groupID">
            The group id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_accessmasks(System.Object,System.Object)">
            <summary>
            The user_accessmasks.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.userforumaccess_sort_list(System.Data.DataTable,System.Int32,System.Int32,System.Int32)">
            <summary>
            The userforumaccess_sort_list.
            </summary>
            <param name="listSource">
            The list source.
            </param>
            <param name="parentID">
            The parent id.
            </param>
            <param name="categoryID">
            The category id.
            </param>
            <param name="startingIndent">
            The starting indent.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.userforumaccess_sort_list_recursive(System.Data.DataTable,System.Data.DataTable,System.Int32,System.Int32,System.Int32)">
            <summary>
            The userforumaccess_sort_list_recursive.
            </summary>
            <param name="listSource">
            The list source.
            </param>
            <param name="listDestination">
            The list destination.
            </param>
            <param name="parentID">
            The parent id.
            </param>
            <param name="categoryID">
            The category id.
            </param>
            <param name="currentIndent">
            The current indent.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_recoverpassword(System.Object,System.Object,System.Object)">
            <summary>
            The user_recoverpassword.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="email">
            The email.
            </param>
            <returns>
            The user_recoverpassword.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_savepassword(System.Object,System.Object)">
            <summary>
            The user_savepassword.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="password">
            The password.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_login(System.Object,System.Object,System.Object)">
            <summary>
            The user_login.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="name">
            The name.
            </param>
            <param name="password">
            The password.
            </param>
            <returns>
            The user_login.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_avatarimage(System.Object)">
            <summary>
            The user_avatarimage.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_get(System.Int32,System.Object)">
            <summary>
            The user_get.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="providerUserKey">
            The provider user key.
            </param>
            <returns>
            The user_get.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.UserFind(System.Int32,System.Boolean,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            The UserFind.
            </summary>
            <param name="boardID">
              The board id.
            </param>
            <param name="filter">
              The filter.
            </param>
            <param name="userName">
              The user name.
            </param>
            <param name="email">
              The email.
            </param>
            <param name="displayName"></param>
            <param name="notificationType"></param>
            <param name="dailyDigest"></param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_getsignature(System.Object)">
            <summary>
            The user_getsignature.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            The user_getsignature.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_savesignature(System.Object,System.Object)">
            <summary>
            The user_savesignature.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="signature">
            The signature.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_saveavatar(System.Object,System.Object,System.IO.Stream,System.Object)">
            <summary>
            The user_saveavatar.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="avatar">
            The avatar.
            </param>
            <param name="stream">
            The stream.
            </param>
            <param name="avatarImageType">
            The avatar image type.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_deleteavatar(System.Object)">
            <summary>
            The user_deleteavatar.
            </summary>
            <param name="userID">
            The user id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_register(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Boolean)">
            <summary>
            The user_register.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="password">
            The password.
            </param>
            <param name="hash">
            The hash.
            </param>
            <param name="email">
            The email.
            </param>
            <param name="location">
            The location.
            </param>
            <param name="homePage">
            The home page.
            </param>
            <param name="timeZone">
            The time zone.
            </param>
            <param name="approved">
            The approved.
            </param>
            <returns>
            The user_register.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_aspnet(System.Int32,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            The user_aspnet.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="email">
            The email.
            </param>
            <param name="providerUserKey">
            The provider user key.
            </param>
            <param name="isApproved">
            The is approved.
            </param>
            <returns>
            The user_aspnet.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_guest(System.Object)">
            <summary>
            The user_guest.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <returns>
            The user_guest.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_activity_rank(System.Object,System.Object,System.Object)">
            <summary>
            The user_activity_rank.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="startDate">
            The start date.
            </param>
            <param name="displayNumber">
            The display number.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_nntp(System.Object,System.Object,System.Object,System.Nullable{System.Int32})">
            <summary>
            The user_nntp.
            </summary>
            <param name="boardID">
            The board id.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="email">
            The email.
            </param>
            <returns>
            The user_nntp.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_addpoints(System.Object,System.Object)">
            <summary>
            The user_addpoints.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="points">
            The points.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_removepointsByTopicID(System.Object,System.Object)">
            <summary>
            The user_removepoints by topic id.
            </summary>
            <param name="topicID">
            The topic id.
            </param>
            <param name="points">
            The points.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_removepoints(System.Object,System.Object)">
            <summary>
            The user_removepoints.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="points">
            The points.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_setpoints(System.Object,System.Object)">
            <summary>
            The user_setpoints.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="points">
            The points.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_getpoints(System.Object)">
            <summary>
            The user_getpoints.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            The user_getpoints.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_getthanks_from(System.Object,System.Object)">
            <summary>
            The user_getthanks_from.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            The user_getthanks_from.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_getthanks_to(System.Object,System.Object)">
            <summary>
            The user_getthanks_to.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.user_viewallthanks(System.Object,System.Object)">
            <summary>
            Returns the posts which is thanked by the user + the posts which are posted by the user and 
            are thanked by other users.
            </summary>
            <param name="UserID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.userforum_list(System.Object,System.Object)">
            <summary>
            The userforum_list.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="forumID">
            The forum id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.userforum_delete(System.Object,System.Object)">
            <summary>
            The userforum_delete.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="forumID">
            The forum id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.userforum_save(System.Object,System.Object,System.Object)">
            <summary>
            The userforum_save.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="forumID">
            The forum id.
            </param>
            <param name="accessMaskID">
            The access mask id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.usergroup_list(System.Object)">
            <summary>
            The usergroup_list.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.usergroup_save(System.Object,System.Object,System.Object)">
            <summary>
            The usergroup_save.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="groupID">
            The group id.
            </param>
            <param name="member">
            The member.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.watchforum_add(System.Object,System.Object)">
            <summary>
            The watchforum_add.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="forumID">
            The forum id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.watchforum_list(System.Object)">
            <summary>
            The watchforum_list.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.watchforum_check(System.Object,System.Object)">
            <summary>
            The watchforum_check.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="forumID">
            The forum id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.watchforum_delete(System.Object)">
            <summary>
            The watchforum_delete.
            </summary>
            <param name="watchForumID">
            The watch forum id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.watchtopic_list(System.Object)">
            <summary>
            The watchtopic_list.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.watchtopic_check(System.Object,System.Object)">
            <summary>
            The watchtopic_check.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="topicID">
            The topic id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.watchtopic_delete(System.Object)">
            <summary>
            The watchtopic_delete.
            </summary>
            <param name="watchTopicID">
            The watch topic id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.watchtopic_add(System.Object,System.Object)">
            <summary>
            The watchtopic_add.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="topicID">
            The topic id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.rsstopic_list(System.Int32)">
            <summary>
            The rsstopic_list.
            </summary>
            <param name="forumId">
            The forum id.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.db_getstats_warning(YAF.Classes.Data.MsSqlDbConnectionManager)">
            <summary>
            The db_getstats_warning.
            </summary>
            <param name="connectionManager">
            The conn man.
            </param>
            <returns>
            The db_getstats_warning.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.db_getstats(YAF.Classes.Data.MsSqlDbConnectionManager)">
            <summary>
            The db_getstats.
            </summary>
            <param name="connectionManager">
            The conn man.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.db_reindex_warning(YAF.Classes.Data.MsSqlDbConnectionManager)">
            <summary>
            The db_reindex_warning.
            </summary>
            <param name="connectionManager">
            The conn man.
            </param>
            <returns>
            The db_reindex_warning.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.db_reindex(YAF.Classes.Data.MsSqlDbConnectionManager)">
            <summary>
            The db_reindex.
            </summary>
            <param name="connectionManager">
            The conn man.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.db_runsql(System.String,YAF.Classes.Data.MsSqlDbConnectionManager,System.Boolean)">
            <summary>
            The db_runsql.
            </summary>
            <param name="sql">
            The sql.
            </param>
            <param name="connectionManager">
            The conn man.
            </param>
            <returns>
            The db_runsql.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.InnerRunSqlExecuteReader(System.Data.SqlClient.SqlCommand,System.Boolean)">
            <summary>
            Called from db_runsql -- just runs a sql command according to specificiations.
            </summary>
            <param name="command"></param>
            <param name="useTransaction"></param>
            <returns></returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forumpage_initdb(System.String@,System.Boolean)">
            <summary>
            The forumpage_initdb.
            </summary>
            <param name="errorStr">
            The error str.
            </param>
            <param name="debugging">
            The debugging.
            </param>
            <returns>
            The forumpage_initdb.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.forumpage_validateversion(System.Int32)">
            <summary>
            The forumpage_validateversion.
            </summary>
            <param name="appVersion">
            The app version.
            </param>
            <returns>
            The forumpage_validateversion.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.system_deleteinstallobjects">
            <summary>
            The system_deleteinstallobjects.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.system_initialize_executescripts(System.String,System.String,System.Boolean)">
            <summary>
            The system_initialize_executescripts.
            </summary>
            <param name="script">
            The script.
            </param>
            <param name="scriptFile">
            The script file.
            </param>
            <param name="useTransactions">
            The use transactions.
            </param>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.system_initialize_fixaccess(System.Boolean)">
            <summary>
            The system_initialize_fixaccess.
            </summary>
            <param name="grant">
            The grant.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.system_initialize(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.String)">
            <summary>
            The system_initialize.
            </summary>
            <param name="forumName">
            The forum name.
            </param>
            <param name="timeZone">
            The time zone.
            </param>
            <param name="forumEmail">
            The forum email.
            </param>
            <param name="smtpServer">
            The smtp server.
            </param>
            <param name="userName">
            The user name.
            </param>
            <param name="userEmail">
            The user email.
            </param>
            <param name="providerUserKey">
            The provider user key.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.system_updateversion(System.Int32,System.String)">
            <summary>
            The system_updateversion.
            </summary>
            <param name="version">
            The version.
            </param>
            <param name="versionname">
            The versionname.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.group_rank_style(System.Object)">
            <summary>
            Returns info about all Groups and Rank styles. 
            Used in GroupRankStyles cache.
            Usage: LegendID = 1 - Select Groups, LegendID = 2 - select Ranks by Name 
            </summary>
            <param name="boardID">
            The board ID.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.shoutbox_getmessages(System.Int32,System.Int32,System.Object)">
            <summary>
            The shoutbox_getmessages.
            </summary>
            <param name="boardId"></param>
            <param name="numberOfMessages">
            The number of messages.
            </param>
            <param name="useStyledNicks">
            Use style for user nicks in ShoutBox.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.shoutbox_savemessage(System.Int32,System.String,System.String,System.Int32,System.Object)">
            <summary>
            The shoutbox_savemessage.
            </summary>
            <param name="message">
            The message.
            </param>
            <param name="userName">
            The usern name.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="ip">
            The ip.
            </param>
            <returns>
            The shoutbox_savemessage.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.shoutbox_clearmessages(System.Int32)">
            <summary>
            The shoutbox_clearmessages.
            </summary>
            <returns>
            The shoutbox_clearmessages.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.db_shrink_warning(YAF.Classes.Data.MsSqlDbConnectionManager)">
            <summary>
            The db_shrink_warning.
            </summary>
            <param name="DBName">
            The db name.
            </param>
            <returns>
            The db_shrink_warning.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.db_shrink(YAF.Classes.Data.MsSqlDbConnectionManager)">
            <summary>
            The db_shrink.
            </summary>
            <param name="DBName">
            The db name.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.db_recovery_mode_warning(YAF.Classes.Data.MsSqlDbConnectionManager)">
            <summary>
            The db_recovery_mode_warning.
            </summary>
            <param name="DBName">
            The db name.
            </param>
            <returns>
            The db_recovery_mode_warning.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.db_recovery_mode(YAF.Classes.Data.MsSqlDbConnectionManager,System.String)">
            <summary>
            The db_recovery_mode.
            </summary>
            <param name="DBName">
            The db name.
            </param>
            <param name="dbRecoveryMode">
            The db recovery mode.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.buddy_addrequest(System.Object,System.Object)">
            <summary>
            Adds a buddy request. (Should be approved later by "ToUserID")
            </summary>
            <param name="FromUserID">
            The from user id.
            </param>
            <param name="ToUserID">
            The to user id.
            </param>
            <returns>
            The name of the second user + Whether this request is approved or not.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.buddy_approveRequest(System.Object,System.Object,System.Object)">
            <summary>
            Approves a buddy request.
            </summary>
            <param name="FromUserID">
            The from user id.
            </param>
            <param name="ToUserID">
            The to user id.
            </param>
            <param name="Mutual">
            Should the requesting user (ToUserID) be added to FromUserID's buddy list too?
            </param>
            <returns>
            the name of the second user.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.buddy_denyRequest(System.Object,System.Object)">
            <summary>
            Denies a buddy request.
            </summary>
            <param name="FromUserID">
            The from user id.
            </param>
            <param name="ToUserID">
            The to user id.
            </param>
            <returns>
            the name of the second user.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.buddy_remove(System.Object,System.Object)">
            <summary>
            Removes the "ToUserID" from "FromUserID"'s buddy list.
            </summary>
            <param name="FromUserID">
            The from user id.
            </param>
            <param name="ToUserID">
            The to user id.
            </param>
            <returns>
            The name of the second user.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.buddy_list(System.Object)">
            <summary>
            Gets all the buddies of a certain user.
            </summary>
            <param name="FromUserID">
            The from user id.
            </param>
            <returns>
            a Datatable containing the buddy list.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.album_save(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts/Saves a user album.
            </summary>
            <param name="albumID">
            AlbumID of an existing Album.
            </param>
            <param name="userID">
            UserID of the user who wants to create a new album.
            </param>
            <param name="title">
            New Album title.
            </param>
            <param name="coverImageID">
            New Cover image id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.album_list(System.Object,System.Object)">
            <summary>
            Lists all the albums associated with the UserID or gets all the
            specifications for the specified album id.
            </summary>
            <param name="userID">
            The user id.
            </param>
            <param name="albumID">
            the album id.
            </param>
            <returns>
            a Datatable containing the albums.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.album_delete(System.Object)">
            <summary>
            Deletes an album and all Images in that album.
            </summary>
            <param name="albumID">
            the album id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.album_gettitle(System.Object)">
            <summary>
            Deletes an album and all Images in that album.
            </summary>
            <param name="albumID">
            the album id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.album_getstats(System.Object,System.Object)">
            <summary>
            The album_ get stats method.
            </summary>
            <param name="userID">
            the User ID.
            </param>
            <param name="albumID">
            the album id.
            </param>
            <returns>
            The number of albums + number of current uploaded files by the user if UserID is not null,
            Otherwise, it gets the number of images in the album with AlbumID.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.album_image_save(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Inserts/Saves a user image.
            </summary>
            <param name="imageID">
            the image id of an existing image.
            </param>
            <param name="albumID">
            the album id for adding a new image.
            </param>
            <param name="caption">
            the caption of the existing/new image.
            </param>
            <param name="fileName">
            the file name of the new image.
            </param>
            <param name="bytes">
            the size of the new image.
            </param>
            <param name="contentType">
            the content type.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.album_image_list(System.Object,System.Object)">
            <summary>
            Lists all the images associated with the AlbumID or
            the image with the ImageID.
            </summary>
            <param name="albumID">
            the Album id.
            </param>
            <param name="imageID">
            The image id.
            </param>
            <returns>
            a Datatable containing the image(s).
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.album_image_delete(System.Object)">
            <summary>
            Deletes the image which has the specified image id.
            </summary>
            <param name="imageID">
            the image id.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.LegacyDb.album_image_download(System.Object)">
            <summary>
            Increments the image's download times.
            </summary>
            <param name="imageID">
            the image id.
            </param>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.ProviderAssemblyName">
            <summary>
            Gets ProviderAssemblyName.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.PasswordPlaceholderVisible">
            <summary>
            Gets a value indicating whether PasswordPlaceholderVisible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter1_Name">
            <summary>
            Gets Parameter1_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter1_Value">
            <summary>
            Gets Parameter1_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter1_Visible">
            <summary>
            Gets a value indicating whether Parameter1_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter2_Name">
            <summary>
            Gets Parameter2_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter2_Value">
            <summary>
            Gets Parameter2_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter2_Visible">
            <summary>
            Gets a value indicating whether Parameter2_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter3_Name">
            <summary>
            Gets Parameter3_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter3_Value">
            <summary>
            Gets Parameter3_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter3_Visible">
            <summary>
            Gets a value indicating whether Parameter3_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter4_Name">
            <summary>
            Gets Parameter4_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter4_Value">
            <summary>
            Gets Parameter4_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter4_Visible">
            <summary>
            Gets a value indicating whether Parameter4_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter5_Name">
            <summary>
            Gets Parameter5_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter5_Value">
            <summary>
            Gets Parameter5_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter5_Visible">
            <summary>
            Gets a value indicating whether Parameter5_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter6_Name">
            <summary>
            Gets Parameter6_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter6_Value">
            <summary>
            Gets Parameter6_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter6_Visible">
            <summary>
            Gets a value indicating whether Parameter6_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter7_Name">
            <summary>
            Gets Parameter7_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter7_Value">
            <summary>
            Gets Parameter7_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter7_Visible">
            <summary>
            Gets a value indicating whether Parameter7_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter8_Name">
            <summary>
            Gets Parameter8_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter8_Value">
            <summary>
            Gets Parameter8_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter8_Visible">
            <summary>
            Gets a value indicating whether Parameter8_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter9_Name">
            <summary>
            Gets Parameter9_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter9_Value">
            <summary>
            Gets Parameter9_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter9_Visible">
            <summary>
            Gets a value indicating whether Parameter9_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter10_Name">
            <summary>
            Gets Parameter10_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter10_Value">
            <summary>
            Gets Parameter10_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter10_Visible">
            <summary>
            Gets a value indicating whether Parameter10_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter11_Name">
            <summary>
            Gets Parameter11_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter11_Value">
            <summary>
            Gets a value indicating whether Parameter11_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter11_Visible">
            <summary>
            Gets a value indicating whether Parameter11_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter12_Name">
            <summary>
            Gets Parameter12_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter12_Value">
            <summary>
            Gets a value indicating whether Parameter12_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter12_Visible">
            <summary>
            Gets a value indicating whether Parameter12_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter13_Name">
            <summary>
            Gets Parameter13_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter13_Value">
            <summary>
            Gets a value indicating whether Parameter13_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter13_Visible">
            <summary>
            Gets a value indicating whether Parameter13_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter14_Name">
            <summary>
            Gets Parameter14_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter14_Value">
            <summary>
            Gets a value indicating whether Parameter14_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter14_Visible">
            <summary>
            Gets a value indicating whether Parameter14_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter15_Name">
            <summary>
            Gets Parameter15_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter15_Value">
            <summary>
            Gets a value indicating whether Parameter15_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter15_Visible">
            <summary>
            Gets a value indicating whether Parameter15_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter16_Name">
            <summary>
            Gets Parameter16_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter16_Value">
            <summary>
            Gets a value indicating whether Parameter16_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter16_Visible">
            <summary>
            Gets a value indicating whether Parameter16_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter17_Name">
            <summary>
            Gets Parameter17_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter17_Value">
            <summary>
            Gets a value indicating whether Parameter17_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter17_Visible">
            <summary>
            Gets a value indicating whether Parameter17_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter18_Name">
            <summary>
            Gets Parameter18_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter18_Value">
            <summary>
            Gets a value indicating whether Parameter18_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter18_Visible">
            <summary>
            Gets a value indicating whether Parameter18_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter19_Name">
            <summary>
            Gets Parameter19_Name.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter19_Value">
            <summary>
            Gets a value indicating whether Parameter19_Value.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.Parameter19_Visible">
            <summary>
            Gets a value indicating whether Parameter19_Visible.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.DBSize">
            <summary>
            Gets the database size
            </summary>
            <returns>intager value for database size</returns>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.IsForumInstalled">
            <summary>
            Gets a value indicating whether IsForumInstalled.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.DBVersion">
            <summary>
            Gets DBVersion.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.FullTextSupported">
            <summary>
            Gets or sets a value indicating whether FullTextSupported.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.FullTextScript">
            <summary>
            Gets or sets FullTextScript.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.ScriptList">
            <summary>
            Gets ScriptList.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.PanelGetStats">
            <summary>
            Gets a value indicating whether PanelGetStats.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.PanelRecoveryMode">
            <summary>
            Gets a value indicating whether PanelRecoveryMode.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.PanelReindex">
            <summary>
            Gets a value indicating whether PanelReindex.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.LegacyDb.PanelShrink">
            <summary>
            Gets a value indicating whether PanelShrink.
            </summary>
        </member>
        <member name="T:YAF.Classes.Data.Import.DataImport">
            <summary>
            The data import.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.Import.DataImport.BBCodeExtensionImport(System.Int32,System.IO.Stream)">
            <summary>
            The bb code extension import.
            </summary>
            <param name="boardId">
            The board id.
            </param>
            <param name="imputStream">
            The imput stream.
            </param>
            <returns>
            The bb code extension import.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:YAF.Classes.Data.Import.DataImport.FileExtensionImport(System.Int32,System.IO.Stream)">
            <summary>
            The file extension import.
            </summary>
            <param name="boardId">
            The board id.
            </param>
            <param name="imputStream">
            The imput stream.
            </param>
            <returns>
            The file extension import.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="T:YAF.Types.Objects.TypedUserFind">
            <summary>
            The typed user find.
            </summary>
        </member>
        <member name="M:YAF.Types.Objects.TypedUserFind.#ctor(System.Data.DataRow)">
            <summary>
            Initializes a new instance of the <see cref="T:YAF.Types.Objects.TypedUserFind"/> class.
            </summary>
            <param name="row">
            The row.
            </param>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.AutoWatchTopics">
            <summary>
            Gets or sets AutoWatchTopics.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.Avatar">
            <summary>
            Gets or sets Avatar.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.AvatarImage">
            <summary>
            Gets or sets AvatarImage.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.AvatarImageType">
            <summary>
            Gets or sets AvatarImageType.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.BoardID">
            <summary>
            Gets or sets BoardID.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.Culture">
            <summary>
            Gets or sets Culture.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.DailyDigest">
            <summary>
            Gets or sets DailyDigest.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.DisplayName">
            <summary>
            Gets or sets DisplayName.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.Email">
            <summary>
            Gets or sets Email.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.Flags">
            <summary>
            Gets or sets Flags.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.IP">
            <summary>
            Gets or sets IP.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.IsActiveExcluded">
            <summary>
            Gets or sets IsActiveExcluded.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.IsApproved">
            <summary>
            Gets or sets IsApproved.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.IsGuest">
            <summary>
            Gets or sets IsGuest.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.Joined">
            <summary>
            Gets or sets Joined.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.LanguageFile">
            <summary>
            Gets or sets LanguageFile.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.LastVisit">
            <summary>
            Gets or sets LastVisit.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.Name">
            <summary>
            Gets or sets Name.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.NotificationType">
            <summary>
            Gets or sets NotificationType.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.NumPosts">
            <summary>
            Gets or sets NumPosts.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.UseMobileTheme">
            <summary>
            Gets or sets UseMobileTheme.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.PMNotification">
            <summary>
            Gets or sets PMNotification.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.Password">
            <summary>
            Gets or sets Password.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.Points">
            <summary>
            Gets or sets Points.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.ProviderUserKey">
            <summary>
            Gets or sets ProviderUserKey.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.RankID">
            <summary>
            Gets or sets RankID.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.Signature">
            <summary>
            Gets or sets Signature.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.Suspended">
            <summary>
            Gets or sets Suspended.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.ThemeFile">
            <summary>
            Gets or sets ThemeFile.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.TimeZone">
            <summary>
            Gets or sets TimeZone.
            </summary>
        </member>
        <member name="P:YAF.Types.Objects.TypedUserFind.UserID">
            <summary>
            Gets or sets UserID.
            </summary>
        </member>
        <member name="T:YAF.Classes.Data.MsSqlDbAccess">
            <summary>
            The yaf db access for SQL Server.
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.MsSqlDbAccess._resultFilterList">
            <summary>
              Result filter list
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.MsSqlDbAccess._isolationLevel">
            <summary>
              The _isolation level.
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.MsSqlDbAccess._connectionManagerType">
            <summary>
              The _connection manager type.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.CleanForSQLServerVersion(System.String,System.UInt16)">
            <summary>
            A method to handle custom scripts execution tags
            </summary>
            <param name="scriptChunk">
            Input string
            </param>
            <param name="versionSQL">
            SQL server version as ushort
            </param>
            <returns>
            Returns an empty string if condition was not and cleanedfrom tags string if was.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetCommand(System.String,System.Boolean)">
            <summary>
            Creates new SqlCommand based on command text applying all qualifiers to the name.
            </summary>
            <param name="commandText">
            Command text to qualify.
            </param>
            <param name="isText">
            Determines whether command text is text or stored procedure.
            </param>
            <returns>
            New SqlCommand
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetCommand(System.String,System.Boolean,System.Data.SqlClient.SqlConnection)">
            <summary>
            Creates new SqlCommand based on command text applying all qualifiers to the name.
            </summary>
            <param name="commandText">
            Command text to qualify.
            </param>
            <param name="isText">
            Determines whether command text is text or stored procedure.
            </param>
            <param name="connection">
            Connection to use with command.
            </param>
            <returns>
            New SqlCommand
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetCommand(System.String)">
            <summary>
            Creates new SqlCommand calling stored procedure applying all qualifiers to the name.
            </summary>
            <param name="storedProcedure">
            Base of stored procedure name.
            </param>
            <returns>
            New SqlCommand
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetCommand(System.String,System.Data.SqlClient.SqlConnection)">
            <summary>
            Creates new SqlCommand calling stored procedure applying all qualifiers to the name.
            </summary>
            <param name="storedProcedure">
            Base of stored procedure name.
            </param>
            <param name="connection">
            Connection to use with command.
            </param>
            <returns>
            New SqlCommand
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetCommandTextReplaced(System.String)">
            <summary>
            Gets command text replaced with {databaseOwner} and {objectQualifier}.
            </summary>
            <param name="commandText">
            Test to transform.
            </param>
            <returns>
            The get command text replaced.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetConnectionString(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Creates a Connection String from the parameters.
            </summary>
            <param name="parm1">
            </param>
            <param name="parm2">
            </param>
            <param name="parm3">
            </param>
            <param name="parm4">
            </param>
            <param name="parm5">
            </param>
            <param name="parm6">
            </param>
            <param name="parm7">
            </param>
            <param name="parm8">
            </param>
            <param name="parm9">
            </param>
            <param name="parm10">
            </param>
            <param name="parm11">
            </param>
            <param name="parm12">
            </param>
            <param name="parm13">
            </param>
            <param name="parm14">
            </param>
            <param name="parm15">
            </param>
            <param name="parm16">
            </param>
            <param name="parm17">
            </param>
            <param name="parm18">
            </param>
            <param name="parm19">
            </param>
            <param name="userID">
            </param>
            <param name="userPassword">
            </param>
            <returns>
            The get connection string.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetObjectName(System.String)">
            <summary>
            Gets qualified object name
            </summary>
            <param name="name">
            Base name of an object
            </param>
            <returns>
            Returns qualified object name of format {databaseOwner}.{objectQualifier}name
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.TestConnection(System.String@)">
            <summary>
            Test the DB Connection.
            </summary>
            <param name="exceptionMessage">
            outbound ExceptionMessage
            </param>
            <returns>
            true if successfully connected
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.SetConnectionManagerAdapter``1">
            <summary>
            Change the Connection Manager used in all DB operations.
            </summary>
            <typeparam name="TManager">
            </typeparam>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.ExecuteNonQuery(System.Data.IDbCommand,System.Boolean)">
            <summary>
            The execute non query.
            </summary>
            <param name="cmd">
            The cmd.
            </param>
            <param name="transaction">
            The transaction.
            </param>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.ExecuteScalar(System.Data.IDbCommand,System.Boolean)">
            <summary>
            The execute scalar.
            </summary>
            <param name="cmd">
            The cmd.
            </param>
            <param name="transaction">
            The transaction.
            </param>
            <returns>
            The execute scalar.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetConnectionManager">
            <summary>
            The get connection manager.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetData(System.Data.IDbCommand,System.Boolean)">
            <summary>
            The get data.
            </summary>
            <param name="cmd">
            The cmd.
            </param>
            <param name="transaction">
            The transaction.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetData(System.String,System.Boolean)">
            <summary>
            The get data.
            </summary>
            <param name="commandText">
            The command text.
            </param>
            <param name="transaction">
            The transaction.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetDataset(System.Data.IDbCommand,System.Boolean)">
            <summary>
            The get dataset.
            </summary>
            <param name="cmd">
            The cmd.
            </param>
            <param name="transaction">
            The transaction.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.GetDatasetBasic(System.Data.IDbCommand,System.Boolean)">
            <summary>
            Used internally to get data for all the other functions
            </summary>
            <param name="cmd">
            </param>
            <param name="transaction">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbAccess.ProcessUsingResultFilters(System.Data.DataTable,System.String)">
            <summary>
            Process a <see cref="T:System.Data.DataTable"/> using Result Filters.
            </summary>
            <param name="dataTable">
            data table to process
            </param>
            <param name="sqlCommand">
            </param>
            <returns>
            </returns>
        </member>
        <member name="P:YAF.Classes.Data.MsSqlDbAccess.Current">
            <summary>
              Gets Current IDbAccess -- needs to be switched to direct injection into all DB classes.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.MsSqlDbAccess.IsolationLevel">
            <summary>
              Gets IsolationLevel.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.MsSqlDbAccess.ResultFilterList">
            <summary>
              Gets the Result Filter List.
            </summary>
            <exception cref="T:System.NotImplementedException">
            </exception>
        </member>
        <member name="T:YAF.Classes.Data.SearchCondition">
            <summary>
            The search condition.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.SearchCondition.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Classes.Data.SearchCondition"/> class.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.SearchCondition.Condition">
            <summary>
              Gets or sets Condition.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.SearchCondition.ConditionType">
            <summary>
              Gets or sets ConditionType.
            </summary>
        </member>
        <member name="T:YAF.Classes.Data.MsSqlDbConnectionManager">
            <summary>
            Provides open/close management for DB Connections
            </summary>
        </member>
        <member name="F:YAF.Classes.Data.MsSqlDbConnectionManager._connection">
            <summary>
              The _connection.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbConnectionManager.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:YAF.Classes.Data.MsSqlDbConnectionManager"/> class.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbConnectionManager.CloseConnection">
            <summary>
            The close connection.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbConnectionManager.InitConnection">
            <summary>
            The init connection.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbConnectionManager.Dispose">
            <summary>
            The dispose.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.MsSqlDbConnectionManager.Connection_InfoMessage(System.Object,System.Data.SqlClient.SqlInfoMessageEventArgs)">
            <summary>
            The connection_ info message.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="E:YAF.Classes.Data.MsSqlDbConnectionManager.InfoMessage">
            <summary>
              The info message.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.MsSqlDbConnectionManager.ConnectionString">
            <summary>
              Gets ConnectionString.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.MsSqlDbConnectionManager.DBConnection">
            <summary>
              Gets the current DB Connection in any state.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.MsSqlDbConnectionManager.OpenDBConnection">
            <summary>
              Gets an open connection to the DB. Can be called any number of times.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.MsSqlDbConnectionManager.YAF#Types#Interfaces#IDbConnectionManager#DBConnection">
            <summary>
            Gets DBConnection.
            </summary>
        </member>
        <member name="P:YAF.Classes.Data.MsSqlDbConnectionManager.YAF#Types#Interfaces#IDbConnectionManager#OpenDBConnection">
            <summary>
            Gets OpenDBConnection.
            </summary>
        </member>
        <member name="T:YAF.Classes.Data.SearchBuilderExtensions">
            <summary>
            The search builder extensions.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.SearchBuilderExtensions.BuildSql(System.Collections.Generic.IEnumerable{YAF.Classes.Data.SearchCondition},System.Boolean)">
            <summary>
            The build sql.
            </summary>
            <param name="conditions">
            The conditions.
            </param>
            <param name="surroundWithParathesis">
            The surround with parathesis.
            </param>
            <returns>
            The build sql.
            </returns>
        </member>
        <member name="T:YAF.Classes.Data.SearchBuilder">
            <summary>
            The search builder.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.SearchBuilder.BuildSearchSql(System.String,System.String,YAF.Types.Constants.SearchWhatFlags,YAF.Types.Constants.SearchWhatFlags,System.Int32,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            The build search sql.
            </summary>
            <param name="toSearchWhat">
            The to search what.
            </param>
            <param name="toSearchFromWho">
            The to search from who.
            </param>
            <param name="searchFromWhoMethod">
            The search from who method.
            </param>
            <param name="searchWhatMethod">
            The search what method.
            </param>
            <param name="userID">
            The user id.
            </param>
            <param name="searchDisplayName">
            The search display name.
            </param>
            <param name="boardId">
            The board id.
            </param>
            <param name="maxResults">
            The max results.
            </param>
            <param name="useFullText">
            The use full text.
            </param>
            <param name="forumIds">
            The forum ids.
            </param>
            <returns>
            The build search sql.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.SearchBuilder.BuildWhatConditions(System.String,YAF.Types.Constants.SearchWhatFlags,System.String,System.Boolean)">
            <summary>
            The build search who conditions.
            </summary>
            <param name="toSearchWhat">
            The to Search What.
            </param>
            <param name="searchWhatMethod">
            The search What Method.
            </param>
            <param name="dbField">
            The db Field.
            </param>
            <param name="useFullText">
            The use Full Text.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.SearchBuilder.BuildWhoConditions(System.String,YAF.Types.Constants.SearchWhatFlags,System.Boolean)">
            <summary>
            The build search who conditions.
            </summary>
            <param name="toSearchFromWho">
            The to search from who.
            </param>
            <param name="searchFromWhoMethod">
            The search from who method.
            </param>
            <param name="searchDisplayName">
            The search display name.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:YAF.Classes.Data.SqlDataLayerConverter">
            <summary>
            The sql data layer converter.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.SqlDataLayerConverter.VerifyInt32(System.Object)">
            <summary>
            The verify int 32.
            </summary>
            <param name="o">
            The o.
            </param>
            <returns>
            The verify int 32.
            </returns>
        </member>
        <member name="M:YAF.Classes.Data.SqlDataLayerConverter.VerifyBool(System.Object)">
            <summary>
            The verify bool.
            </summary>
            <param name="o">
            The o.
            </param>
            <returns>
            The verify bool.
            </returns>
        </member>
        <member name="T:YAF.Classes.Data.DataModule">
            <summary>
            The data module.
            </summary>
        </member>
        <member name="M:YAF.Classes.Data.DataModule.Load(Autofac.ContainerBuilder)">
            <summary>
            The load.
            </summary>
            <param name="builder">
            The builder.
            </param>
        </member>
    </members>
</doc>
