<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accord.Vision</name>
    </assembly>
    <members>
        <member name="T:Accord.Vision.Detection.HaarRectangle">
            <summary>
              Scalable rectangular area.
            </summary>
            
            <remarks>
              A rectangle which can be at any position and scale within the original image.
            </remarks>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarRectangle.#ctor(System.Int32[])">
            <summary>
              Constructs a new Haar-like feature rectangle.
            </summary>
            <param name="values">Values for this rectangle.</param>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarRectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
              Constructs a new Haar-like feature rectangle.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarRectangle.ScaleRectangle(System.Single)">
            <summary>
              Scales the values of this rectangle.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarRectangle.ScaleWeight(System.Single)">
            <summary>
              Scales the weight of this rectangle.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarRectangle.Parse(System.String)">
            <summary>
              Converts from a string representation.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarRectangle.Clone">
            <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
            
            <returns>
              A new object that is a copy of this instance.
            </returns>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.X">
            <summary>
              Gets or sets the x-coordinate of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.Y">
            <summary>
              Gets or sets the y-coordinate of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.Width">
            <summary>
              Gets or sets the width of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.Height">
            <summary>
              Gets or sets the height of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.Weight">
            <summary>
              Gets or sets the weight of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.ScaledX">
            <summary>
              Gets or sets the scaled x-coordinate of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.ScaledY">
            <summary>
              Gets or sets the scaled y-coordinate of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.ScaledWidth">
            <summary>
              Gets or sets the scaled width of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.ScaledHeight">
            <summary>
              Gets or sets the scaled height of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.ScaledWeight">
            <summary>
              Gets or sets the scaled weight of this Haar feature rectangle.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarRectangle.Area">
            <summary>
              Gets the area of this rectangle.
            </summary>
            
        </member>
        <member name="T:Accord.Vision.Detection.IObjectDetector">
            <summary>
              Object detector interface.
            </summary>
        </member>
        <member name="M:Accord.Vision.Detection.IObjectDetector.ProcessFrame(AForge.Imaging.UnmanagedImage)">
            <summary>
              Process a new image scene looking for objects.
            </summary>
        </member>
        <member name="P:Accord.Vision.Detection.IObjectDetector.DetectedObjects">
            <summary>
              Gets the location of the detected objects.
            </summary>
        </member>
        <member name="T:Accord.Vision.Detection.ObjectDetectorSearchMode">
            <summary>
              Object detector options for the search procedure.
            </summary>
            
        </member>
        <member name="F:Accord.Vision.Detection.ObjectDetectorSearchMode.Default">
            <summary>
              Entire image will be scanned.
            </summary>
            
        </member>
        <member name="F:Accord.Vision.Detection.ObjectDetectorSearchMode.Single">
            <summary>
              Only a single object will be retrieved.
            </summary>
            
        </member>
        <member name="F:Accord.Vision.Detection.ObjectDetectorSearchMode.NoOverlap">
            <summary>
              If a object has already been detected inside an area,
              it will not be scanned twice for inner/overlapping objects.
            </summary>
            
        </member>
        <member name="T:Accord.Vision.Detection.ObjectDetectorScalingMode">
            <summary>
              Object detector options for window scaling.
            </summary>
            
        </member>
        <member name="F:Accord.Vision.Detection.ObjectDetectorScalingMode.GreaterToSmaller">
            <summary>
              Will start with a big search window and
              gradually scale into smaller ones.
            </summary>
            
        </member>
        <member name="F:Accord.Vision.Detection.ObjectDetectorScalingMode.SmallerToGreater">
            <summary>
              Will start with small search windows and
              gradually scale into greater ones.
            </summary>
            
        </member>
        <member name="T:Accord.Vision.Detection.HaarObjectDetector">
            <summary>
              Viola-Jones Object Detector based on Haar-like features.
            </summary>
            <remarks>
            
            <para>
              The Viola-Jones object detection framework is the first object detection framework
              to provide competitive object detection rates in real-time proposed in 2001 by Paul
              Viola and Michael Jones. Although it can be trained to detect a variety of object
              classes, it was motivated primarily by the problem of face detection.</para>
              
            <para>
              The implementation of this code has used Viola and Jones' original publication, the
              OpenCV Library and the Marilena Project as reference. OpenCV is released under a BSD
              license, it is free for both academic and commercial use. Please be aware that some
              particular versions of the Haar object detection framework are patented by Viola and
              Jones and may be subject to restrictions for use in commercial applications. The code
              has been implemented with full support for tilted Haar features from the ground up.</para>
              
             <para>
                References:
                <list type="bullet">
                  <item><description>
                    <a href="http://www.cs.utexas.edu/~grauman/courses/spring2007/395T/papers/viola_cvpr2001.pdf">
                    Viola, P. and Jones, M. (2001). Rapid Object Detection using a Boosted Cascade
                    of Simple Features.</a></description></item>
                  <item><description>
                    <a href="http://en.wikipedia.org/wiki/Viola-Jones_object_detection_framework">
                    http://en.wikipedia.org/wiki/Viola-Jones_object_detection_framework</a>
                  </description></item>
                </list>
              </para>
            </remarks>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarObjectDetector.#ctor(Accord.Vision.Detection.HaarCascade)">
            <summary>
              Constructs a new Haar object detector.
            </summary>
            <param name="cascade">
              The <see cref="T:Accord.Vision.Detection.HaarCascade"/> to use in the detector's classifier.
              For the default face cascade, please take a look on
              <see cref="T:Accord.Vision.Detection.Cascades.FaceHaarCascade"/>.
            </param>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarObjectDetector.#ctor(Accord.Vision.Detection.HaarCascade,System.Int32)">
            <summary>
              Constructs a new Haar object detector.
            </summary>
            <param name="cascade">
              The <see cref="T:Accord.Vision.Detection.HaarCascade"/> to use in the detector's classifier.
              For the default face cascade, please take a look on
              <see cref="T:Accord.Vision.Detection.Cascades.FaceHaarCascade"/>.
            </param>
            <param name="minSize">Minimum window size to consider when searching
            objects. Default value is <c>15</c>.</param>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarObjectDetector.#ctor(Accord.Vision.Detection.HaarCascade,System.Int32,Accord.Vision.Detection.ObjectDetectorSearchMode)">
            <summary>
              Constructs a new Haar object detector.
            </summary>
            <param name="cascade">
              The <see cref="T:Accord.Vision.Detection.HaarCascade"/> to use in the detector's classifier.
              For the default face cascade, please take a look on
              <see cref="T:Accord.Vision.Detection.Cascades.FaceHaarCascade"/>.
            </param>
            <param name="minSize">Minimum window size to consider when searching
            objects. Default value is <c>15</c>.</param>
            <param name="searchMode">The <see cref="T:Accord.Vision.Detection.ObjectDetectorSearchMode"/> to use
            during search. Please see documentation of <see cref="T:Accord.Vision.Detection.ObjectDetectorSearchMode"/>
            for details. Default value is <see cref="F:Accord.Vision.Detection.ObjectDetectorSearchMode.NoOverlap"/></param>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarObjectDetector.#ctor(Accord.Vision.Detection.HaarCascade,System.Int32,Accord.Vision.Detection.ObjectDetectorSearchMode,System.Single)">
            <summary>
              Constructs a new Haar object detector.
            </summary>
            <param name="cascade">
              The <see cref="T:Accord.Vision.Detection.HaarCascade"/> to use in the detector's classifier.
              For the default face cascade, please take a look on
              <see cref="T:Accord.Vision.Detection.Cascades.FaceHaarCascade"/>.
            </param>
            <param name="minSize">Minimum window size to consider when searching
            objects. Default value is <c>15</c>.</param>
            <param name="searchMode">The <see cref="T:Accord.Vision.Detection.ObjectDetectorSearchMode"/> to use
            during search. Please see documentation of <see cref="T:Accord.Vision.Detection.ObjectDetectorSearchMode"/>
            for details. Default value is <see cref="F:Accord.Vision.Detection.ObjectDetectorSearchMode.NoOverlap"/></param>
            <param name="scaleFactor">The re-scaling factor to use when re-scaling the window during search.</param>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarObjectDetector.#ctor(Accord.Vision.Detection.HaarCascade,System.Int32,Accord.Vision.Detection.ObjectDetectorSearchMode,System.Single,Accord.Vision.Detection.ObjectDetectorScalingMode)">
            <summary>
              Constructs a new Haar object detector.
            </summary>
            <param name="cascade">
              The <see cref="T:Accord.Vision.Detection.HaarCascade"/> to use in the detector's classifier.
              For the default face cascade, please take a look on
              <see cref="T:Accord.Vision.Detection.Cascades.FaceHaarCascade"/>.
            </param>
            <param name="minSize">Minimum window size to consider when searching
            objects. Default value is <c>15</c>.</param>
            <param name="searchMode">The <see cref="T:Accord.Vision.Detection.ObjectDetectorSearchMode"/> to use
            during search. Please see documentation of <see cref="T:Accord.Vision.Detection.ObjectDetectorSearchMode"/>
            for details. Default is <see cref="F:Accord.Vision.Detection.ObjectDetectorSearchMode.NoOverlap"/>.</param>
            <param name="scaleFactor">The scaling factor to rescale the window
            during search. Default value is <c>1.2f</c>.</param>
            <param name="scalingMode">The <see cref="T:Accord.Vision.Detection.ObjectDetectorScalingMode"/> to use
            when re-scaling the search window during search. Default is <see cref="F:Accord.Vision.Detection.ObjectDetectorScalingMode.SmallerToGreater"/>.</param>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarObjectDetector.ProcessFrame(System.Drawing.Bitmap)">
            <summary>
              Performs object detection on the given frame.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarObjectDetector.ProcessFrame(AForge.Imaging.UnmanagedImage)">
            <summary>
              Performs object detection on the given frame.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarObjectDetector.UseParallelProcessing">
            <summary>
              Gets or sets a value indicating whether this <see cref="T:Accord.Vision.Detection.HaarObjectDetector"/>
              should scan the image using multiple threads.
            </summary>
            
            <value><c>true</c> to use multiple threads; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarObjectDetector.MinSize">
            <summary>
              Minimum window size to consider when searching objects.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarObjectDetector.MaxSize">
            <summary>
              Maximum window size to consider when searching objects.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarObjectDetector.Channel">
            <summary>
              Gets or sets the color channel to use when processing color images. 
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarObjectDetector.ScalingFactor">
            <summary>
              Gets or sets the scaling factor to rescale the window during search.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarObjectDetector.SearchMode">
            <summary>
              Gets or sets the desired searching method.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarObjectDetector.ScalingMode">
            <summary>
              Gets or sets the desired scaling method.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarObjectDetector.DetectedObjects">
            <summary>
              Gets the detected objects bounding boxes.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarObjectDetector.Classifier">
            <summary>
              Gets the internal Cascade Classifier used by this detector.
            </summary>
        </member>
        <member name="P:Accord.Vision.Detection.HaarObjectDetector.Steady">
            <summary>
              Gets how many frames the object has
              been detected in a steady position.
            </summary>
            <value>
              The number of frames the detected object
              has been in a steady position.</value>
              
        </member>
        <member name="T:Accord.Vision.Detection.HaarFeature">
            <summary>
              Rectangular Haar-like feature container.
            </summary>
            <remarks>
              References:
              - http://en.wikipedia.org/wiki/Haar-like_features#Rectangular_Haar-like_features
            </remarks>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeature.#ctor">
            <summary>
              Constructs a new Haar-like feature.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeature.#ctor(Accord.Vision.Detection.HaarRectangle[])">
            <summary>
              Constructs a new Haar-like feature.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeature.#ctor(System.Int32[][])">
            <summary>
              Constructs a new Haar-like feature.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeature.#ctor(System.Boolean,System.Int32[][])">
            <summary>
              Constructs a new Haar-like feature.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeature.GetSum(Accord.Imaging.IntegralImage2,System.Int32,System.Int32)">
            <summary>
              Gets the sum of the areas of the rectangular features in an integral image.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeature.SetScaleAndWeight(System.Single,System.Single)">
            <summary>
              Sets the scale and weight of a Haar-like rectangular feature container.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeature.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Accord.Vision.Detection.HaarFeature.Tilted">
            <summary>
              Gets or sets whether this feature is tilted.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarFeature.Rectangles">
            <summary>
              Gets or sets the Haar rectangles for this feature.
            </summary>
            
        </member>
        <member name="T:Accord.Vision.Tracking.CamshiftMode">
            <summary>
              Modes for the Camshift Tracker.
            </summary>
            
        </member>
        <member name="F:Accord.Vision.Tracking.CamshiftMode.RGB">
            <summary>
              By choosing RGB, the tracker will process raw high-intensity RGB values.
            </summary>
            
        </member>
        <member name="F:Accord.Vision.Tracking.CamshiftMode.HSL">
            <summary>
              By choosing HSL, the tracker will perform a RGB-to-HSL conversion and use the Hue value instead.
            </summary>
            
        </member>
        <member name="F:Accord.Vision.Tracking.CamshiftMode.Mixed">
            <summary>
              By choosing Mixed, the tracker will use HSL with some lightness information.
            </summary>
            
        </member>
        <member name="T:Accord.Vision.Tracking.Camshift">
            <summary>
              Continuously Adaptive Mean Shift (Camshift) Object Tracker
            </summary>
            <remarks>
            <para>
              Camshift stands for "Continuously Adaptive Mean Shift". It combines the basic
              Mean Shift algorithm with an adaptive region-sizing step. The kernel is a step
              function applied to a probability map. The probability of each image pixel is
              based on color using a method called histogram backprojection.</para>
            <para>
              The implementation of this code has used Gary Bradski's original publication,
              the OpenCV Library and the FaceIt implementation as references. The OpenCV
              library is distributed under a BSD license. FaceIt is distributed under a MIT
              license. The original licensing terms for FaceIt are described in the source
              code and in the Copyright.txt file accompanying the framework.</para>  
              
            <para>
              References:
              <list type="bullet">
                <item><description>
                  G.R. Bradski, Computer video face tracking for use in a perceptual user interface,
                  Intel Technology Journal, Q2 1998. Available on:
                  <a href="ftp://download.intel.com/technology/itj/q21998/pdf/camshift.pdf">
                  ftp://download.intel.com/technology/itj/q21998/pdf/camshift.pdf </a></description></item>
                <item><description>
                  R. Hewitt, Face tracking project description: Camshift Algorithm. Available on:
                  <a href="http://www.robinhewitt.com/research/track/camshift.html">
                  http://www.robinhewitt.com/research/track/camshift.html </a></description></item>
                <item><description>
                  OpenCV Computer Vision Library. Available on:
                  <a href="http://sourceforge.net/projects/opencvlibrary/">
                  http://sourceforge.net/projects/opencvlibrary/ </a></description></item>
                <item><description>
                  FaceIt object tracking in Flash AS3. Available on:
                  <a href="http://www.libspark.org/browser/as3/FaceIt">
                  http://www.libspark.org/browser/as3/FaceIt </a></description></item>
             </list></para>  
            </remarks>
            
        </member>
        <member name="T:Accord.Vision.Tracking.IObjectTracker">
            <summary>
              Object tracker interface.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.IObjectTracker.ProcessFrame(AForge.Imaging.UnmanagedImage)">
            <summary>
              Process a new video frame.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.IObjectTracker.TrackingObject">
            <summary>
              Gets the current location of the object being tracked.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.IObjectTracker.Extract">
            <summary>
              Gets or sets a value indicating whether the tracker should
              extract the object image from the source. The extracted image
              should be stored in <see cref="P:Accord.Vision.Tracking.IObjectTracker.TrackingObject"/>.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.#ctor">
            <summary>
              Constructs a new Camshift tracking algorithm.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.#ctor(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Constructs a new Camshift tracking algorithm.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.#ctor(System.Drawing.Rectangle)">
            <summary>
              Constructs a new Camshift tracking algorithm.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.#ctor(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle,Accord.Vision.Tracking.CamshiftMode)">
            <summary>
              Constructs a new Camshift tracking algorithm.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.#ctor(System.Drawing.Rectangle,Accord.Vision.Tracking.CamshiftMode)">
            <summary>
              Constructs a new Camshift tracking algorithm.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.Reset">
            <summary>
              Resets the object tracking algorithm.
            </summary>
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.GetBackprojection">
            <summary>
              Generates a image of the histogram backprojection
            </summary>
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.GetBackprojection(System.Drawing.Imaging.PixelFormat)">
            <summary>
              Generates a image of the histogram backprojection
            </summary>
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.GetBackprojection(System.Drawing.Imaging.PixelFormat,System.Drawing.Rectangle)">
            <summary>
              Generates a image of the histogram backprojection
            </summary>
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.GetBackprojection(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Generates a image of the histogram backprojection
            </summary>
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.ProcessFrame(AForge.Imaging.UnmanagedImage)">
            <summary>
              Processes a new video frame.
            </summary>
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.camshift(AForge.Imaging.UnmanagedImage)">
            <summary>
              Camshift algorithm
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.meanShift(AForge.Imaging.UnmanagedImage)">
            <summary>
              Mean shift algorithm
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.computeHistogramRatio(System.Single[],System.Single[],System.Single[])">
            <summary>
              Computes the ratio histogram between to histograms.
            </summary>
            <remarks>
              http://www.robinhewitt.com/research/track/backproject.html
            </remarks>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.generateBackprojectionMap(AForge.Imaging.UnmanagedImage,System.Single[])">
            <summary>
              Image histogram back-projection.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.createHistogram(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>
              Creates a color histogram discarding low intensity colors
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.Camshift.checkSteadiness">
            <summary>
              Checks for aberrant fluctuations in the tracking object.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.SearchWindow">
            <summary>
              Gets or sets the current search window.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.AspectRatio">
            <summary>
              Gets or sets the desired window aspect ratio.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.Mode">
            <summary>
              Gets or sets the mode of operation for this tracker.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.HslSaturationRange">
            <summary>
              If using HSL mode, specifies the operational saturation range for the tracker.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.HslLightnessRange">
            <summary>
              If using HSL mode, specifies the operational lighness range for the tracker.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.TrackingObject">
            <summary>
              Gets the location of the object being tracked.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.Extract">
            <summary>
              Gets or sets a value indicating whether the tracker
              should extract the object image from the source. The
              extracted image will be available in <see cref="P:Accord.Vision.Tracking.TrackingObject.Image"/>.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.Map">
            <summary>
              Probability map
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.Conservative">
            <summary>
              Gets or sets whether the algorithm should scan only the
              active window or the entire image for histogram ratio.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.Smooth">
            <summary>
              Gets or sets a value indicating whether the angular
              movements should be smoothed using a moving average.
            </summary>
            <value><c>true</c> to smooth angular movements; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:Accord.Vision.Tracking.Camshift.IsSteady">
            <summary>
              Gets whether the tracking object is
              showing little variation of fluctuation.
            </summary>
            <value><c>true</c> if the tracking object is steady; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="T:Accord.Vision.Detection.HaarCascade">
            <summary>
              Cascade of Haar-like features' weak classification stages.
            </summary>
            
            <remarks>
            <para>
              The Viola-Jones object detection framework is the first object detection framework
              to provide competitive object detection rates in real-time proposed in 2001 by Paul
              Viola and Michael Jones. Although it can be trained to detect a variety of object
              classes, it was motivated primarily by the problem of face detection.</para>
              
            <para>
              The implementation of this code has used Viola and Jones' original publication, the
              OpenCV Library and the Marilena Project as reference. OpenCV is released under a BSD
              license, it is free for both academic and commercial use. Please be aware that some
              particular versions of the Haar object detection framework are patented by Viola and
              Jones and may be subject to restrictions for use in commercial applications. </para>
              
             <para>
                References:
                <list type="bullet">
                  <item><description>
                    <a href="http://www.cs.utexas.edu/~grauman/courses/spring2007/395T/papers/viola_cvpr2001.pdf">
                    Viola, P. and Jones, M. (2001). Rapid Object Detection using a Boosted Cascade
                    of Simple Features.</a></description></item>
                  <item><description>
                    <a href="http://en.wikipedia.org/wiki/Viola-Jones_object_detection_framework">
                    Wikipedia, The Free Encyclopedia. Viola-Jones object detection framework </a>
                  </description></item>
                </list></para>
            </remarks>
            
            <example>
            <para>
              To load an OpenCV-compatible XML definition for a Haar cascade, you can use HaarCascade's
              <see cref="M:Accord.Vision.Detection.HaarCascade.FromXml(System.IO.Stream)">FromXml</see> static method. An example would be:</para>
              <code>
              String path = @"C:\Users\haarcascade-frontalface_alt2.xml";
              HaarCascade cascade1 = HaarCascade.FromXml(path);
              </code>
              
            <para>
              After the cascade has been loaded, it is possible to create a new <see cref="T:Accord.Vision.Detection.HaarObjectDetector"/>
              using the cascade. Please see <see cref="T:Accord.Vision.Detection.HaarObjectDetector"/> for more details. It is also
              possible to generate embeddable C# definitions from a cascade, avoiding the need to load
              XML files on program startup. Please see <see cref="M:Accord.Vision.Detection.HaarCascade.ToCode(System.String,System.String)"/> method or 
              <see cref="T:Accord.Vision.Detection.HaarCascadeWriter"/> class for details.</para> 
            </example>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascade.#ctor(System.Int32,System.Int32,Accord.Vision.Detection.HaarCascadeStage[])">
            <summary>
              Constructs a new Haar Cascade.
            </summary>
            
            <param name="baseWidth">Base feature width.</param>
            <param name="baseHeight">Base feature height.</param>
            <param name="stages">Haar-like features classification stages.</param>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascade.#ctor(System.Int32,System.Int32)">
            <summary>
              Constructs a new Haar Cascade.
            </summary>
            
            <param name="baseWidth">Base feature width.</param>
            <param name="baseHeight">Base feature height.</param>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascade.checkTiltedFeatures(Accord.Vision.Detection.HaarCascadeStage[])">
            <summary>
              Checks if the classifier contains tilted (rotated) features
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascade.Clone">
            <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
            
            <returns>
              A new object that is a copy of this instance.
            </returns>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascade.FromXml(System.IO.Stream)">
            <summary>
              Loads a HaarCascade from a OpenCV-compatible XML file.
            </summary>
            
            <param name="stream">
               A <see cref="T:System.IO.Stream"/> containing the file stream
               for the xml definition of the classifier to be loaded.</param>
               
            <returns>The HaarCascadeClassifier loaded from the file.</returns>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascade.FromXml(System.String)">
            <summary>
              Loads a HaarCascade from a OpenCV-compatible XML file.
            </summary>
            
            <param name="path">
               The file path for the xml definition of the classifier to be loaded.</param>
               
            <returns>The HaarCascadeClassifier loaded from the file.</returns>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascade.FromXml(System.IO.TextReader)">
            <summary>
              Loads a HaarCascade from a OpenCV-compatible XML file.
            </summary>
            
            <param name="stringReader">
               A <see cref="T:System.IO.StringReader"/> containing the file stream
               for the xml definition of the classifier to be loaded.</param>
               
            <returns>The HaarCascadeClassifier loaded from the file.</returns>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascade.ToCode(System.String,System.String)">
            <summary>
              Saves a HaarCascade to C# code.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascade.ToCode(System.IO.TextWriter,System.String)">
            <summary>
              Saves a HaarCascade to C# code.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarCascade.Width">
            <summary>
              Gets the stages' base width.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarCascade.Height">
            <summary>
              Gets the stages' base height.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarCascade.Stages">
            <summary>
              Gets the classification stages.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarCascade.HasTiltedFeatures">
            <summary>
              Gets a value indicating whether this cascade has tilted features.
            </summary>
            
            <value>
            	<c>true</c> if this cascade has tilted features; otherwise, <c>false</c>.
            </value>
            
        </member>
        <member name="T:Accord.Vision.Tracking.HslBlobTracker">
            <summary>
              Blob object tracker.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.HslBlobTracker.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.Vision.Tracking.HslBlobTracker"/> class.
            </summary>
        </member>
        <member name="M:Accord.Vision.Tracking.HslBlobTracker.#ctor(AForge.Imaging.Filters.HSLFiltering)">
            <summary>
              Initializes a new instance of the <see cref="T:Accord.Vision.Tracking.HslBlobTracker"/> class.
            </summary>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Accord.Vision.Tracking.HslBlobTracker.ProcessFrame(AForge.Imaging.UnmanagedImage)">
            <summary>
            Process a new video frame.
            </summary>
        </member>
        <member name="M:Accord.Vision.Tracking.HslBlobTracker.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="P:Accord.Vision.Tracking.HslBlobTracker.MaxWidth">
            <summary>
            Gets or sets the maximum width of tracked objects.
            </summary>
        </member>
        <member name="P:Accord.Vision.Tracking.HslBlobTracker.MaxHeight">
            <summary>
            Gets or sets the maximum height of tracked objects.
            </summary>
        </member>
        <member name="P:Accord.Vision.Tracking.HslBlobTracker.MinWidth">
            <summary>
            Gets or sets the minimum width of tracked objects.
            </summary>
        </member>
        <member name="P:Accord.Vision.Tracking.HslBlobTracker.MinHeight">
            <summary>
            Gets or sets the minimum height of tracked objects.
            </summary>
        </member>
        <member name="P:Accord.Vision.Tracking.HslBlobTracker.Extract">
            <summary>
              Gets or sets a value indicating whether the tracker
              should extract the object image from the source. The
              extracted image will be available in <see cref="P:Accord.Vision.Tracking.TrackingObject.Image"/>.
            </summary>
        </member>
        <member name="P:Accord.Vision.Tracking.HslBlobTracker.ComputeOrientation">
            <summary>
              Gets or sets whether the tracker should compute blob's orientation.
            </summary>
        </member>
        <member name="P:Accord.Vision.Tracking.HslBlobTracker.Filter">
            <summary>
              Gets the HSL filter used in color segmentation.
            </summary>
            <value>The HSL filter used in segmentation.</value>
        </member>
        <member name="P:Accord.Vision.Tracking.HslBlobTracker.FilterImage">
            <summary>
              Gets the HSL filtered image.
            </summary>
        </member>
        <member name="P:Accord.Vision.Tracking.HslBlobTracker.TrackingObject">
            <summary>
            Gets the current location of the object being tracked.
            </summary>
            <value></value>
        </member>
        <member name="T:Accord.Vision.Tracking.AxisOrientation">
            <summary>
              Axis orientation.
            </summary>
            
        </member>
        <member name="F:Accord.Vision.Tracking.AxisOrientation.Horizontal">
            <summary>
              Horizontal axis.
            </summary>
        </member>
        <member name="F:Accord.Vision.Tracking.AxisOrientation.Vertical">
            <summary>
              Vertical axis.
            </summary>
        </member>
        <member name="T:Accord.Vision.Tracking.TrackingObject">
            <summary>
              Tracking object to represent an object in a scene.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.TrackingObject.#ctor">
            <summary>
              Constructs a new tracking object.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.TrackingObject.#ctor(AForge.IntPoint)">
            <summary>
              Constructs a new tracking object.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.TrackingObject.#ctor(System.Drawing.Rectangle,AForge.IntPoint,System.Single)">
            <summary>
              Constructs a new tracking object.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.TrackingObject.GetAxis">
            <summary>
              Gets two points defining the horizontal axis of the object.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.TrackingObject.GetAxis(Accord.Vision.Tracking.AxisOrientation)">
            <summary>
              Gets two points defining the axis of the object.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.TrackingObject.Reset">
            <summary>
              Resets this tracking object.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.TrackingObject.Tag">
            <summary>
            Gets or sets an user-defined tag associated with this object.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.TrackingObject.Rectangle">
            <summary>
              Gets or sets the rectangle containing the object.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.TrackingObject.Center">
            <summary>
              Gets or sets the center of the object.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.TrackingObject.Image">
            <summary>
              Gets or sets the object's extracted image.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.TrackingObject.IsEmpty">
            <summary>
            Gets a value indicating whether the object is empty.
            </summary>
            
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
            
        </member>
        <member name="P:Accord.Vision.Tracking.TrackingObject.Area">
            <summary>
              Gets the area of the object.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.TrackingObject.Angle">
            <summary>
              Gets or sets the angle of the object.
            </summary>
            
        </member>
        <member name="T:Accord.Vision.Detection.Cascades.FaceHaarCascade">
            <summary>
              Default Face Haar Cascade for using with Haar Classifiers.
            </summary>
            
            <remarks>
              The definition was originally based on a hardcoded partial transcription of
              OpenCV's <i>haarcascade_frontalface_alt.xml</i> by Mario Klingemann. This
              class, however, has been re-created using <see cref="T:Accord.Vision.Detection.HaarCascadeWriter"/>.
            </remarks>
            
        </member>
        <member name="M:Accord.Vision.Detection.Cascades.FaceHaarCascade.#ctor">
            <summary>
              Hardcoded partial transcription of <i>haarcascade_frontalface_alt.xml</i>
              based on code by Mario Klingemann.
            </summary>
            
        </member>
        <member name="T:Accord.Vision.Tracking.MatchingTracker">
            <summary>
              Template matching object tracker.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.MatchingTracker.#ctor">
            <summary>
              Constructs a new <see cref="T:Accord.Vision.Tracking.MatchingTracker"/> object tracker.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.MatchingTracker.ProcessFrame(AForge.Imaging.UnmanagedImage)">
            <summary>
              Process a new video frame.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Tracking.MatchingTracker.Reset">
            <summary>
              Resets this instance.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.MatchingTracker.SearchWindow">
            <summary>
              Gets or sets the current search window.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.MatchingTracker.TrackingObject">
            <summary>
              Gets the current location of the object being tracked.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.MatchingTracker.Threshold">
            <summary>
              Gets or sets the similarty threshold to 
              determine when the object has been lost.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Tracking.MatchingTracker.Extract">
            <summary>
              Gets or sets a value indicating whether the tracker should
              extract the object image from the source. The extracted image
              should be stored in <see cref="P:Accord.Vision.Tracking.MatchingTracker.TrackingObject"/>.
            </summary>
            
        </member>
        <member name="T:Accord.Vision.Detection.HaarCascadeStage">
            <summary>
              Haar Cascade Classifier Stage.
            </summary>
            
            <remarks>
              A Haar Cascade Classifier is composed of several stages. Each stage
              contains a set of classifier trees used in the decisioning process.
            </remarks>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascadeStage.#ctor">
            <summary>
              Constructs a new Haar Cascade Stage.
            </summary>
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascadeStage.#ctor(System.Double)">
            <summary>
              Constructs a new Haar Cascade Stage.
            </summary>
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascadeStage.#ctor(System.Double,System.Int32,System.Int32)">
            <summary>
              Constructs a new Haar Cascade Stage.
            </summary>
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascadeStage.Classify(Accord.Imaging.IntegralImage2,System.Int32,System.Int32,System.Double)">
            <summary>
              Classifies an image as having the searched object or not.
            </summary>
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascadeStage.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Accord.Vision.Detection.HaarCascadeStage.Trees">
            <summary>
              Gets or sets the feature trees and its respective
              feature tree nodes which compose this stage.
            </summary>
        </member>
        <member name="P:Accord.Vision.Detection.HaarCascadeStage.Threshold">
            <summary>
              Gets or sets the threshold associated with this stage,
              i.e. the minimum value the classifiers should output
              to decide if the image contains the object or not.
            </summary>
        </member>
        <member name="P:Accord.Vision.Detection.HaarCascadeStage.ParentIndex">
            <summary>
              Gets the index of the parent stage from this stage.
            </summary>
        </member>
        <member name="P:Accord.Vision.Detection.HaarCascadeStage.NextIndex">
            <summary>
              Gets the index of the next stage from this stage.
            </summary>
        </member>
        <member name="T:Accord.Vision.Detection.HaarCascadeSerializationObject">
            <summary>
              Haar Cascade Serialization Root. This class is used
              only for XML serialization/deserialization.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarCascadeSerializationObject.Stages">
            <summary>
              The stages retrieved after deserialization.
            </summary>
        </member>
        <member name="T:Accord.Vision.Detection.HaarFeatureNode">
            <summary>
              Haar Cascade Feature Tree Node.
            </summary>
            <remarks>
              The Feature Node is a node belonging to a feature tree,
              containing information about child nodes and an associated 
              <see cref="T:Accord.Vision.Detection.HaarFeature"/>.
            </remarks>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeatureNode.#ctor">
            <summary>
              Constructs a new feature tree node.
            </summary>
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeatureNode.#ctor(System.Double,System.Double,System.Double,System.Int32[][])">
            <summary>
              Constructs a new feature tree node.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeatureNode.#ctor(System.Double,System.Double,System.Double,System.Boolean,System.Int32[][])">
            <summary>
              Constructs a new feature tree node.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarFeatureNode.Clone">
            <summary>
              Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
              A new object that is a copy of this instance.
            </returns>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarFeatureNode.Threshold">
            <summary>
              Gets the threshold for this feature.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarFeatureNode.LeftValue">
            <summary>
              Gets the left value for this feature.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarFeatureNode.RightValue">
            <summary>
              Gets the right value for this feature.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarFeatureNode.LeftNodeIndex">
            <summary>
              Gets the left node index for this feature.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarFeatureNode.RightNodeIndex">
            <summary>
              Gets the right node index for this feature.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarFeatureNode.Feature">
            <summary>
              Gets the feature associated with this node.
            </summary>
            
        </member>
        <member name="T:Accord.Vision.Detection.HaarClassifier">
             <summary>
               Strong classifier based on a weaker cascade of
               classifiers using Haar-like rectangular features.
             </summary>
            
             <remarks>
             <para>
               The Viola-Jones object detection framework is the first object detection framework
               to provide competitive object detection rates in real-time proposed in 2001 by Paul
               Viola and Michael Jones. Although it can be trained to detect a variety of object
               classes, it was motivated primarily by the problem of face detection.</para>
               
             <para>
               The implementation of this code has used Viola and Jones' original publication, the
               OpenCV Library and the Marilena Project as reference. OpenCV is released under a BSD
               license, it is free for both academic and commercial use. Please be aware that some
               particular versions of the Haar object detection framework are patented by Viola and
               Jones and may be subject to restrictions for use in commercial applications. The code
               has been implemented with full support for tilted Haar features.</para>
               
              <para>
                 References:
                 <list type="bullet">
                   <item><description>
                     <a href="http://www.cs.utexas.edu/~grauman/courses/spring2007/395T/papers/viola_cvpr2001.pdf">
                     Viola, P. and Jones, M. (2001). Rapid Object Detection using a Boosted Cascade
                     of Simple Features.</a></description></item>
                   <item><description>
                     <a href="http://en.wikipedia.org/wiki/Viola-Jones_object_detection_framework">
                     http://en.wikipedia.org/wiki/Viola-Jones_object_detection_framework</a>
                   </description></item>
                 </list>
               </para>
             </remarks>
             
        </member>
        <member name="M:Accord.Vision.Detection.HaarClassifier.#ctor(Accord.Vision.Detection.HaarCascade)">
            <summary>
              Constructs a new classifier.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarClassifier.#ctor(System.Int32,System.Int32,Accord.Vision.Detection.HaarCascadeStage[])">
            <summary>
              Constructs a new classifier.
            </summary>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarClassifier.Compute(Accord.Imaging.IntegralImage2,System.Drawing.Rectangle)">
            <summary>
              Detects the presence of an object in a given window.
            </summary>
            
        </member>
        <member name="P:Accord.Vision.Detection.HaarClassifier.Cascade">
            <summary>
              Gets the cascade of weak-classifiers
              used by this strong classifier.
            </summary>
        </member>
        <member name="P:Accord.Vision.Detection.HaarClassifier.Scale">
            <summary>
              Gets or sets the scale of the search window
              being currently used by the classifier.
            </summary>
            
        </member>
        <member name="T:Accord.Vision.Detection.HaarCascadeWriter">
            <summary>
              Automatic transcriber for Haar cascades.
            </summary>
            
            <remarks>
              This class can be used to generate code-only definitions for Haar cascades,
              avoiding the need for loading and parsing XML files during application startup.
              This class generates a C# code for a class inheriting from <see cref="T:Accord.Vision.Detection.HaarCascade"/>
              which may be used to create a <see cref="T:Accord.Vision.Detection.HaarObjectDetector"/>.
            </remarks>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascadeWriter.#ctor(System.IO.TextWriter)">
            <summary>
              Constructs a new <see cref="T:Accord.Vision.Detection.HaarCascadeWriter"/> class.
            </summary>
            <param name="stream">The stream to write to.</param>
            
        </member>
        <member name="M:Accord.Vision.Detection.HaarCascadeWriter.Write(Accord.Vision.Detection.HaarCascade,System.String)">
            <summary>
              Writes the specified cascade.
            </summary>
            <param name="cascade">The cascade to write.</param>
            <param name="className">The name for the generated class.</param>
            
        </member>
        <member name="T:Accord.Vision.Detection.Cascades.NoseHaarCascade">
            <summary>
              Automatic transcription of haar cascade definitions 
              for facial features by Modesto Castrillon-Santana.
            </summary>
            
            <remarks>
            <para>
              This code has been automatically generated by the Accord.NET Framework
              based on original research by Modesto Castrillon-Santana. The original
              code has been shared under a BSD license in the OpenCV library and has
              been incorporated in the Accord.NET Framework under permission of the
              original author.</para>
              
            <code>
              // Copyright (c) 2008, Modesto Castrillon-Santana (IUSIANI, University of
              // Las Palmas de Gran Canaria, Spain).
              //  All rights reserved.
              //  
              // Redistribution and use in source and binary forms, with or without
              // modification, are permitted provided that the following conditions are
              // met:
              //       
              //    * Redistributions of source code must retain the above copyright
              //      notice, this list of conditions and the following disclaimer.
              //    * Redistributions in binary form must reproduce the above
              //      copyright notice, this list of conditions and the following
              //      disclaimer in the documentation and/or other materials provided
              //      with the distribution.  
              //    * The name of Contributor may not used to endorse or promote products 
              //      derived from this software without specific prior written permission.
              //
              //  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
              //  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
              //  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
              //  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
              //  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
              //  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
              //  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
              //  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
              //  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
              //  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
              //  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
            </code>
            
            </remarks>
            
        </member>
        <member name="M:Accord.Vision.Detection.Cascades.NoseHaarCascade.#ctor">
            <summary>
              Creates a new cascade for nose detection.
            </summary>
            
        </member>
    </members>
</doc>
