<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accord.Music</name>
    </assembly>
    <members>
        <member name="T:Accord.Music.Sets.PitchClassSet">
            <summary>
            Description of PitchClassSet.
            </summary>
        </member>
        <member name="T:Accord.Music.Sets.IMusicalSet`1">
            <summary>
              Musical Set
            </summary>
            <remarks>
              Musical set theory deals with collections of pitches and pitch classes, which
              may be ordered or unordered, and which can be related by musical operations
              such as transposition, inversion, and complementation. The methods of musical
              set theory are sometimes applied to the analysis of rhythm as well.
              
              References:
               - http://en.wikipedia.org/wiki/Set_theory_(music)
            </remarks>
        </member>
        <member name="T:Accord.Music.Sets.IntervalVector">
            <summary>
              An interval vector is an array that expresses the
              intervallic content of a pitch-class set.
            </summary>
            <remarks>
              In 12 equal temperament the interval vector has six
              digits, with each digit standing for the number of
              times an interval class appears in the set. (Interval
              classes, not regular intervals, must be used, in order
              that the interval vector remains the same, regardless
              of the set's permutation or vertical arrangement.)
            
              The interval classes represented by each digit ascend
              from left to right. That is:
            
                1) minor seconds/major sevenths (1 or 11 semitones)
                2) major seconds/minor sevenths (2 or 10 semitones)
                3) minor thirds/major sixths (3 or 9 semitones)
                4) major thirds/minor sixths (4 or 8 semitones)
                5) perfect fourths/perfect fifths (5 or 7 semitones)
                6) tritones (6 semitones) (The tritone is inversionally related to itself.)
            
              Interval class 0 (representing unisons and octaves) is omitted.
            </remarks>
        </member>
        <member name="T:Accord.Music.Scales.Scale">
             <summary>
              Scale is a group of musical notes ordered by pitch.
            </summary>
             <remarks>
            	 In music, a scale is a group of musical notes collected in
            	 ascending and descending order, that provides material for
            	 or is used to conveniently represent part or all of a musical
            	 work including melody and/or harmony. Scales are ordered in
              pitch or pitch class, with their ordering providing a measure
            	 of musical distance.
            	</remarks>
              Major scales: http://musiced.about.com/od/lessonsandtips/qt/scales.htm
             a scale is a pitch class *collection*.
        </member>
        <member name="T:Accord.Music.Sets.NoteSet">
            <summary>
            Description of NoteSet.
            </summary>
        </member>
        <member name="P:Accord.Music.Scales.Scale.Tonic">
            <summary>
              Gets or sets the tonic note for the scale.
            </summary>
            <remarks>
              The tonic is the central and most stable note of the scale
            </remarks>
        </member>
        <member name="T:Accord.Music.Accidental">
            <summary>
              Accidental Symbols
            </summary>
            <remarks>
              In music, an accidental is a note whose pitch (or pitch class) is
              not a member of a scale or mode indicated by the most recently
              applied key signature. In musical notation, the symbols used to
              mark such notes, sharps (#), flats (b), and naturals may also be
              called accidentals.
            </remarks>
        </member>
        <member name="T:Accord.Music.AccidentalEx">
            <summary>
              Extension methods for Accidentals from the Accidental Enumeration.
            </summary>
        </member>
        <member name="T:Accord.Music.Notation.Score">
            <summary>
              Music Score
            </summary>
        </member>
        <member name="T:Accord.Music.Chord">
            <summary>
             Musical Chord.
            </summary>
            <remarks>
              References:
               - http://www.smithfowler.org/music/Chord_Formulas.htm
            </remarks>
        </member>
        <member name="T:Accord.Music.Composite">
            <summary>
              Composite Note
            </summary>
        </member>
        <member name="T:Accord.Music.Key">
            <summary>
              Musical Key
            </summary>
        </member>
        <member name="T:Accord.Music.Sets.PitchSet">
            <summary>
            Description of PitchSet.
            </summary>
        </member>
        <member name="T:Accord.Music.Scales.ScaleDegree">
            <summary>
            Description of ScaleDegree.
            </summary>
        </member>
        <member name="T:Accord.Music.NoteName">
            <summary>
              Note names for the (seven-note) diatonic major scale.
            </summary>
            <remarks>
              The enum values are the distance between the note and C in
              semitones. The  Diatonic Major Scale is do-re-mi-fa-so-la-si-(do).
            </remarks>
        </member>
        <member name="T:Accord.Music.Note">
            <summary>
              Musical Note
            </summary>
        </member>
        <member name="M:Accord.Music.Note.#ctor(System.Int32)">
            <summary>
              Constructs a new note.
            </summary>
            <param name="integer">The integer notation value for the note.</param>
        </member>
        <member name="M:Accord.Music.Note.GetPitch">
            <summary>
              Gets the note's pitch in the default octave.
            </summary>
        </member>
        <member name="M:Accord.Music.Note.GetPitch(System.Int32)">
            <summary>
              Gets the note's pitch in a given octave.
            </summary>
            <param name="octave">The pitch octave.</param>
        </member>
        <member name="M:Accord.Music.Note.Equals(System.Object)">
            <summary>
              Compares if the note has the same letter-name,
              and accidental, disregarding any enharmonic
              equivalence information, as another object.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns></returns>
        </member>
        <member name="M:Accord.Music.Note.Equals(Accord.Music.Note)">
            <summary>
              Compares if the note has the same letter-name,
              and accidental, disregarding any enharmonic
              equivalence information, as another note.
            </summary>
            <param name="note">The note to be compared.</param>
            <returns>Returns true if the two are equal, false otherwise.</returns>
        </member>
        <member name="M:Accord.Music.Note.EnharmonicEquals(Accord.Music.Note)">
            <summary>
              Compares if the notes are enharmonic equivalents,
              having the same pitch despite having different names.
            </summary>
            <param name="note">The note to be compared.</param>
            <returns>Returns true if the two are equivalent, false otherwise.</returns>
        </member>
        <member name="P:Accord.Music.Note.Class">
            <summary>
              Gets the value of the note in integer notation.
            </summary>
        </member>
        <member name="T:Accord.Music.IntervalClass">
            <summary>
              Interval Class
            </summary>
            <remarks>
              In musical set theory, an interval class is the shortest distance
              in pitch class space between two unordered pitch classes. 
            </remarks>
        </member>
        <member name="T:Accord.Music.StandardKeySignature">
            <summary>
              Standard Key Signature
            </summary>
            <remarks>
              Unlike the KeySignature class, this class is associated with
              a particular key.
            </remarks>
        </member>
        <member name="T:Accord.Music.KeySignature">
            <summary>
              A series of sharp or flat symbols placed on the staff.
            </summary>
            <remarks>
              A key signature is a series of sharp or flat symbols placed on
              the staff, designating notes that are to be consistently played
              one semitone higher or lower than the equivalent natural notes
              unless otherwise altered with an accidental.
            </remarks>
        </member>
        <member name="P:Accord.Music.KeySignature.Item(Accord.Music.NoteName)">
            <summary>
              Gets the accidental designated for a note by this signature.
            </summary>
        </member>
        <member name="T:Accord.Music.Duration">
            <summary>
              Note time durations
            </summary>
        </member>
        <member name="F:Accord.Music.Duration.Longa">
            <summary>Longa</summary>
        </member>
        <member name="F:Accord.Music.Duration.Breve">
            <summary>Breve</summary>
        </member>
        <member name="F:Accord.Music.Duration.Semibreve">
            <summary>Whole note</summary>
        </member>
        <member name="F:Accord.Music.Duration.Minin">
            <summary>Half note</summary>
        </member>
        <member name="F:Accord.Music.Duration.Crotchet">
            <summary>Quarter note</summary>
        </member>
        <member name="F:Accord.Music.Duration.Quaver">
            <summary>Eighth note</summary>
        </member>
        <member name="F:Accord.Music.Duration.Semiquaver">
            <summary>Sixteenth note</summary>
        </member>
        <member name="F:Accord.Music.Duration.Demisemiquaver">
            <summary>Thirty-second note</summary>
        </member>
        <member name="F:Accord.Music.Duration.Hemidemisemiquaver">
            <summary>Sixty-fourth note</summary>
        </member>
        <member name="F:Accord.Music.Duration.Quasihemidemisemiquaver">
            <summary>One-hundred-twenty-eighth note</summary>
        </member>
        <member name="T:Accord.Music.TimeSignature">
            <summary>
            Description of TimeSignature.
            
            </summary>
            <remarks>
            Currently only supports rational signatures.
            </remarks>
        </member>
        <member name="T:Accord.Music.Notation.Staff">
            <summary>
              Description of Staff.
            </summary>
        </member>
        <member name="T:Accord.Music.Clef">
            <summary>
              A clef is a musical symbol used to indicate the pitch of written notes.
            </summary>
            <remarks>
              Placed on one of the lines at the beginning of the staff, it indicates
              the name and pitch of the notes on that line. This line serves as a
              reference point by which the names of the notes on any other line or
              space of the staff may be determined.
            </remarks>
        </member>
        <member name="M:Accord.Music.Clef.#ctor(System.String,Accord.Music.Pitch,System.Int32)">
            <summary>
              Constructs a new Clef.
            </summary>
            <param name="name">The name of the Clef.</param>
            <param name="pitch">The pitch associated with the Clef.</param>
            <param name="line">The reference line in where the associated pitch is located.</param>
        </member>
        <member name="M:Accord.Music.Clef.#ctor(System.String,System.String,System.Int32)">
            <summary>
              Constructs a new Clef.
            </summary>
            <param name="name">The name of the Clef.</param>
            <param name="pitch">The pitch associated with the Clef.</param>
            <param name="line">The reference line in where the associated pitch is located.</param>
        </member>
        <member name="F:Accord.Music.Clef.Treble">
            <summary>
              The Treble G-Clef.
            </summary>
        </member>
        <member name="F:Accord.Music.Clef.Bass">
            <summary>
              The Bass F-Clef.
            </summary>
        </member>
        <member name="F:Accord.Music.Clef.Alto">
            <summary>
              The Alto C-Clef.
            </summary>
        </member>
        <member name="F:Accord.Music.Clef.Tenor">
            <summary>
              The Tenor C-Clef.
            </summary>
        </member>
        <member name="F:Accord.Music.Clef.Neutral">
            <summary>
              The Neutral (percussion) Clef.
            </summary>
        </member>
        <member name="P:Accord.Music.Clef.Name">
            <summary>
              Gets the name for the Clef.
            </summary>
        </member>
        <member name="P:Accord.Music.Clef.Pitch">
            <summary>
              Gets the pitch of the reference line.
            </summary>
        </member>
        <member name="P:Accord.Music.Clef.Line">
            <summary>
              Gets the reference line for the pitch associated with this Clef.
            </summary>
        </member>
        <member name="T:Accord.Music.IntervalName">
            <summary>
              Simple diatonic interval names.
            </summary>
            <remarks>
              The interval name is given by the difference between
              two noter names, without considering the distance in
              semitones.
            </remarks>
        </member>
        <member name="T:Accord.Music.IntervalQuality">
            <summary>
              Interval qualifiers.
            </summary>
        </member>
        <member name="T:Accord.Music.Interval">
            <summary>
              Description of Interval.
            </summary>
            <remarks>
              http://www.knowledgerush.com/kr/encyclopedia/Interval_(music)/
            </remarks>
        </member>
        <member name="M:Accord.Music.Interval.#ctor(System.String)">
            <summary>
              Intervals are often abbreviated with a P for perfect,
              m for minor, M for major, d for diminished, A for
              augmented, followed by the diatonic interval number.
              The indication M and P are often omitted. The octave
              is P8, and a unison is usually referred to simply as
              "a unison" but can be labeled P1. The tritone, an
              augmented fourth or diminished fifth is often π or TT.
            </summary>
            <remarks>
              Examples: m1, m2, M3, TT, P8, A4, T, S, H, W, 1, 2, 3
            </remarks>
            <param name="name"></param>
        </member>
        <member name="P:Accord.Music.Interval.Name">
            <summary>
              Gets the simple diatonic interval name.
            </summary>
        </member>
        <member name="P:Accord.Music.Interval.Quality">
            <summary>
              Gets the interval quality.
            </summary>
        </member>
        <member name="T:Accord.Music.Sets.IntervalSet">
            <summary>
              Interval Set
            </summary>
        </member>
        <member name="T:Accord.Music.PitchClass">
            <summary>
              A pitch class is a set of all pitches that are a whole
              number of octaves apart, e.g., the pitch class C consists
              of the Cs in all octaves.
            </summary>
            <remarks>
              In standard Western equal temperament, distinct spellings can
              refer to the same sounding object: B#3, C4, and D4 all refer to
              the same pitch, hence share the same chroma, and therefore belong
              to the same pitch class; a phenomenon called enharmonic equivalence.
            </remarks>
        </member>
        <member name="M:Accord.Music.PitchClass.#ctor(Accord.Music.Note)">
            <summary>
              Constructs a new pitch class.
            </summary>
            <param name="note">The base note for the class.</param>
        </member>
        <member name="M:Accord.Music.PitchClass.#ctor(System.Int32)">
            <summary>
              Constructs a new pitch class
            </summary>
            <param name="label">The class label.</param>
        </member>
        <member name="P:Accord.Music.PitchClass.Label">
            <summary>
              Gets the integer label for the pitch class.
            </summary>
        </member>
        <member name="P:Accord.Music.PitchClass.Enharmonics">
            <summary>
              The base note for the pitch class.
            </summary>
        </member>
        <member name="T:Accord.Music.Notation.Measure">
            <summary>
              Measure
            </summary>
        </member>
        <member name="T:Accord.Music.Pitch">
            <summary>
              Represents a pitch in Scientific Pitch Notation.
            </summary>
            <remarks>
              Scientific pitch notation is one of several methods that name
              the notes of the standard Western chromatic scale by combining
              a letter-name, accidentals, and a number identifying the pitch's
              octave.
            </remarks>
        </member>
        <member name="M:Accord.Music.Pitch.#ctor(Accord.Music.NoteName,Accord.Music.Accidental,System.Int32)">
            <summary>
              Constructs a new pitch.
            </summary>
            <param name="name">The letter-name for the pitch.</param>
            <param name="accidental">The accidental for the pitch.</param>
            <param name="octave">The octave for the pitch.</param>
        </member>
        <member name="M:Accord.Music.Pitch.#ctor(Accord.Music.NoteName,System.Int32)">
            <summary>
              Constructs a new pitch. Default accidental is none.
            </summary>
            <param name="name">The letter-name for the pitch.</param>
            <param name="octave">The octave for the pitch.</param>
        </member>
        <member name="M:Accord.Music.Pitch.#ctor(Accord.Music.PitchClass,System.Int32)">
            <summary>
              Constructs a new pitch.
            </summary>
            <param name="pitchClass">The pitch class for the pitch.</param>
            <param name="octave">The octave for the pitch.</param>
        </member>
        <member name="M:Accord.Music.Pitch.#ctor(System.Int32)">
            <summary>
              Constructs a new pitch.
            </summary>
            <param name="noteNumber">
              The number of semitones starting from C(-1) that identifies
            the pitch in the MIDI system.
            </param>
        </member>
        <member name="M:Accord.Music.Pitch.#ctor(System.Double)">
            <summary>
              Constructs a new pitch.
            </summary>
            <param name="frequency">The frequency for the pitch.</param>
        </member>
        <member name="M:Accord.Music.Pitch.#ctor(System.String)">
            <summary>
              Constructs a new pitch.
            </summary>
            <param name="name">
              The text symbol for the pitch.
              i.e.: C#1, Db3, G5, A##97, Ab-73
            </param>
        </member>
        <member name="M:Accord.Music.Pitch.Equals(System.Object)">
            <summary>
              Compares if the pitch has the same letter-name,
              accidental and octave, disregarding enharmonic
              equivalence information, as another object.
            </summary>
            <param name="obj">The object to compare.</param>
            <returns></returns>
        </member>
        <member name="M:Accord.Music.Pitch.EnharmonicEquals(Accord.Music.Pitch)">
            <summary>
              Compares if the pitch is enharmonically equivalent
              to another pitch.
            </summary>
            <param name="pitch">The pitch to be compared.</param>
            <returns>Returns true if the two are equivalent, false otherwise.</returns>
        </member>
        <member name="M:Accord.Music.Pitch.Equals(Accord.Music.Pitch)">
            <summary>
              Compares if the pitch has the same letter-name,
              accidental and octave, disregarding enharmonic
              equivalence information, as another object.
            </summary>
            <param name="pitch">The pitch to be compared.</param>
            <returns>Returns true if the two are equivalent, false otherwise.</returns>
        </member>
        <member name="M:Accord.Music.Pitch.EnharmonicCompareTo(Accord.Music.Pitch)">
            <summary>
              Compares if the pitch is enharmonically equivalent
              to another pitch.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="P:Accord.Music.Pitch.Octave">
            <summary>
              Gets or sets the octave for the pitch.
            </summary>
        </member>
        <member name="P:Accord.Music.Pitch.Note">
            <summary>
              Gets the note for this pitch.
            </summary>
        </member>
        <member name="P:Accord.Music.Pitch.Class">
            <summary>
              Gets the pitch's class.
            </summary>
        </member>
        <member name="P:Accord.Music.Pitch.Frequency">
             <summary>
               Gets or sets a pitch frequency. Octave, letter-name,
               and accidentals will change automatically to reflect
               the new frequency.
             </summary>
             <remarks>
               The basic formula for the frequencies of the
               notes of the equal tempered scale is given by
            
                 fn = f0 * (a)^n			where:
             
            	    f0 = the frequency of one fixed note which must be
                      defined. A common choice is setting the A above
                      middle C (A4) at f0 = 440 Hz.
                  n = the number of half steps away from the fixed note
                      you are. If you are at a higher note, n is positive.
                      If you are on a lower note, n is negative.
                 fn = the frequency of the note n half steps away.
                  a = (2)^1/12 = the twelth root of 2 = the number which
                             when multiplied by itself 12 times equals 2 = 1.059463094359...
             </remarks>
        </member>
        <member name="P:Accord.Music.Pitch.Distance">
            <summary>
              The negative or positive distance, in semitones,
              from middle C (C4).
            </summary>
        </member>
        <member name="P:Accord.Music.Pitch.Number">
            <summary>
              The MIDI number for the pitch.
            </summary>
            <remarks>
              The MIDI number is the distance from C(-1)
              and identifies pitches without considering
              any information about enharmonics equivalents.
            </remarks>
        </member>
        <member name="T:Accord.Music.NoteSign">
            <summary>
              Musical note notation sign
            </summary>
            <remarks>
              In standard notation, a single musical sound is written as
              a note. The two most important things a written piece of
              music needs to tell you about a note are its pitch - how
              high or low it is - and its duration - how long it lasts.
            </remarks>
        </member>
        <member name="M:Accord.Music.NoteSign.#ctor(Accord.Music.Note,Accord.Music.Duration)">
            <summary>
              Constructs a new note sign.
            </summary>
            <param name="note">The note value.</param>
            <param name="duration">The note duration.</param>
        </member>
        <member name="M:Accord.Music.NoteSign.#ctor(System.String,Accord.Music.Duration)">
            <summary>
              Constructs a new note sign.
            </summary>
            <param name="note">The note value.</param>
            <param name="duration">The note duration.</param>
        </member>
        <member name="M:Accord.Music.NoteSign.#ctor(Accord.Music.Duration)">
            <summary>
              Constructs a new rest sign.
            </summary>
            <param name="duration">The sign duration.</param>
        </member>
        <member name="M:Accord.Music.NoteSign.Rest(Accord.Music.Duration)">
            <summary>
              Named constructor for a new rest sign.
            </summary>
            <param name="value">The sign duration.</param>
        </member>
        <member name="P:Accord.Music.NoteSign.Pitch">
            <summary>
              Gets or sets the pitch of the note.
            </summary>
            <remarks>
              The pitch contains information about note, octave and frequency.
            </remarks>
        </member>
        <member name="P:Accord.Music.NoteSign.Value">
            <summary>
              Gets or sets the duration of the note.
            </summary>
        </member>
        <member name="P:Accord.Music.NoteSign.Augmentation">
            <summary>
              Gets or sets the current number of duration
              augmentation dots for the note.
            </summary>
        </member>
        <member name="P:Accord.Music.NoteSign.IsRest">
            <summary>
              Gets a value indicating if the sign is a rest.
            </summary>
        </member>
        <member name="P:Accord.Music.NoteSign.Duration">
            <summary>
              Computes the actual duration for the note
              considering the augmentation effects.
            </summary>
        </member>
    </members>
</doc>
