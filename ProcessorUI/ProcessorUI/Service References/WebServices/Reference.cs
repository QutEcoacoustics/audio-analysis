//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProcessorUI.WebServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Processor.JobItemDescription", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ProcessorJobItemDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AudioReadingUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProcessorUI.WebServices.ProcessorJobDescription JobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MimeTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AudioReadingUrl {
            get {
                return this.AudioReadingUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AudioReadingUrlField, value) != true)) {
                    this.AudioReadingUrlField = value;
                    this.RaisePropertyChanged("AudioReadingUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProcessorUI.WebServices.ProcessorJobDescription Job {
            get {
                return this.JobField;
            }
            set {
                if ((object.ReferenceEquals(this.JobField, value) != true)) {
                    this.JobField = value;
                    this.RaisePropertyChanged("Job");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobItemID {
            get {
                return this.JobItemIDField;
            }
            set {
                if ((this.JobItemIDField.Equals(value) != true)) {
                    this.JobItemIDField = value;
                    this.RaisePropertyChanged("JobItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MimeType {
            get {
                return this.MimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MimeTypeField, value) != true)) {
                    this.MimeTypeField = value;
                    this.RaisePropertyChanged("MimeType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Processor.JobDescription", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ProcessorJobDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ParametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobID {
            get {
                return this.JobIDField;
            }
            set {
                if ((this.JobIDField.Equals(value) != true)) {
                    this.JobIDField = value;
                    this.RaisePropertyChanged("JobID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Processor.JobItemResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ProcessorJobItemResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> BestScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> BestScoreLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfHitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StopField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BestScore {
            get {
                return this.BestScoreField;
            }
            set {
                if ((this.BestScoreField.Equals(value) != true)) {
                    this.BestScoreField = value;
                    this.RaisePropertyChanged("BestScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> BestScoreLocation {
            get {
                return this.BestScoreLocationField;
            }
            set {
                if ((this.BestScoreLocationField.Equals(value) != true)) {
                    this.BestScoreLocationField = value;
                    this.RaisePropertyChanged("BestScoreLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfHits {
            get {
                return this.NumberOfHitsField;
            }
            set {
                if ((this.NumberOfHitsField.Equals(value) != true)) {
                    this.NumberOfHitsField = value;
                    this.RaisePropertyChanged("NumberOfHits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Stop {
            get {
                return this.StopField;
            }
            set {
                if ((this.StopField.Equals(value) != true)) {
                    this.StopField = value;
                    this.RaisePropertyChanged("Stop");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="sensor.mquter.qut.edu.au", ConfigurationName="WebServices.Processor")]
    public interface Processor {
        
        [System.ServiceModel.OperationContractAttribute(Action="sensor.mquter.qut.edu.au/Processor/GetJobItem", ReplyAction="sensor.mquter.qut.edu.au/Processor/GetJobItemResponse")]
        ProcessorUI.WebServices.ProcessorJobItemDescription GetJobItem(string worker);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="sensor.mquter.qut.edu.au/Processor/GetJobItem", ReplyAction="sensor.mquter.qut.edu.au/Processor/GetJobItemResponse")]
        System.IAsyncResult BeginGetJobItem(string worker, System.AsyncCallback callback, object asyncState);
        
        ProcessorUI.WebServices.ProcessorJobItemDescription EndGetJobItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="sensor.mquter.qut.edu.au/Processor/SubmitResults", ReplyAction="sensor.mquter.qut.edu.au/Processor/SubmitResultsResponse")]
        void SubmitResults(string worker, int jobItemID, ProcessorUI.WebServices.ProcessorJobItemResult[] results);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="sensor.mquter.qut.edu.au/Processor/SubmitResults", ReplyAction="sensor.mquter.qut.edu.au/Processor/SubmitResultsResponse")]
        System.IAsyncResult BeginSubmitResults(string worker, int jobItemID, ProcessorUI.WebServices.ProcessorJobItemResult[] results, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitResults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="sensor.mquter.qut.edu.au/Processor/ReturnJob", ReplyAction="sensor.mquter.qut.edu.au/Processor/ReturnJobResponse")]
        void ReturnJob(string worker, int jobItemID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="sensor.mquter.qut.edu.au/Processor/ReturnJob", ReplyAction="sensor.mquter.qut.edu.au/Processor/ReturnJobResponse")]
        System.IAsyncResult BeginReturnJob(string worker, int jobItemID, System.AsyncCallback callback, object asyncState);
        
        void EndReturnJob(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="sensor.mquter.qut.edu.au/Processor/ReturnJobWithError", ReplyAction="sensor.mquter.qut.edu.au/Processor/ReturnJobWithErrorResponse")]
        void ReturnJobWithError(string worker, int jobItemID, string errorDetails);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="sensor.mquter.qut.edu.au/Processor/ReturnJobWithError", ReplyAction="sensor.mquter.qut.edu.au/Processor/ReturnJobWithErrorResponse")]
        System.IAsyncResult BeginReturnJobWithError(string worker, int jobItemID, string errorDetails, System.AsyncCallback callback, object asyncState);
        
        void EndReturnJobWithError(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ProcessorChannel : ProcessorUI.WebServices.Processor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetJobItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetJobItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ProcessorUI.WebServices.ProcessorJobItemDescription Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ProcessorUI.WebServices.ProcessorJobItemDescription)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProcessorClient : System.ServiceModel.ClientBase<ProcessorUI.WebServices.Processor>, ProcessorUI.WebServices.Processor {
        
        private BeginOperationDelegate onBeginGetJobItemDelegate;
        
        private EndOperationDelegate onEndGetJobItemDelegate;
        
        private System.Threading.SendOrPostCallback onGetJobItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitResultsDelegate;
        
        private EndOperationDelegate onEndSubmitResultsDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitResultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnJobDelegate;
        
        private EndOperationDelegate onEndReturnJobDelegate;
        
        private System.Threading.SendOrPostCallback onReturnJobCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnJobWithErrorDelegate;
        
        private EndOperationDelegate onEndReturnJobWithErrorDelegate;
        
        private System.Threading.SendOrPostCallback onReturnJobWithErrorCompletedDelegate;
        
        public ProcessorClient() {
        }
        
        public ProcessorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProcessorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetJobItemCompletedEventArgs> GetJobItemCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitResultsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReturnJobCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReturnJobWithErrorCompleted;
        
        public ProcessorUI.WebServices.ProcessorJobItemDescription GetJobItem(string worker) {
            return base.Channel.GetJobItem(worker);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetJobItem(string worker, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetJobItem(worker, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public ProcessorUI.WebServices.ProcessorJobItemDescription EndGetJobItem(System.IAsyncResult result) {
            return base.Channel.EndGetJobItem(result);
        }
        
        private System.IAsyncResult OnBeginGetJobItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string worker = ((string)(inValues[0]));
            return this.BeginGetJobItem(worker, callback, asyncState);
        }
        
        private object[] OnEndGetJobItem(System.IAsyncResult result) {
            ProcessorUI.WebServices.ProcessorJobItemDescription retVal = this.EndGetJobItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetJobItemCompleted(object state) {
            if ((this.GetJobItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetJobItemCompleted(this, new GetJobItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetJobItemAsync(string worker) {
            this.GetJobItemAsync(worker, null);
        }
        
        public void GetJobItemAsync(string worker, object userState) {
            if ((this.onBeginGetJobItemDelegate == null)) {
                this.onBeginGetJobItemDelegate = new BeginOperationDelegate(this.OnBeginGetJobItem);
            }
            if ((this.onEndGetJobItemDelegate == null)) {
                this.onEndGetJobItemDelegate = new EndOperationDelegate(this.OnEndGetJobItem);
            }
            if ((this.onGetJobItemCompletedDelegate == null)) {
                this.onGetJobItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetJobItemCompleted);
            }
            base.InvokeAsync(this.onBeginGetJobItemDelegate, new object[] {
                        worker}, this.onEndGetJobItemDelegate, this.onGetJobItemCompletedDelegate, userState);
        }
        
        public void SubmitResults(string worker, int jobItemID, ProcessorUI.WebServices.ProcessorJobItemResult[] results) {
            base.Channel.SubmitResults(worker, jobItemID, results);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitResults(string worker, int jobItemID, ProcessorUI.WebServices.ProcessorJobItemResult[] results, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitResults(worker, jobItemID, results, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSubmitResults(System.IAsyncResult result) {
            base.Channel.EndSubmitResults(result);
        }
        
        private System.IAsyncResult OnBeginSubmitResults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string worker = ((string)(inValues[0]));
            int jobItemID = ((int)(inValues[1]));
            ProcessorUI.WebServices.ProcessorJobItemResult[] results = ((ProcessorUI.WebServices.ProcessorJobItemResult[])(inValues[2]));
            return this.BeginSubmitResults(worker, jobItemID, results, callback, asyncState);
        }
        
        private object[] OnEndSubmitResults(System.IAsyncResult result) {
            this.EndSubmitResults(result);
            return null;
        }
        
        private void OnSubmitResultsCompleted(object state) {
            if ((this.SubmitResultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitResultsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitResultsAsync(string worker, int jobItemID, ProcessorUI.WebServices.ProcessorJobItemResult[] results) {
            this.SubmitResultsAsync(worker, jobItemID, results, null);
        }
        
        public void SubmitResultsAsync(string worker, int jobItemID, ProcessorUI.WebServices.ProcessorJobItemResult[] results, object userState) {
            if ((this.onBeginSubmitResultsDelegate == null)) {
                this.onBeginSubmitResultsDelegate = new BeginOperationDelegate(this.OnBeginSubmitResults);
            }
            if ((this.onEndSubmitResultsDelegate == null)) {
                this.onEndSubmitResultsDelegate = new EndOperationDelegate(this.OnEndSubmitResults);
            }
            if ((this.onSubmitResultsCompletedDelegate == null)) {
                this.onSubmitResultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitResultsCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitResultsDelegate, new object[] {
                        worker,
                        jobItemID,
                        results}, this.onEndSubmitResultsDelegate, this.onSubmitResultsCompletedDelegate, userState);
        }
        
        public void ReturnJob(string worker, int jobItemID) {
            base.Channel.ReturnJob(worker, jobItemID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReturnJob(string worker, int jobItemID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnJob(worker, jobItemID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndReturnJob(System.IAsyncResult result) {
            base.Channel.EndReturnJob(result);
        }
        
        private System.IAsyncResult OnBeginReturnJob(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string worker = ((string)(inValues[0]));
            int jobItemID = ((int)(inValues[1]));
            return this.BeginReturnJob(worker, jobItemID, callback, asyncState);
        }
        
        private object[] OnEndReturnJob(System.IAsyncResult result) {
            this.EndReturnJob(result);
            return null;
        }
        
        private void OnReturnJobCompleted(object state) {
            if ((this.ReturnJobCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnJobAsync(string worker, int jobItemID) {
            this.ReturnJobAsync(worker, jobItemID, null);
        }
        
        public void ReturnJobAsync(string worker, int jobItemID, object userState) {
            if ((this.onBeginReturnJobDelegate == null)) {
                this.onBeginReturnJobDelegate = new BeginOperationDelegate(this.OnBeginReturnJob);
            }
            if ((this.onEndReturnJobDelegate == null)) {
                this.onEndReturnJobDelegate = new EndOperationDelegate(this.OnEndReturnJob);
            }
            if ((this.onReturnJobCompletedDelegate == null)) {
                this.onReturnJobCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnJobCompleted);
            }
            base.InvokeAsync(this.onBeginReturnJobDelegate, new object[] {
                        worker,
                        jobItemID}, this.onEndReturnJobDelegate, this.onReturnJobCompletedDelegate, userState);
        }
        
        public void ReturnJobWithError(string worker, int jobItemID, string errorDetails) {
            base.Channel.ReturnJobWithError(worker, jobItemID, errorDetails);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReturnJobWithError(string worker, int jobItemID, string errorDetails, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnJobWithError(worker, jobItemID, errorDetails, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndReturnJobWithError(System.IAsyncResult result) {
            base.Channel.EndReturnJobWithError(result);
        }
        
        private System.IAsyncResult OnBeginReturnJobWithError(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string worker = ((string)(inValues[0]));
            int jobItemID = ((int)(inValues[1]));
            string errorDetails = ((string)(inValues[2]));
            return this.BeginReturnJobWithError(worker, jobItemID, errorDetails, callback, asyncState);
        }
        
        private object[] OnEndReturnJobWithError(System.IAsyncResult result) {
            this.EndReturnJobWithError(result);
            return null;
        }
        
        private void OnReturnJobWithErrorCompleted(object state) {
            if ((this.ReturnJobWithErrorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnJobWithErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnJobWithErrorAsync(string worker, int jobItemID, string errorDetails) {
            this.ReturnJobWithErrorAsync(worker, jobItemID, errorDetails, null);
        }
        
        public void ReturnJobWithErrorAsync(string worker, int jobItemID, string errorDetails, object userState) {
            if ((this.onBeginReturnJobWithErrorDelegate == null)) {
                this.onBeginReturnJobWithErrorDelegate = new BeginOperationDelegate(this.OnBeginReturnJobWithError);
            }
            if ((this.onEndReturnJobWithErrorDelegate == null)) {
                this.onEndReturnJobWithErrorDelegate = new EndOperationDelegate(this.OnEndReturnJobWithError);
            }
            if ((this.onReturnJobWithErrorCompletedDelegate == null)) {
                this.onReturnJobWithErrorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnJobWithErrorCompleted);
            }
            base.InvokeAsync(this.onBeginReturnJobWithErrorDelegate, new object[] {
                        worker,
                        jobItemID,
                        errorDetails}, this.onEndReturnJobWithErrorDelegate, this.onReturnJobWithErrorCompletedDelegate, userState);
        }
    }
}
