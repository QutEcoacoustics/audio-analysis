//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4005
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QutSensors.Processor.ProcessorService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="sensor.mquter.qut.edu.au", ConfigurationName="ProcessorService.ProcessorService")]
    public interface ProcessorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="sensor.mquter.qut.edu.au/ProcessorService/GetWorkItem", ReplyAction="sensor.mquter.qut.edu.au/ProcessorService/GetWorkItemResponse")]
        QutSensors.Processor.ProcessorService.GetWorkItemResponse GetWorkItem(QutSensors.Processor.ProcessorService.GetWorkItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="sensor.mquter.qut.edu.au/ProcessorService/GetWorkItem", ReplyAction="sensor.mquter.qut.edu.au/ProcessorService/GetWorkItemResponse")]
        System.IAsyncResult BeginGetWorkItem(QutSensors.Processor.ProcessorService.GetWorkItemRequest request, System.AsyncCallback callback, object asyncState);
        
        QutSensors.Processor.ProcessorService.GetWorkItemResponse EndGetWorkItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="sensor.mquter.qut.edu.au/ProcessorService/GetWorkItems", ReplyAction="sensor.mquter.qut.edu.au/ProcessorService/GetWorkItemsResponse")]
        QutSensors.Processor.ProcessorService.GetWorkItemsResponse GetWorkItems(QutSensors.Processor.ProcessorService.GetWorkItemsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="sensor.mquter.qut.edu.au/ProcessorService/GetWorkItems", ReplyAction="sensor.mquter.qut.edu.au/ProcessorService/GetWorkItemsResponse")]
        System.IAsyncResult BeginGetWorkItems(QutSensors.Processor.ProcessorService.GetWorkItemsRequest request, System.AsyncCallback callback, object asyncState);
        
        QutSensors.Processor.ProcessorService.GetWorkItemsResponse EndGetWorkItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="sensor.mquter.qut.edu.au/ProcessorService/ReturnWorkItemIncomplete", ReplyAction="sensor.mquter.qut.edu.au/ProcessorService/ReturnWorkItemIncompleteResponse")]
        QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteResponse ReturnWorkItemIncomplete(QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="sensor.mquter.qut.edu.au/ProcessorService/ReturnWorkItemIncomplete", ReplyAction="sensor.mquter.qut.edu.au/ProcessorService/ReturnWorkItemIncompleteResponse")]
        System.IAsyncResult BeginReturnWorkItemIncomplete(QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteRequest request, System.AsyncCallback callback, object asyncState);
        
        QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteResponse EndReturnWorkItemIncomplete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="sensor.mquter.qut.edu.au/ProcessorService/ReturnWorkItemComplete", ReplyAction="sensor.mquter.qut.edu.au/ProcessorService/ReturnWorkItemCompleteResponse")]
        QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteResponse ReturnWorkItemComplete(QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="sensor.mquter.qut.edu.au/ProcessorService/ReturnWorkItemComplete", ReplyAction="sensor.mquter.qut.edu.au/ProcessorService/ReturnWorkItemCompleteResponse")]
        System.IAsyncResult BeginReturnWorkItemComplete(QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteRequest request, System.AsyncCallback callback, object asyncState);
        
        QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteResponse EndReturnWorkItemComplete(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkItem", WrapperNamespace="sensor.mquter.qut.edu.au", IsWrapped=true)]
    public partial class GetWorkItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=0)]
        public string workerName;
        
        public GetWorkItemRequest() {
        }
        
        public GetWorkItemRequest(string workerName) {
            this.workerName = workerName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkItemResponse", WrapperNamespace="sensor.mquter.qut.edu.au", IsWrapped=true)]
    public partial class GetWorkItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=0)]
        public QutSensors.Shared.AnalysisWorkItem GetWorkItemResult;
        
        public GetWorkItemResponse() {
        }
        
        public GetWorkItemResponse(QutSensors.Shared.AnalysisWorkItem GetWorkItemResult) {
            this.GetWorkItemResult = GetWorkItemResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkItems", WrapperNamespace="sensor.mquter.qut.edu.au", IsWrapped=true)]
    public partial class GetWorkItemsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=0)]
        public string workerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=1)]
        public int maxItems;
        
        public GetWorkItemsRequest() {
        }
        
        public GetWorkItemsRequest(string workerName, int maxItems) {
            this.workerName = workerName;
            this.maxItems = maxItems;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWorkItemsResponse", WrapperNamespace="sensor.mquter.qut.edu.au", IsWrapped=true)]
    public partial class GetWorkItemsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=0)]
        public System.Collections.Generic.List<QutSensors.Shared.AnalysisWorkItem> GetWorkItemsResult;
        
        public GetWorkItemsResponse() {
        }
        
        public GetWorkItemsResponse(System.Collections.Generic.List<QutSensors.Shared.AnalysisWorkItem> GetWorkItemsResult) {
            this.GetWorkItemsResult = GetWorkItemsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnWorkItemIncomplete", WrapperNamespace="sensor.mquter.qut.edu.au", IsWrapped=true)]
    public partial class ReturnWorkItemIncompleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=0)]
        public string workerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=1)]
        public int jobItemId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=2)]
        public string itemRunDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=3)]
        public bool errorOccurred;
        
        public ReturnWorkItemIncompleteRequest() {
        }
        
        public ReturnWorkItemIncompleteRequest(string workerName, int jobItemId, string itemRunDetails, bool errorOccurred) {
            this.workerName = workerName;
            this.jobItemId = jobItemId;
            this.itemRunDetails = itemRunDetails;
            this.errorOccurred = errorOccurred;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnWorkItemIncompleteResponse", WrapperNamespace="sensor.mquter.qut.edu.au", IsWrapped=true)]
    public partial class ReturnWorkItemIncompleteResponse {
        
        public ReturnWorkItemIncompleteResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnWorkItemComplete", WrapperNamespace="sensor.mquter.qut.edu.au", IsWrapped=true)]
    public partial class ReturnWorkItemCompleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=0)]
        public string workerName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=1)]
        public int jobItemId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=2)]
        public string itemRunDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="sensor.mquter.qut.edu.au", Order=3)]
        public System.Collections.Generic.List<QutSensors.Shared.ProcessorResultTag> results;
        
        public ReturnWorkItemCompleteRequest() {
        }
        
        public ReturnWorkItemCompleteRequest(string workerName, int jobItemId, string itemRunDetails, System.Collections.Generic.List<QutSensors.Shared.ProcessorResultTag> results) {
            this.workerName = workerName;
            this.jobItemId = jobItemId;
            this.itemRunDetails = itemRunDetails;
            this.results = results;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnWorkItemCompleteResponse", WrapperNamespace="sensor.mquter.qut.edu.au", IsWrapped=true)]
    public partial class ReturnWorkItemCompleteResponse {
        
        public ReturnWorkItemCompleteResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface ProcessorServiceChannel : QutSensors.Processor.ProcessorService.ProcessorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetWorkItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWorkItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QutSensors.Processor.ProcessorService.GetWorkItemResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QutSensors.Processor.ProcessorService.GetWorkItemResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetWorkItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWorkItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QutSensors.Processor.ProcessorService.GetWorkItemsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QutSensors.Processor.ProcessorService.GetWorkItemsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ReturnWorkItemIncompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnWorkItemIncompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ReturnWorkItemCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReturnWorkItemCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ProcessorServiceClient : System.ServiceModel.ClientBase<QutSensors.Processor.ProcessorService.ProcessorService>, QutSensors.Processor.ProcessorService.ProcessorService {
        
        private BeginOperationDelegate onBeginGetWorkItemDelegate;
        
        private EndOperationDelegate onEndGetWorkItemDelegate;
        
        private System.Threading.SendOrPostCallback onGetWorkItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWorkItemsDelegate;
        
        private EndOperationDelegate onEndGetWorkItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetWorkItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnWorkItemIncompleteDelegate;
        
        private EndOperationDelegate onEndReturnWorkItemIncompleteDelegate;
        
        private System.Threading.SendOrPostCallback onReturnWorkItemIncompleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginReturnWorkItemCompleteDelegate;
        
        private EndOperationDelegate onEndReturnWorkItemCompleteDelegate;
        
        private System.Threading.SendOrPostCallback onReturnWorkItemCompleteCompletedDelegate;
        
        public ProcessorServiceClient() {
        }
        
        public ProcessorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProcessorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProcessorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetWorkItemCompletedEventArgs> GetWorkItemCompleted;
        
        public event System.EventHandler<GetWorkItemsCompletedEventArgs> GetWorkItemsCompleted;
        
        public event System.EventHandler<ReturnWorkItemIncompleteCompletedEventArgs> ReturnWorkItemIncompleteCompleted;
        
        public event System.EventHandler<ReturnWorkItemCompleteCompletedEventArgs> ReturnWorkItemCompleteCompleted;
        
        public QutSensors.Processor.ProcessorService.GetWorkItemResponse GetWorkItem(QutSensors.Processor.ProcessorService.GetWorkItemRequest request) {
            return base.Channel.GetWorkItem(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetWorkItem(QutSensors.Processor.ProcessorService.GetWorkItemRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWorkItem(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QutSensors.Processor.ProcessorService.GetWorkItemResponse EndGetWorkItem(System.IAsyncResult result) {
            return base.Channel.EndGetWorkItem(result);
        }
        
        private System.IAsyncResult OnBeginGetWorkItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QutSensors.Processor.ProcessorService.GetWorkItemRequest request = ((QutSensors.Processor.ProcessorService.GetWorkItemRequest)(inValues[0]));
            return this.BeginGetWorkItem(request, callback, asyncState);
        }
        
        private object[] OnEndGetWorkItem(System.IAsyncResult result) {
            QutSensors.Processor.ProcessorService.GetWorkItemResponse retVal = this.EndGetWorkItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWorkItemCompleted(object state) {
            if ((this.GetWorkItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWorkItemCompleted(this, new GetWorkItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWorkItemAsync(QutSensors.Processor.ProcessorService.GetWorkItemRequest request) {
            this.GetWorkItemAsync(request, null);
        }
        
        public void GetWorkItemAsync(QutSensors.Processor.ProcessorService.GetWorkItemRequest request, object userState) {
            if ((this.onBeginGetWorkItemDelegate == null)) {
                this.onBeginGetWorkItemDelegate = new BeginOperationDelegate(this.OnBeginGetWorkItem);
            }
            if ((this.onEndGetWorkItemDelegate == null)) {
                this.onEndGetWorkItemDelegate = new EndOperationDelegate(this.OnEndGetWorkItem);
            }
            if ((this.onGetWorkItemCompletedDelegate == null)) {
                this.onGetWorkItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWorkItemCompleted);
            }
            base.InvokeAsync(this.onBeginGetWorkItemDelegate, new object[] {
                        request}, this.onEndGetWorkItemDelegate, this.onGetWorkItemCompletedDelegate, userState);
        }
        
        public QutSensors.Processor.ProcessorService.GetWorkItemsResponse GetWorkItems(QutSensors.Processor.ProcessorService.GetWorkItemsRequest request) {
            return base.Channel.GetWorkItems(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetWorkItems(QutSensors.Processor.ProcessorService.GetWorkItemsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWorkItems(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QutSensors.Processor.ProcessorService.GetWorkItemsResponse EndGetWorkItems(System.IAsyncResult result) {
            return base.Channel.EndGetWorkItems(result);
        }
        
        private System.IAsyncResult OnBeginGetWorkItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QutSensors.Processor.ProcessorService.GetWorkItemsRequest request = ((QutSensors.Processor.ProcessorService.GetWorkItemsRequest)(inValues[0]));
            return this.BeginGetWorkItems(request, callback, asyncState);
        }
        
        private object[] OnEndGetWorkItems(System.IAsyncResult result) {
            QutSensors.Processor.ProcessorService.GetWorkItemsResponse retVal = this.EndGetWorkItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWorkItemsCompleted(object state) {
            if ((this.GetWorkItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWorkItemsCompleted(this, new GetWorkItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWorkItemsAsync(QutSensors.Processor.ProcessorService.GetWorkItemsRequest request) {
            this.GetWorkItemsAsync(request, null);
        }
        
        public void GetWorkItemsAsync(QutSensors.Processor.ProcessorService.GetWorkItemsRequest request, object userState) {
            if ((this.onBeginGetWorkItemsDelegate == null)) {
                this.onBeginGetWorkItemsDelegate = new BeginOperationDelegate(this.OnBeginGetWorkItems);
            }
            if ((this.onEndGetWorkItemsDelegate == null)) {
                this.onEndGetWorkItemsDelegate = new EndOperationDelegate(this.OnEndGetWorkItems);
            }
            if ((this.onGetWorkItemsCompletedDelegate == null)) {
                this.onGetWorkItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWorkItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetWorkItemsDelegate, new object[] {
                        request}, this.onEndGetWorkItemsDelegate, this.onGetWorkItemsCompletedDelegate, userState);
        }
        
        public QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteResponse ReturnWorkItemIncomplete(QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteRequest request) {
            return base.Channel.ReturnWorkItemIncomplete(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReturnWorkItemIncomplete(QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnWorkItemIncomplete(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteResponse EndReturnWorkItemIncomplete(System.IAsyncResult result) {
            return base.Channel.EndReturnWorkItemIncomplete(result);
        }
        
        private System.IAsyncResult OnBeginReturnWorkItemIncomplete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteRequest request = ((QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteRequest)(inValues[0]));
            return this.BeginReturnWorkItemIncomplete(request, callback, asyncState);
        }
        
        private object[] OnEndReturnWorkItemIncomplete(System.IAsyncResult result) {
            QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteResponse retVal = this.EndReturnWorkItemIncomplete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnWorkItemIncompleteCompleted(object state) {
            if ((this.ReturnWorkItemIncompleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnWorkItemIncompleteCompleted(this, new ReturnWorkItemIncompleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnWorkItemIncompleteAsync(QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteRequest request) {
            this.ReturnWorkItemIncompleteAsync(request, null);
        }
        
        public void ReturnWorkItemIncompleteAsync(QutSensors.Processor.ProcessorService.ReturnWorkItemIncompleteRequest request, object userState) {
            if ((this.onBeginReturnWorkItemIncompleteDelegate == null)) {
                this.onBeginReturnWorkItemIncompleteDelegate = new BeginOperationDelegate(this.OnBeginReturnWorkItemIncomplete);
            }
            if ((this.onEndReturnWorkItemIncompleteDelegate == null)) {
                this.onEndReturnWorkItemIncompleteDelegate = new EndOperationDelegate(this.OnEndReturnWorkItemIncomplete);
            }
            if ((this.onReturnWorkItemIncompleteCompletedDelegate == null)) {
                this.onReturnWorkItemIncompleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnWorkItemIncompleteCompleted);
            }
            base.InvokeAsync(this.onBeginReturnWorkItemIncompleteDelegate, new object[] {
                        request}, this.onEndReturnWorkItemIncompleteDelegate, this.onReturnWorkItemIncompleteCompletedDelegate, userState);
        }
        
        public QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteResponse ReturnWorkItemComplete(QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteRequest request) {
            return base.Channel.ReturnWorkItemComplete(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReturnWorkItemComplete(QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReturnWorkItemComplete(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteResponse EndReturnWorkItemComplete(System.IAsyncResult result) {
            return base.Channel.EndReturnWorkItemComplete(result);
        }
        
        private System.IAsyncResult OnBeginReturnWorkItemComplete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteRequest request = ((QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteRequest)(inValues[0]));
            return this.BeginReturnWorkItemComplete(request, callback, asyncState);
        }
        
        private object[] OnEndReturnWorkItemComplete(System.IAsyncResult result) {
            QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteResponse retVal = this.EndReturnWorkItemComplete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReturnWorkItemCompleteCompleted(object state) {
            if ((this.ReturnWorkItemCompleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReturnWorkItemCompleteCompleted(this, new ReturnWorkItemCompleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReturnWorkItemCompleteAsync(QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteRequest request) {
            this.ReturnWorkItemCompleteAsync(request, null);
        }
        
        public void ReturnWorkItemCompleteAsync(QutSensors.Processor.ProcessorService.ReturnWorkItemCompleteRequest request, object userState) {
            if ((this.onBeginReturnWorkItemCompleteDelegate == null)) {
                this.onBeginReturnWorkItemCompleteDelegate = new BeginOperationDelegate(this.OnBeginReturnWorkItemComplete);
            }
            if ((this.onEndReturnWorkItemCompleteDelegate == null)) {
                this.onEndReturnWorkItemCompleteDelegate = new EndOperationDelegate(this.OnEndReturnWorkItemComplete);
            }
            if ((this.onReturnWorkItemCompleteCompletedDelegate == null)) {
                this.onReturnWorkItemCompleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReturnWorkItemCompleteCompleted);
            }
            base.InvokeAsync(this.onBeginReturnWorkItemCompleteDelegate, new object[] {
                        request}, this.onEndReturnWorkItemCompleteDelegate, this.onReturnWorkItemCompleteCompletedDelegate, userState);
        }
    }
}
