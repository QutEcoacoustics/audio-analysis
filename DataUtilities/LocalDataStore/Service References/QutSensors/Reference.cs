//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LocalDataStore.QutSensors {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeploymentSearchParameters", Namespace="http://mquter.qut.edu.au/sensors/")]
    [System.SerializableAttribute()]
    public partial class DeploymentSearchParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<bool> IncludeTestsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Nullable<bool> IncludeTests {
            get {
                return this.IncludeTestsField;
            }
            set {
                if ((this.IncludeTestsField.Equals(value) != true)) {
                    this.IncludeTestsField = value;
                    this.RaisePropertyChanged("IncludeTests");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeploymentSearchResult", Namespace="http://mquter.qut.edu.au/sensors/")]
    [System.SerializableAttribute()]
    public partial class DeploymentSearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        private System.DateTime DateStartedField;
        
        private System.DateTime DateEndedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime DateStarted {
            get {
                return this.DateStartedField;
            }
            set {
                if ((this.DateStartedField.Equals(value) != true)) {
                    this.DateStartedField = value;
                    this.RaisePropertyChanged("DateStarted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime DateEnded {
            get {
                return this.DateEndedField;
            }
            set {
                if ((this.DateEndedField.Equals(value) != true)) {
                    this.DateEndedField = value;
                    this.RaisePropertyChanged("DateEnded");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchResult", Namespace="http://mquter.qut.edu.au/sensors/")]
    [System.SerializableAttribute()]
    public partial class SearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int TotalReadingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LocalDataStore.QutSensors.AudioReadingResult[] ReadingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TotalReadings {
            get {
                return this.TotalReadingsField;
            }
            set {
                if ((this.TotalReadingsField.Equals(value) != true)) {
                    this.TotalReadingsField = value;
                    this.RaisePropertyChanged("TotalReadings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public LocalDataStore.QutSensors.AudioReadingResult[] Readings {
            get {
                return this.ReadingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadingsField, value) != true)) {
                    this.ReadingsField = value;
                    this.RaisePropertyChanged("Readings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AudioReadingResult", Namespace="http://mquter.qut.edu.au/sensors/")]
    [System.SerializableAttribute()]
    public partial class AudioReadingResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AudioUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        private bool HasBeenReadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string AudioUrl {
            get {
                return this.AudioUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AudioUrlField, value) != true)) {
                    this.AudioUrlField = value;
                    this.RaisePropertyChanged("AudioUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool HasBeenRead {
            get {
                return this.HasBeenReadField;
            }
            set {
                if ((this.HasBeenReadField.Equals(value) != true)) {
                    this.HasBeenReadField = value;
                    this.RaisePropertyChanged("HasBeenRead");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchParameters", Namespace="http://mquter.qut.edu.au/sensors/")]
    [System.SerializableAttribute()]
    public partial class SearchParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AudioTagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SensorTagsField;
        
        private LocalDataStore.QutSensors.ReadStatus ReadStatusField;
        
        private System.Nullable<System.DateTime> FromDateField;
        
        private System.Nullable<System.DateTime> ToDateField;
        
        private System.Nullable<bool> IncludeTestDeploymentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string AudioTags {
            get {
                return this.AudioTagsField;
            }
            set {
                if ((object.ReferenceEquals(this.AudioTagsField, value) != true)) {
                    this.AudioTagsField = value;
                    this.RaisePropertyChanged("AudioTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SensorTags {
            get {
                return this.SensorTagsField;
            }
            set {
                if ((object.ReferenceEquals(this.SensorTagsField, value) != true)) {
                    this.SensorTagsField = value;
                    this.RaisePropertyChanged("SensorTags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public LocalDataStore.QutSensors.ReadStatus ReadStatus {
            get {
                return this.ReadStatusField;
            }
            set {
                if ((this.ReadStatusField.Equals(value) != true)) {
                    this.ReadStatusField = value;
                    this.RaisePropertyChanged("ReadStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.Nullable<System.DateTime> FromDate {
            get {
                return this.FromDateField;
            }
            set {
                if ((this.FromDateField.Equals(value) != true)) {
                    this.FromDateField = value;
                    this.RaisePropertyChanged("FromDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.Nullable<System.DateTime> ToDate {
            get {
                return this.ToDateField;
            }
            set {
                if ((this.ToDateField.Equals(value) != true)) {
                    this.ToDateField = value;
                    this.RaisePropertyChanged("ToDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.Nullable<bool> IncludeTestDeployments {
            get {
                return this.IncludeTestDeploymentsField;
            }
            set {
                if ((this.IncludeTestDeploymentsField.Equals(value) != true)) {
                    this.IncludeTestDeploymentsField = value;
                    this.RaisePropertyChanged("IncludeTestDeployments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReadStatus", Namespace="http://mquter.qut.edu.au/sensors/")]
    public enum ReadStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Read = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unread = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/", ConfigurationName="QutSensors.AudioReadingsSearchSoap")]
    public interface AudioReadingsSearchSoap {
        
        // CODEGEN: Generating message contract since element name parameters from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/FindDeployments", ReplyAction="*")]
        LocalDataStore.QutSensors.FindDeploymentsResponse FindDeployments(LocalDataStore.QutSensors.FindDeploymentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://mquter.qut.edu.au/sensors/FindDeployments", ReplyAction="*")]
        System.IAsyncResult BeginFindDeployments(LocalDataStore.QutSensors.FindDeploymentsRequest request, System.AsyncCallback callback, object asyncState);
        
        LocalDataStore.QutSensors.FindDeploymentsResponse EndFindDeployments(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name GetDeploymentReadingsResult from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/GetDeploymentReadings", ReplyAction="*")]
        LocalDataStore.QutSensors.GetDeploymentReadingsResponse GetDeploymentReadings(LocalDataStore.QutSensors.GetDeploymentReadingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://mquter.qut.edu.au/sensors/GetDeploymentReadings", ReplyAction="*")]
        System.IAsyncResult BeginGetDeploymentReadings(LocalDataStore.QutSensors.GetDeploymentReadingsRequest request, System.AsyncCallback callback, object asyncState);
        
        LocalDataStore.QutSensors.GetDeploymentReadingsResponse EndGetDeploymentReadings(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name parameters from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/GetReadings", ReplyAction="*")]
        LocalDataStore.QutSensors.GetReadingsResponse GetReadings(LocalDataStore.QutSensors.GetReadingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://mquter.qut.edu.au/sensors/GetReadings", ReplyAction="*")]
        System.IAsyncResult BeginGetReadings(LocalDataStore.QutSensors.GetReadingsRequest request, System.AsyncCallback callback, object asyncState);
        
        LocalDataStore.QutSensors.GetReadingsResponse EndGetReadings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/MarkAsRead", ReplyAction="*")]
        void MarkAsRead(System.Guid audioReadingID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://mquter.qut.edu.au/sensors/MarkAsRead", ReplyAction="*")]
        System.IAsyncResult BeginMarkAsRead(System.Guid audioReadingID, System.AsyncCallback callback, object asyncState);
        
        void EndMarkAsRead(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name tag from namespace http://mquter.qut.edu.au/sensors/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://mquter.qut.edu.au/sensors/AddTag", ReplyAction="*")]
        LocalDataStore.QutSensors.AddTagResponse AddTag(LocalDataStore.QutSensors.AddTagRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://mquter.qut.edu.au/sensors/AddTag", ReplyAction="*")]
        System.IAsyncResult BeginAddTag(LocalDataStore.QutSensors.AddTagRequest request, System.AsyncCallback callback, object asyncState);
        
        LocalDataStore.QutSensors.AddTagResponse EndAddTag(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindDeploymentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindDeployments", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public LocalDataStore.QutSensors.FindDeploymentsRequestBody Body;
        
        public FindDeploymentsRequest() {
        }
        
        public FindDeploymentsRequest(LocalDataStore.QutSensors.FindDeploymentsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class FindDeploymentsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public LocalDataStore.QutSensors.DeploymentSearchParameters parameters;
        
        public FindDeploymentsRequestBody() {
        }
        
        public FindDeploymentsRequestBody(LocalDataStore.QutSensors.DeploymentSearchParameters parameters) {
            this.parameters = parameters;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FindDeploymentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FindDeploymentsResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public LocalDataStore.QutSensors.FindDeploymentsResponseBody Body;
        
        public FindDeploymentsResponse() {
        }
        
        public FindDeploymentsResponse(LocalDataStore.QutSensors.FindDeploymentsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class FindDeploymentsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public LocalDataStore.QutSensors.DeploymentSearchResult[] FindDeploymentsResult;
        
        public FindDeploymentsResponseBody() {
        }
        
        public FindDeploymentsResponseBody(LocalDataStore.QutSensors.DeploymentSearchResult[] FindDeploymentsResult) {
            this.FindDeploymentsResult = FindDeploymentsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDeploymentReadingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDeploymentReadings", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public LocalDataStore.QutSensors.GetDeploymentReadingsRequestBody Body;
        
        public GetDeploymentReadingsRequest() {
        }
        
        public GetDeploymentReadingsRequest(LocalDataStore.QutSensors.GetDeploymentReadingsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class GetDeploymentReadingsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid deploymentID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int count;
        
        public GetDeploymentReadingsRequestBody() {
        }
        
        public GetDeploymentReadingsRequestBody(System.Guid deploymentID, int count) {
            this.deploymentID = deploymentID;
            this.count = count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDeploymentReadingsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDeploymentReadingsResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public LocalDataStore.QutSensors.GetDeploymentReadingsResponseBody Body;
        
        public GetDeploymentReadingsResponse() {
        }
        
        public GetDeploymentReadingsResponse(LocalDataStore.QutSensors.GetDeploymentReadingsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class GetDeploymentReadingsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public LocalDataStore.QutSensors.SearchResult GetDeploymentReadingsResult;
        
        public GetDeploymentReadingsResponseBody() {
        }
        
        public GetDeploymentReadingsResponseBody(LocalDataStore.QutSensors.SearchResult GetDeploymentReadingsResult) {
            this.GetDeploymentReadingsResult = GetDeploymentReadingsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReadingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetReadings", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public LocalDataStore.QutSensors.GetReadingsRequestBody Body;
        
        public GetReadingsRequest() {
        }
        
        public GetReadingsRequest(LocalDataStore.QutSensors.GetReadingsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class GetReadingsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public LocalDataStore.QutSensors.SearchParameters parameters;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int startRowIndex;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int pageSize;
        
        public GetReadingsRequestBody() {
        }
        
        public GetReadingsRequestBody(LocalDataStore.QutSensors.SearchParameters parameters, int startRowIndex, int pageSize) {
            this.parameters = parameters;
            this.startRowIndex = startRowIndex;
            this.pageSize = pageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetReadingsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetReadingsResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public LocalDataStore.QutSensors.GetReadingsResponseBody Body;
        
        public GetReadingsResponse() {
        }
        
        public GetReadingsResponse(LocalDataStore.QutSensors.GetReadingsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class GetReadingsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public LocalDataStore.QutSensors.SearchResult GetReadingsResult;
        
        public GetReadingsResponseBody() {
        }
        
        public GetReadingsResponseBody(LocalDataStore.QutSensors.SearchResult GetReadingsResult) {
            this.GetReadingsResult = GetReadingsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddTagRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddTag", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public LocalDataStore.QutSensors.AddTagRequestBody Body;
        
        public AddTagRequest() {
        }
        
        public AddTagRequest(LocalDataStore.QutSensors.AddTagRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://mquter.qut.edu.au/sensors/")]
    public partial class AddTagRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid audioReadingID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public double time;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public double duration;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string tag;
        
        public AddTagRequestBody() {
        }
        
        public AddTagRequestBody(System.Guid audioReadingID, double time, double duration, string tag) {
            this.audioReadingID = audioReadingID;
            this.time = time;
            this.duration = duration;
            this.tag = tag;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddTagResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddTagResponse", Namespace="http://mquter.qut.edu.au/sensors/", Order=0)]
        public LocalDataStore.QutSensors.AddTagResponseBody Body;
        
        public AddTagResponse() {
        }
        
        public AddTagResponse(LocalDataStore.QutSensors.AddTagResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class AddTagResponseBody {
        
        public AddTagResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface AudioReadingsSearchSoapChannel : LocalDataStore.QutSensors.AudioReadingsSearchSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class FindDeploymentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindDeploymentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LocalDataStore.QutSensors.DeploymentSearchResult[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LocalDataStore.QutSensors.DeploymentSearchResult[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetDeploymentReadingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeploymentReadingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LocalDataStore.QutSensors.SearchResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LocalDataStore.QutSensors.SearchResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetReadingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReadingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public LocalDataStore.QutSensors.SearchResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((LocalDataStore.QutSensors.SearchResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AudioReadingsSearchSoapClient : System.ServiceModel.ClientBase<LocalDataStore.QutSensors.AudioReadingsSearchSoap>, LocalDataStore.QutSensors.AudioReadingsSearchSoap {
        
        private BeginOperationDelegate onBeginFindDeploymentsDelegate;
        
        private EndOperationDelegate onEndFindDeploymentsDelegate;
        
        private System.Threading.SendOrPostCallback onFindDeploymentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeploymentReadingsDelegate;
        
        private EndOperationDelegate onEndGetDeploymentReadingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeploymentReadingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReadingsDelegate;
        
        private EndOperationDelegate onEndGetReadingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReadingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarkAsReadDelegate;
        
        private EndOperationDelegate onEndMarkAsReadDelegate;
        
        private System.Threading.SendOrPostCallback onMarkAsReadCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddTagDelegate;
        
        private EndOperationDelegate onEndAddTagDelegate;
        
        private System.Threading.SendOrPostCallback onAddTagCompletedDelegate;
        
        public AudioReadingsSearchSoapClient() {
        }
        
        public AudioReadingsSearchSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AudioReadingsSearchSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AudioReadingsSearchSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AudioReadingsSearchSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<FindDeploymentsCompletedEventArgs> FindDeploymentsCompleted;
        
        public event System.EventHandler<GetDeploymentReadingsCompletedEventArgs> GetDeploymentReadingsCompleted;
        
        public event System.EventHandler<GetReadingsCompletedEventArgs> GetReadingsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MarkAsReadCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddTagCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LocalDataStore.QutSensors.FindDeploymentsResponse LocalDataStore.QutSensors.AudioReadingsSearchSoap.FindDeployments(LocalDataStore.QutSensors.FindDeploymentsRequest request) {
            return base.Channel.FindDeployments(request);
        }
        
        public LocalDataStore.QutSensors.DeploymentSearchResult[] FindDeployments(LocalDataStore.QutSensors.DeploymentSearchParameters parameters) {
            LocalDataStore.QutSensors.FindDeploymentsRequest inValue = new LocalDataStore.QutSensors.FindDeploymentsRequest();
            inValue.Body = new LocalDataStore.QutSensors.FindDeploymentsRequestBody();
            inValue.Body.parameters = parameters;
            LocalDataStore.QutSensors.FindDeploymentsResponse retVal = ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).FindDeployments(inValue);
            return retVal.Body.FindDeploymentsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LocalDataStore.QutSensors.AudioReadingsSearchSoap.BeginFindDeployments(LocalDataStore.QutSensors.FindDeploymentsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindDeployments(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindDeployments(LocalDataStore.QutSensors.DeploymentSearchParameters parameters, System.AsyncCallback callback, object asyncState) {
            LocalDataStore.QutSensors.FindDeploymentsRequest inValue = new LocalDataStore.QutSensors.FindDeploymentsRequest();
            inValue.Body = new LocalDataStore.QutSensors.FindDeploymentsRequestBody();
            inValue.Body.parameters = parameters;
            return ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).BeginFindDeployments(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LocalDataStore.QutSensors.FindDeploymentsResponse LocalDataStore.QutSensors.AudioReadingsSearchSoap.EndFindDeployments(System.IAsyncResult result) {
            return base.Channel.EndFindDeployments(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public LocalDataStore.QutSensors.DeploymentSearchResult[] EndFindDeployments(System.IAsyncResult result) {
            LocalDataStore.QutSensors.FindDeploymentsResponse retVal = ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).EndFindDeployments(result);
            return retVal.Body.FindDeploymentsResult;
        }
        
        private System.IAsyncResult OnBeginFindDeployments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LocalDataStore.QutSensors.DeploymentSearchParameters parameters = ((LocalDataStore.QutSensors.DeploymentSearchParameters)(inValues[0]));
            return this.BeginFindDeployments(parameters, callback, asyncState);
        }
        
        private object[] OnEndFindDeployments(System.IAsyncResult result) {
            LocalDataStore.QutSensors.DeploymentSearchResult[] retVal = this.EndFindDeployments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindDeploymentsCompleted(object state) {
            if ((this.FindDeploymentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindDeploymentsCompleted(this, new FindDeploymentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindDeploymentsAsync(LocalDataStore.QutSensors.DeploymentSearchParameters parameters) {
            this.FindDeploymentsAsync(parameters, null);
        }
        
        public void FindDeploymentsAsync(LocalDataStore.QutSensors.DeploymentSearchParameters parameters, object userState) {
            if ((this.onBeginFindDeploymentsDelegate == null)) {
                this.onBeginFindDeploymentsDelegate = new BeginOperationDelegate(this.OnBeginFindDeployments);
            }
            if ((this.onEndFindDeploymentsDelegate == null)) {
                this.onEndFindDeploymentsDelegate = new EndOperationDelegate(this.OnEndFindDeployments);
            }
            if ((this.onFindDeploymentsCompletedDelegate == null)) {
                this.onFindDeploymentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindDeploymentsCompleted);
            }
            base.InvokeAsync(this.onBeginFindDeploymentsDelegate, new object[] {
                        parameters}, this.onEndFindDeploymentsDelegate, this.onFindDeploymentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LocalDataStore.QutSensors.GetDeploymentReadingsResponse LocalDataStore.QutSensors.AudioReadingsSearchSoap.GetDeploymentReadings(LocalDataStore.QutSensors.GetDeploymentReadingsRequest request) {
            return base.Channel.GetDeploymentReadings(request);
        }
        
        public LocalDataStore.QutSensors.SearchResult GetDeploymentReadings(System.Guid deploymentID, int count) {
            LocalDataStore.QutSensors.GetDeploymentReadingsRequest inValue = new LocalDataStore.QutSensors.GetDeploymentReadingsRequest();
            inValue.Body = new LocalDataStore.QutSensors.GetDeploymentReadingsRequestBody();
            inValue.Body.deploymentID = deploymentID;
            inValue.Body.count = count;
            LocalDataStore.QutSensors.GetDeploymentReadingsResponse retVal = ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).GetDeploymentReadings(inValue);
            return retVal.Body.GetDeploymentReadingsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LocalDataStore.QutSensors.AudioReadingsSearchSoap.BeginGetDeploymentReadings(LocalDataStore.QutSensors.GetDeploymentReadingsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeploymentReadings(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDeploymentReadings(System.Guid deploymentID, int count, System.AsyncCallback callback, object asyncState) {
            LocalDataStore.QutSensors.GetDeploymentReadingsRequest inValue = new LocalDataStore.QutSensors.GetDeploymentReadingsRequest();
            inValue.Body = new LocalDataStore.QutSensors.GetDeploymentReadingsRequestBody();
            inValue.Body.deploymentID = deploymentID;
            inValue.Body.count = count;
            return ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).BeginGetDeploymentReadings(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LocalDataStore.QutSensors.GetDeploymentReadingsResponse LocalDataStore.QutSensors.AudioReadingsSearchSoap.EndGetDeploymentReadings(System.IAsyncResult result) {
            return base.Channel.EndGetDeploymentReadings(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public LocalDataStore.QutSensors.SearchResult EndGetDeploymentReadings(System.IAsyncResult result) {
            LocalDataStore.QutSensors.GetDeploymentReadingsResponse retVal = ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).EndGetDeploymentReadings(result);
            return retVal.Body.GetDeploymentReadingsResult;
        }
        
        private System.IAsyncResult OnBeginGetDeploymentReadings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid deploymentID = ((System.Guid)(inValues[0]));
            int count = ((int)(inValues[1]));
            return this.BeginGetDeploymentReadings(deploymentID, count, callback, asyncState);
        }
        
        private object[] OnEndGetDeploymentReadings(System.IAsyncResult result) {
            LocalDataStore.QutSensors.SearchResult retVal = this.EndGetDeploymentReadings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeploymentReadingsCompleted(object state) {
            if ((this.GetDeploymentReadingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeploymentReadingsCompleted(this, new GetDeploymentReadingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeploymentReadingsAsync(System.Guid deploymentID, int count) {
            this.GetDeploymentReadingsAsync(deploymentID, count, null);
        }
        
        public void GetDeploymentReadingsAsync(System.Guid deploymentID, int count, object userState) {
            if ((this.onBeginGetDeploymentReadingsDelegate == null)) {
                this.onBeginGetDeploymentReadingsDelegate = new BeginOperationDelegate(this.OnBeginGetDeploymentReadings);
            }
            if ((this.onEndGetDeploymentReadingsDelegate == null)) {
                this.onEndGetDeploymentReadingsDelegate = new EndOperationDelegate(this.OnEndGetDeploymentReadings);
            }
            if ((this.onGetDeploymentReadingsCompletedDelegate == null)) {
                this.onGetDeploymentReadingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeploymentReadingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeploymentReadingsDelegate, new object[] {
                        deploymentID,
                        count}, this.onEndGetDeploymentReadingsDelegate, this.onGetDeploymentReadingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LocalDataStore.QutSensors.GetReadingsResponse LocalDataStore.QutSensors.AudioReadingsSearchSoap.GetReadings(LocalDataStore.QutSensors.GetReadingsRequest request) {
            return base.Channel.GetReadings(request);
        }
        
        public LocalDataStore.QutSensors.SearchResult GetReadings(LocalDataStore.QutSensors.SearchParameters parameters, int startRowIndex, int pageSize) {
            LocalDataStore.QutSensors.GetReadingsRequest inValue = new LocalDataStore.QutSensors.GetReadingsRequest();
            inValue.Body = new LocalDataStore.QutSensors.GetReadingsRequestBody();
            inValue.Body.parameters = parameters;
            inValue.Body.startRowIndex = startRowIndex;
            inValue.Body.pageSize = pageSize;
            LocalDataStore.QutSensors.GetReadingsResponse retVal = ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).GetReadings(inValue);
            return retVal.Body.GetReadingsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LocalDataStore.QutSensors.AudioReadingsSearchSoap.BeginGetReadings(LocalDataStore.QutSensors.GetReadingsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReadings(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReadings(LocalDataStore.QutSensors.SearchParameters parameters, int startRowIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            LocalDataStore.QutSensors.GetReadingsRequest inValue = new LocalDataStore.QutSensors.GetReadingsRequest();
            inValue.Body = new LocalDataStore.QutSensors.GetReadingsRequestBody();
            inValue.Body.parameters = parameters;
            inValue.Body.startRowIndex = startRowIndex;
            inValue.Body.pageSize = pageSize;
            return ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).BeginGetReadings(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LocalDataStore.QutSensors.GetReadingsResponse LocalDataStore.QutSensors.AudioReadingsSearchSoap.EndGetReadings(System.IAsyncResult result) {
            return base.Channel.EndGetReadings(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public LocalDataStore.QutSensors.SearchResult EndGetReadings(System.IAsyncResult result) {
            LocalDataStore.QutSensors.GetReadingsResponse retVal = ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).EndGetReadings(result);
            return retVal.Body.GetReadingsResult;
        }
        
        private System.IAsyncResult OnBeginGetReadings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            LocalDataStore.QutSensors.SearchParameters parameters = ((LocalDataStore.QutSensors.SearchParameters)(inValues[0]));
            int startRowIndex = ((int)(inValues[1]));
            int pageSize = ((int)(inValues[2]));
            return this.BeginGetReadings(parameters, startRowIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetReadings(System.IAsyncResult result) {
            LocalDataStore.QutSensors.SearchResult retVal = this.EndGetReadings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReadingsCompleted(object state) {
            if ((this.GetReadingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReadingsCompleted(this, new GetReadingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReadingsAsync(LocalDataStore.QutSensors.SearchParameters parameters, int startRowIndex, int pageSize) {
            this.GetReadingsAsync(parameters, startRowIndex, pageSize, null);
        }
        
        public void GetReadingsAsync(LocalDataStore.QutSensors.SearchParameters parameters, int startRowIndex, int pageSize, object userState) {
            if ((this.onBeginGetReadingsDelegate == null)) {
                this.onBeginGetReadingsDelegate = new BeginOperationDelegate(this.OnBeginGetReadings);
            }
            if ((this.onEndGetReadingsDelegate == null)) {
                this.onEndGetReadingsDelegate = new EndOperationDelegate(this.OnEndGetReadings);
            }
            if ((this.onGetReadingsCompletedDelegate == null)) {
                this.onGetReadingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReadingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReadingsDelegate, new object[] {
                        parameters,
                        startRowIndex,
                        pageSize}, this.onEndGetReadingsDelegate, this.onGetReadingsCompletedDelegate, userState);
        }
        
        public void MarkAsRead(System.Guid audioReadingID) {
            base.Channel.MarkAsRead(audioReadingID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMarkAsRead(System.Guid audioReadingID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarkAsRead(audioReadingID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndMarkAsRead(System.IAsyncResult result) {
            base.Channel.EndMarkAsRead(result);
        }
        
        private System.IAsyncResult OnBeginMarkAsRead(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid audioReadingID = ((System.Guid)(inValues[0]));
            return this.BeginMarkAsRead(audioReadingID, callback, asyncState);
        }
        
        private object[] OnEndMarkAsRead(System.IAsyncResult result) {
            this.EndMarkAsRead(result);
            return null;
        }
        
        private void OnMarkAsReadCompleted(object state) {
            if ((this.MarkAsReadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarkAsReadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarkAsReadAsync(System.Guid audioReadingID) {
            this.MarkAsReadAsync(audioReadingID, null);
        }
        
        public void MarkAsReadAsync(System.Guid audioReadingID, object userState) {
            if ((this.onBeginMarkAsReadDelegate == null)) {
                this.onBeginMarkAsReadDelegate = new BeginOperationDelegate(this.OnBeginMarkAsRead);
            }
            if ((this.onEndMarkAsReadDelegate == null)) {
                this.onEndMarkAsReadDelegate = new EndOperationDelegate(this.OnEndMarkAsRead);
            }
            if ((this.onMarkAsReadCompletedDelegate == null)) {
                this.onMarkAsReadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarkAsReadCompleted);
            }
            base.InvokeAsync(this.onBeginMarkAsReadDelegate, new object[] {
                        audioReadingID}, this.onEndMarkAsReadDelegate, this.onMarkAsReadCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LocalDataStore.QutSensors.AddTagResponse LocalDataStore.QutSensors.AudioReadingsSearchSoap.AddTag(LocalDataStore.QutSensors.AddTagRequest request) {
            return base.Channel.AddTag(request);
        }
        
        public void AddTag(System.Guid audioReadingID, double time, double duration, string tag) {
            LocalDataStore.QutSensors.AddTagRequest inValue = new LocalDataStore.QutSensors.AddTagRequest();
            inValue.Body = new LocalDataStore.QutSensors.AddTagRequestBody();
            inValue.Body.audioReadingID = audioReadingID;
            inValue.Body.time = time;
            inValue.Body.duration = duration;
            inValue.Body.tag = tag;
            LocalDataStore.QutSensors.AddTagResponse retVal = ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).AddTag(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult LocalDataStore.QutSensors.AudioReadingsSearchSoap.BeginAddTag(LocalDataStore.QutSensors.AddTagRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddTag(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddTag(System.Guid audioReadingID, double time, double duration, string tag, System.AsyncCallback callback, object asyncState) {
            LocalDataStore.QutSensors.AddTagRequest inValue = new LocalDataStore.QutSensors.AddTagRequest();
            inValue.Body = new LocalDataStore.QutSensors.AddTagRequestBody();
            inValue.Body.audioReadingID = audioReadingID;
            inValue.Body.time = time;
            inValue.Body.duration = duration;
            inValue.Body.tag = tag;
            return ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).BeginAddTag(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LocalDataStore.QutSensors.AddTagResponse LocalDataStore.QutSensors.AudioReadingsSearchSoap.EndAddTag(System.IAsyncResult result) {
            return base.Channel.EndAddTag(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddTag(System.IAsyncResult result) {
            LocalDataStore.QutSensors.AddTagResponse retVal = ((LocalDataStore.QutSensors.AudioReadingsSearchSoap)(this)).EndAddTag(result);
        }
        
        private System.IAsyncResult OnBeginAddTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid audioReadingID = ((System.Guid)(inValues[0]));
            double time = ((double)(inValues[1]));
            double duration = ((double)(inValues[2]));
            string tag = ((string)(inValues[3]));
            return this.BeginAddTag(audioReadingID, time, duration, tag, callback, asyncState);
        }
        
        private object[] OnEndAddTag(System.IAsyncResult result) {
            this.EndAddTag(result);
            return null;
        }
        
        private void OnAddTagCompleted(object state) {
            if ((this.AddTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddTagCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddTagAsync(System.Guid audioReadingID, double time, double duration, string tag) {
            this.AddTagAsync(audioReadingID, time, duration, tag, null);
        }
        
        public void AddTagAsync(System.Guid audioReadingID, double time, double duration, string tag, object userState) {
            if ((this.onBeginAddTagDelegate == null)) {
                this.onBeginAddTagDelegate = new BeginOperationDelegate(this.OnBeginAddTag);
            }
            if ((this.onEndAddTagDelegate == null)) {
                this.onEndAddTagDelegate = new EndOperationDelegate(this.OnEndAddTag);
            }
            if ((this.onAddTagCompletedDelegate == null)) {
                this.onAddTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddTagCompleted);
            }
            base.InvokeAsync(this.onBeginAddTagDelegate, new object[] {
                        audioReadingID,
                        time,
                        duration,
                        tag}, this.onEndAddTagDelegate, this.onAddTagCompletedDelegate, userState);
        }
    }
}
